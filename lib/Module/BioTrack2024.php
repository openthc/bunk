<?php
/**
 * BioTrack 2024 API Group Controller
 *
 * SPDX-License-Identifier: MIT
 */

namespace OpenTHC\Bunk\Module;

class BioTrack2024 extends \OpenTHC\Module\Base
{
	/**
	 * @param \OpenTHC\App $a Slim Application
	 */
	function __invoke(\OpenTHC\App $a)
	{
		// Documentation
		$a->get('', function($REQ, $RES, $ARG) {
			return _page_doc_merge('biotrack-v2024');
		});

		// User / Authenticate
		$a->get('/v1/user', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				'NextCursor' => 0,
				'NextTransactionID' => 0,
				'User' => [
					[
						'Active' => true,
						'Admin' => true,
						'ID' => 0,
						'Permission' => [
							'string',
						],
						'TransactionID' => 0,
						'Username' => 'string',
					],
				],
			]);
		});
		$a->post('/v1/user', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				'SessionTime' => 0,
				'TransactionID' => 0,
				'User' => [
					'Active' => true,
					'Admin' => true,
					'ID' => 0,
					'Permission' => [
						'string',
					],
					'TransactionID' => 0,
					'Username' => 'string',
				],
			]);
		});
		$a->post('/v1/user/login', function($REQ, $RES, $ARG) {
			session_start();

			return $RES->withJSON([
				'session' => session_id()
			]);
		});
		$a->post('/v1/user/password-reset-request', function($REQ, $RES, $ARG) {
			// No 200 response given
			return $RES->withJSON();
		});
		$a->delete('/v1/user/{id}', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				'SessionTime' => 0,
				'TransactionID' => 0,
				'User' => [
					'Active' => true,
					'Admin' => true,
					'ID' => 0,
					'Permission' => [
						'string',
					],
					'TransactionID' => 0,
					'Username' => 'string',
				],
			]);
		});
		$a->get('/v1/user/{id}', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				'User' => [
					'Active' => true,
					'Admin' => true,
					'ID' => 0,
					'Permission' => [
						'string',
					],
					'TransactionID' => 0,
					'Username' => 'string',
				],
			]);
		});
		$a->put('/v1/user/{id}', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				'SessionTime' => 0,
				'TransactionID' => 0,
				'User' => [
					'Active' => true,
					'Admin' => true,
					'ID' => 0,
					'Permission' => [
						'string',
					],
					'TransactionID' => 0,
					'Username' => 'string',
				],
			]);
		});

		// Permission
		$a->get('/v1/permission', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				'Permission' => [
					[
						'ID' => 0,
						'Name' => 'string',
					],
				],
				'SessionTime' => 0,
			]);
		});

		// Plant Room
		$a->get('/v1/plant/room', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				'NextCursor' => 0,
				'NextTransactionID' => 0,
				'Room' => [
					[
						'Deleted' => true,
						'ExternalID' => 'string',
						'ID' => 0,
						'LocationLicense' => 'string',
						'Name' => 'string',
						'TransactionID' => 0,
						'UpdatedOn' => 'string',
					],
				],
			]);
		});
		$a->post('/v1/plant/room', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				'GrowRoom' => [
					'Deleted' => true,
					'ExternalID' => 'string',
					'ID' => 0,
					'LocationLicense' => 'string',
					'Name' => 'string',
					'TransactionID' => 0,
					'UpdatedOn' => 'string',
				],
				'SessionTime' => 0,
				'TransactionID' => 0,
			]);
		});
		$a->delete('/v1/plant/room/{id}', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				'GrowRoom' => [
					'Deleted' => true,
					'ExternalID' => 'string',
					'ID' => 0,
					'LocationLicense' => 'string',
					'Name' => 'string',
					'TransactionID' => 0,
					'UpdatedOn' => 'string',
				],
				'SessionTime' => 0,
				'TransactionID' => 0,
			]);
		});
		$a->get('/v1/plant/room/{id}', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				'GrowRoom' => [
					'Deleted' => true,
					'ExternalID' => 'string',
					'ID' => 0,
					'LocationLicense' => 'string',
					'Name' => 'string',
					'TransactionID' => 0,
					'UpdatedOn' => 'string',
				],
			]);
		});
		$a->put('/v1/plant/room/{id}', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				'GrowRoom' => [
					'Deleted' => true,
					'ExternalID' => 'string',
					'ID' => 0,
					'LocationLicense' => 'string',
					'Name' => 'string',
					'TransactionID' => 0,
					'UpdatedOn' => 'string',
				],
				'SessionTime' => 0,
				'TransactionID' => 0,
			]);
		});

		// Inventory Room
		$a->get('/v1/inventory/room', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				'NextCursor' => 0,
				'NextTransactionID' => 0,
				'Room' => [
					[
						'Deleted' => true,
						'ExternalID' => '6f913e54-c6ff-4f8c-ba52-f92fb12ced88',
						'ID' => 12345,
						'LocationLicense' => 'LocLic101',
						'Name' => 'My Storeroom #2',
						'Quarantine' => true,
						'TransactionID' => 61092,
					],
				],
			]);
		});
		$a->post('/v1/inventory/room', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				'InventoryRoomResponse' => [
					'InventoryRoom' => [
						'Deleted' => true,
						'ExternalID' => '6f913e54-c6ff-4f8c-ba52-f92fb12ced88',
						'ID' => 12345,
						'LocationLicense' => 'LocLic101',
						'Name' => 'My Storeroom #2',
						'Quarantine' => true,
						'TransactionID' => 61092,
					],
					'SessionTime' => 0,
					'TransactionID' => 0,
				],
			]);
		});
		$a->delete('/v1/inventory/room/{id}', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				'InventoryRoom' => [
					'Deleted' => true,
					'ExternalID' => '6f913e54-c6ff-4f8c-ba52-f92fb12ced88',
					'ID' => 12345,
					'LocationLicense' => 'LocLic101',
					'Name' => 'My Storeroom #2',
					'Quarantine' => true,
					'TransactionID' => 61092,
				],
				'SessionTime' => 0,
				'TransactionID' => 0,
			]);
		});
		$a->get('/v1/inventory/room/{id}', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				'InventoryRoom' => [
					'Deleted' => true,
					'ExternalID' => '6f913e54-c6ff-4f8c-ba52-f92fb12ced88',
					'ID' => 12345,
					'LocationLicense' => 'LocLic101',
					'Name' => 'My Storeroom #2',
					'Quarantine' => true,
					'TransactionID' => 61092,
				],
				'SessionTime' => 0,
				'TransactionID' => 0,
			]);
		});
		$a->put('/v1/inventory/room/{id}', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				'InventoryRoom' => [
					'Deleted' => true,
					'ExternalID' => '6f913e54-c6ff-4f8c-ba52-f92fb12ced88',
					'ID' => 12345,
					'LocationLicense' => 'LocLic101',
					'Name' => 'My Storeroom #2',
					'Quarantine' => true,
					'TransactionID' => 61092,
				],
				'SessionTime' => 0,
				'TransactionID' => 0,
			]);
		});

		// Plant
		$a->get('/v1/plant', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				'NextCursor' => 0,
				'NextTransactionID' => 0,
				'Plant' => [
					[
						'BirthDate' => 'string',
						'Converted' => true,
						'CureCollections' => 0,
						'Deleted' => true,
						'DestroyReason' => 'string',
						'DestroyReasonID' => 0,
						'DestroyScheduled' => true,
						'DestroyScheduledTime' => 'string',
						'ExternalID' => 'string',
						'HarvestBatchID' => 'string',
						'HarvestCollections' => 0,
						'HarvestScheduled' => true,
						'ID' => 'string',
						'Location' => 'string',
						'Mother' => true,
						'OrgID' => 0,
						'ParentPlantID' => 'string',
						'RoomID' => 0,
						'SessionTime' => 0,
						'SourceInventoryID' => 'string',
						'State' => 'string',
						'StateID' => 0,
						'Strain' => 'string',
						'TransactionID' => 0,
					],
				],
			]);
		});
		$a->post('/v1/plant', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				'Plant' => [
					[
						'BirthDate' => 'string',
						'Converted' => true,
						'CureCollections' => 0,
						'Deleted' => true,
						'DestroyReason' => 'string',
						'DestroyReasonID' => 0,
						'DestroyScheduled' => true,
						'DestroyScheduledTime' => 'string',
						'ExternalID' => 'string',
						'HarvestBatchID' => 'string',
						'HarvestCollections' => 0,
						'HarvestScheduled' => true,
						'ID' => 'string',
						'Location' => 'string',
						'Mother' => true,
						'OrgID' => 0,
						'ParentPlantID' => 'string',
						'RoomID' => 0,
						'SessionTime' => 0,
						'SourceInventoryID' => 'string',
						'State' => 'string',
						'StateID' => 0,
						'Strain' => 'string',
						'TransactionID' => 0,
					],
				],
				'SourceInventory' => [
					'ActiveSampleInventoryID' => 'string',
					'Deleted' => true,
					'Destroyed' => true,
					'Dried' => true,
					'ExpirationDate' => 'string',
					'ExternalID' => 'string',
					'ID' => 'string',
					'Initial' => true,
					'InventoryParentID' => [
						'string',
					],
					'InventoryType' => 0,
					'IsSample' => true,
					'LabSample' => [
						[
							'Amount' => 0,
							'AmountUsed' => 0,
							'CertOfAnalysisHyperlink' => 'string',
							'Deleted' => true,
							'ID' => 0,
							'InventoryID' => 'string',
							'InventoryType' => 0,
							'LabLicense' => 'string',
							'LocationLicense' => 'string',
							'Medical' => true,
							'MedicalGrade' => true,
							'ParentID' => 'string',
							'QualityControlDataHyperlink' => 'string',
							'Result' => 'string',
							'RnD' => true,
							'SampleUse' => 'string',
							'SessionTime' => 0,
							'TestingData' => [
								[
									'LabAnalysisTime' => '2024-01-31T10:00:00.000Z',
									'SamplePreparationTime' => '2024-01-31T10:00:00.000Z',
									'TestID' => 0,
									'TestResult' => [
										[
											'LabProvided' => true,
											'TestPanel' => 'string',
											'TestPass' => true,
											'TestValue' => 0,
											'TransactionID' => 0,
										],
									],
								],
							],
							'TransactionID' => 0,
						],
					],
					'LocationLicense' => 'string',
					'MedUsableWeight' => 0,
					'Medicated' => true,
					'NetPackageWeight' => 0,
					'PackageDate' => 'string',
					'ProductName' => 'string',
					'ProductionBatchID' => 0,
					'QAStatus' => 'string',
					'RecUsableWeight' => 0,
					'RemainingAmount' => 0,
					'Remediated' => true,
					'RemediationCount' => 0,
					'RemediationEligible' => true,
					'Restocked' => true,
					'Rework' => true,
					'RoomID' => 0,
					'Seized' => true,
					'SessionTime' => 0,
					'SourcePlantID' => 'string',
					'StateProductIdentifier' => 'string',
					'Status' => 'string',
					'Strain' => 'string',
					'TransactionID' => 0,
					'UOM' => 'string',
					'UnitBased' => true,
					'UsableWeight' => 0,
				],
				'TransactionID' => 0,
			]);
		});
		$a->put('/v1/plant/convert/inventory', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				'Inventory' => [
					[
						'ActiveSampleInventoryID' => 'string',
						'Deleted' => true,
						'Destroyed' => true,
						'Dried' => true,
						'ExpirationDate' => 'string',
						'ExternalID' => 'string',
						'ID' => 'string',
						'Initial' => true,
						'InventoryParentID' => [
							'string',
						],
						'InventoryType' => 0,
						'IsSample' => true,
						'LabSample' => [
							[
								'Amount' => 0,
								'AmountUsed' => 0,
								'CertOfAnalysisHyperlink' => 'string',
								'Deleted' => true,
								'ID' => 0,
								'InventoryID' => 'string',
								'InventoryType' => 0,
								'LabLicense' => 'string',
								'LocationLicense' => 'string',
								'Medical' => true,
								'MedicalGrade' => true,
								'ParentID' => 'string',
								'QualityControlDataHyperlink' => 'string',
								'Result' => 'string',
								'RnD' => true,
								'SampleUse' => 'string',
								'SessionTime' => 0,
								'TestingData' => [
									[
										'LabAnalysisTime' => '2024-01-31T10:00:00.000Z',
										'SamplePreparationTime' => '2024-01-31T10:00:00.000Z',
										'TestID' => 0,
										'TestResult' => [
											[
												'LabProvided' => true,
												'TestPanel' => 'string',
												'TestPass' => true,
												'TestValue' => 0,
												'TransactionID' => 0,
											],
										],
									],
								],
								'TransactionID' => 0,
							],
						],
						'LocationLicense' => 'string',
						'MedUsableWeight' => 0,
						'Medicated' => true,
						'NetPackageWeight' => 0,
						'PackageDate' => 'string',
						'ProductName' => 'string',
						'ProductionBatchID' => 0,
						'QAStatus' => 'string',
						'RecUsableWeight' => 0,
						'RemainingAmount' => 0,
						'Remediated' => true,
						'RemediationCount' => 0,
						'RemediationEligible' => true,
						'Restocked' => true,
						'Rework' => true,
						'RoomID' => 0,
						'Seized' => true,
						'SessionTime' => 0,
						'SourcePlantID' => 'string',
						'StateProductIdentifier' => 'string',
						'Status' => 'string',
						'Strain' => 'string',
						'TransactionID' => 0,
						'UOM' => 'string',
						'UnitBased' => true,
						'UsableWeight' => 0,
					],
				],
				'Sessiontime' => 'string',
				'TransactionID' => 0,
			]);
		});
		$a->put('/v1/plant/destroy', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				'DestroyReason' => 'string',
				'Plant' => [
					[
						'BirthDate' => 'string',
						'Converted' => true,
						'CureCollections' => 0,
						'Deleted' => true,
						'DestroyReason' => 'string',
						'DestroyReasonID' => 0,
						'DestroyScheduled' => true,
						'DestroyScheduledTime' => 'string',
						'ExternalID' => 'string',
						'HarvestBatchID' => 'string',
						'HarvestCollections' => 0,
						'HarvestScheduled' => true,
						'ID' => 'string',
						'Location' => 'string',
						'Mother' => true,
						'OrgID' => 0,
						'ParentPlantID' => 'string',
						'RoomID' => 0,
						'SessionTime' => 0,
						'SourceInventoryID' => 'string',
						'State' => 'string',
						'StateID' => 0,
						'Strain' => 'string',
						'TransactionID' => 0,
					],
				],
				'ReasonExtended' => 0,
				'SessionTime' => 0,
				'TransactionID' => 0,
			]);
		});
		$a->put('/v1/plant/destroy/schedule', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				'DestroyReason' => 'string',
				'Plant' => [
					[
						'BirthDate' => 'string',
						'Converted' => true,
						'CureCollections' => 0,
						'Deleted' => true,
						'DestroyReason' => 'string',
						'DestroyReasonID' => 0,
						'DestroyScheduled' => true,
						'DestroyScheduledTime' => 'string',
						'ExternalID' => 'string',
						'HarvestBatchID' => 'string',
						'HarvestCollections' => 0,
						'HarvestScheduled' => true,
						'ID' => 'string',
						'Location' => 'string',
						'Mother' => true,
						'OrgID' => 0,
						'ParentPlantID' => 'string',
						'RoomID' => 0,
						'SessionTime' => 0,
						'SourceInventoryID' => 'string',
						'State' => 'string',
						'StateID' => 0,
						'Strain' => 'string',
						'TransactionID' => 0,
					],
				],
				'ReasonExtended' => 0,
				'SessionTime' => 0,
				'TransactionID' => 0,
			]);
		});
		$a->put('/v1/plant/destroy/schedule/undo', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				'Plant' => [
					[
						'BirthDate' => 'string',
						'Converted' => true,
						'CureCollections' => 0,
						'Deleted' => true,
						'DestroyReason' => 'string',
						'DestroyReasonID' => 0,
						'DestroyScheduled' => true,
						'DestroyScheduledTime' => 'string',
						'ExternalID' => 'string',
						'HarvestBatchID' => 'string',
						'HarvestCollections' => 0,
						'HarvestScheduled' => true,
						'ID' => 'string',
						'Location' => 'string',
						'Mother' => true,
						'OrgID' => 0,
						'ParentPlantID' => 'string',
						'RoomID' => 0,
						'SessionTime' => 0,
						'SourceInventoryID' => 'string',
						'State' => 'string',
						'StateID' => 0,
						'Strain' => 'string',
						'TransactionID' => 0,
					],
				],
				'SessionTime' => 0,
				'TransactionID' => 0,
			]);
		});
		$a->post('/v1/plant/initial', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				'Data' => [
					[
						'ErrorCode' => 'string',
						'ItemIndex' => 0,
						'Message' => 'string',
						'ProviderBarcodeID' => 'string',
						'Success' => true,
						'TraceabilityBarcodeID' => 'string',
						'TransactionID' => 0,
					],
				],
				'Error' => 'string',
				'ErrorCode' => 'string',
				'errorCount' => 0,
			]);
		});
		$a->put('/v1/plant/move', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				'Plant' => [
					[
						'BirthDate' => 'string',
						'Converted' => true,
						'CureCollections' => 0,
						'Deleted' => true,
						'DestroyReason' => 'string',
						'DestroyReasonID' => 0,
						'DestroyScheduled' => true,
						'DestroyScheduledTime' => 'string',
						'ExternalID' => 'string',
						'HarvestBatchID' => 'string',
						'HarvestCollections' => 0,
						'HarvestScheduled' => true,
						'ID' => 'string',
						'Location' => 'string',
						'Mother' => true,
						'OrgID' => 0,
						'ParentPlantID' => 'string',
						'RoomID' => 0,
						'SessionTime' => 0,
						'SourceInventoryID' => 'string',
						'State' => 'string',
						'StateID' => 0,
						'Strain' => 'string',
						'TransactionID' => 0,
					],
				],
				'Sessiontime' => 'string',
				'TransactionID' => 0,
			]);
		});
		$a->post('/v1/plant/waste/', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				'Sessiontime' => 'string',
				'TransactionID' => 0,
				'inventory' => [
					'ActiveSampleInventoryID' => 'string',
					'Deleted' => true,
					'Destroyed' => true,
					'Dried' => true,
					'ExpirationDate' => 'string',
					'ExternalID' => 'string',
					'ID' => 'string',
					'Initial' => true,
					'InventoryParentID' => [
						'string',
					],
					'InventoryType' => 0,
					'IsSample' => true,
					'LabSample' => [
						[
							'Amount' => 0,
							'AmountUsed' => 0,
							'CertOfAnalysisHyperlink' => 'string',
							'Deleted' => true,
							'ID' => 0,
							'InventoryID' => 'string',
							'InventoryType' => 0,
							'LabLicense' => 'string',
							'LocationLicense' => 'string',
							'Medical' => true,
							'MedicalGrade' => true,
							'ParentID' => 'string',
							'QualityControlDataHyperlink' => 'string',
							'Result' => 'string',
							'RnD' => true,
							'SampleUse' => 'string',
							'SessionTime' => 0,
							'TestingData' => [
								[
									'LabAnalysisTime' => '2024-01-31T10:00:00.000Z',
									'SamplePreparationTime' => '2024-01-31T10:00:00.000Z',
									'TestID' => 0,
									'TestResult' => [
										[
											'LabProvided' => true,
											'TestPanel' => 'string',
											'TestPass' => true,
											'TestValue' => 0,
											'TransactionID' => 0,
										],
									],
								],
							],
							'TransactionID' => 0,
						],
					],
					'LocationLicense' => 'string',
					'MedUsableWeight' => 0,
					'Medicated' => true,
					'NetPackageWeight' => 0,
					'PackageDate' => 'string',
					'ProductName' => 'string',
					'ProductionBatchID' => 0,
					'QAStatus' => 'string',
					'RecUsableWeight' => 0,
					'RemainingAmount' => 0,
					'Remediated' => true,
					'RemediationCount' => 0,
					'RemediationEligible' => true,
					'Restocked' => true,
					'Rework' => true,
					'RoomID' => 0,
					'Seized' => true,
					'SessionTime' => 0,
					'SourcePlantID' => 'string',
					'StateProductIdentifier' => 'string',
					'Status' => 'string',
					'Strain' => 'string',
					'TransactionID' => 0,
					'UOM' => 'string',
					'UnitBased' => true,
					'UsableWeight' => 0,
				],
			]);
		});
		$a->get('/v1/plant/{id}', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				'BirthDate' => 'string',
				'Converted' => true,
				'CureCollections' => 0,
				'Deleted' => true,
				'DestroyReason' => 'string',
				'DestroyReasonID' => 0,
				'DestroyScheduled' => true,
				'DestroyScheduledTime' => 'string',
				'ExternalID' => 'string',
				'HarvestBatchID' => 'string',
				'HarvestCollections' => 0,
				'HarvestScheduled' => true,
				'ID' => 'string',
				'Location' => 'string',
				'Mother' => true,
				'OrgID' => 0,
				'ParentPlantID' => 'string',
				'RoomID' => 0,
				'SessionTime' => 0,
				'SourceInventoryID' => 'string',
				'State' => 'string',
				'StateID' => 0,
				'Strain' => 'string',
				'TransactionID' => 0,
			]);
		});
		$a->put('/v1/plant/{id}', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				'BirthDate' => 'string',
				'Converted' => true,
				'CureCollections' => 0,
				'Deleted' => true,
				'DestroyReason' => 'string',
				'DestroyReasonID' => 0,
				'DestroyScheduled' => true,
				'DestroyScheduledTime' => 'string',
				'ExternalID' => 'string',
				'HarvestBatchID' => 'string',
				'HarvestCollections' => 0,
				'HarvestScheduled' => true,
				'ID' => 'string',
				'Location' => 'string',
				'Mother' => true,
				'OrgID' => 0,
				'ParentPlantID' => 'string',
				'RoomID' => 0,
				'SessionTime' => 0,
				'SourceInventoryID' => 'string',
				'State' => 'string',
				'StateID' => 0,
				'Strain' => 'string',
				'TransactionID' => 0,
			]);
		});
		$a->put('/v1/plant/{id}/undo', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				'Inventory' => [
					'ActiveSampleInventoryID' => 'string',
					'Deleted' => true,
					'Destroyed' => true,
					'Dried' => true,
					'ExpirationDate' => 'string',
					'ExternalID' => 'string',
					'ID' => 'string',
					'Initial' => true,
					'InventoryParentID' => [
						'string',
					],
					'InventoryType' => 0,
					'IsSample' => true,
					'LabSample' => [
						[
							'Amount' => 0,
							'AmountUsed' => 0,
							'CertOfAnalysisHyperlink' => 'string',
							'Deleted' => true,
							'ID' => 0,
							'InventoryID' => 'string',
							'InventoryType' => 0,
							'LabLicense' => 'string',
							'LocationLicense' => 'string',
							'Medical' => true,
							'MedicalGrade' => true,
							'ParentID' => 'string',
							'QualityControlDataHyperlink' => 'string',
							'Result' => 'string',
							'RnD' => true,
							'SampleUse' => 'string',
							'SessionTime' => 0,
							'TestingData' => [
								[
									'LabAnalysisTime' => '2024-01-31T10:00:00.000Z',
									'SamplePreparationTime' => '2024-01-31T10:00:00.000Z',
									'TestID' => 0,
									'TestResult' => [
										[
											'LabProvided' => true,
											'TestPanel' => 'string',
											'TestPass' => true,
											'TestValue' => 0,
											'TransactionID' => 0,
										],
									],
								],
							],
							'TransactionID' => 0,
						],
					],
					'LocationLicense' => 'string',
					'MedUsableWeight' => 0,
					'Medicated' => true,
					'NetPackageWeight' => 0,
					'PackageDate' => 'string',
					'ProductName' => 'string',
					'ProductionBatchID' => 0,
					'QAStatus' => 'string',
					'RecUsableWeight' => 0,
					'RemainingAmount' => 0,
					'Remediated' => true,
					'RemediationCount' => 0,
					'RemediationEligible' => true,
					'Restocked' => true,
					'Rework' => true,
					'RoomID' => 0,
					'Seized' => true,
					'SessionTime' => 0,
					'SourcePlantID' => 'string',
					'StateProductIdentifier' => 'string',
					'Status' => 'string',
					'Strain' => 'string',
					'TransactionID' => 0,
					'UOM' => 'string',
					'UnitBased' => true,
					'UsableWeight' => 0,
				],
				'Plant' => [
					'BirthDate' => 'string',
					'Converted' => true,
					'CureCollections' => 0,
					'Deleted' => true,
					'DestroyReason' => 'string',
					'DestroyReasonID' => 0,
					'DestroyScheduled' => true,
					'DestroyScheduledTime' => 'string',
					'ExternalID' => 'string',
					'HarvestBatchID' => 'string',
					'HarvestCollections' => 0,
					'HarvestScheduled' => true,
					'ID' => 'string',
					'Location' => 'string',
					'Mother' => true,
					'OrgID' => 0,
					'ParentPlantID' => 'string',
					'RoomID' => 0,
					'SessionTime' => 0,
					'SourceInventoryID' => 'string',
					'State' => 'string',
					'StateID' => 0,
					'Strain' => 'string',
					'TransactionID' => 0,
				],
				'SessionTime' => 0,
				'TransactionID' => 0,
			]);
		});

		// Plant Additive
		$a->get('/v1/plant/additive', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				'NextCursor' => 0,
				'NextTransactionID' => 0,
				'PlantAdditive' => [
					[
						'AdditiveName' => 'string',
						'AppliedQuantity' => 0,
						'AppliedQuantityUOM' => 'string',
						'CreatedOn' => 'string',
						'Deleted' => true,
						'ID' => 0,
						'LocationLicense' => 'string',
						'PlantID' => 'string',
						'TransactionID' => 0,
					],
				],
			]);
		});
		$a->post('/v1/plant/additive', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				'NextCursor' => 0,
				'NextTransactionID' => 0,
				'PlantAdditive' => [
					[
						'AdditiveName' => 'string',
						'AppliedQuantity' => 0,
						'AppliedQuantityUOM' => 'string',
						'CreatedOn' => 'string',
						'Deleted' => true,
						'ID' => 0,
						'LocationLicense' => 'string',
						'PlantID' => 'string',
						'TransactionID' => 0,
					],
				],
			]);
		});
		$a->put('/v1/plant/additive', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				'PlantAdditive' => [
					[
						'AdditiveName' => 'string',
						'AppliedQuantity' => 0,
						'AppliedQuantityUOM' => 'string',
						'CreatedOn' => 'string',
						'Deleted' => true,
						'ID' => 0,
						'LocationLicense' => 'string',
						'PlantID' => 'string',
						'TransactionID' => 0,
					],
				],
				'SessionTime' => 0,
				'TransactionID' => 0,
			]);
		});

		// Harvest Batch
		$a->get('/v1/harvest-batch', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				'HarvestBatch' => [
					[
						'CreatedOn' => 'string',
						'CurrentState' => 'string',
						'Deleted' => true,
						'ExternalID' => 'string',
						'HarvestBatchID' => 'string',
						'HarvestScheduleDate' => 'string',
						'HarvestScheduled' => true,
						'LocationLicense' => 'string',
						'PlantCount' => 0,
						'TransactionID' => 0,
						'UpdatedOn' => 'string',
					],
				],
				'NextCursor' => 0,
				'NextTransactionID' => 0,
			]);
		});
		$a->post('/v1/harvest-batch', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				'HarvestBatch' => [
					'CreatedOn' => 'string',
					'CurrentState' => 'string',
					'Deleted' => true,
					'ExternalID' => 'string',
					'HarvestBatchID' => 'string',
					'HarvestScheduleDate' => 'string',
					'HarvestScheduled' => true,
					'LocationLicense' => 'string',
					'PlantCount' => 0,
					'TransactionID' => 0,
					'UpdatedOn' => 'string',
				],
				'Plant' => [
					[
						'BirthDate' => 'string',
						'Converted' => true,
						'CureCollections' => 0,
						'Deleted' => true,
						'DestroyReason' => 'string',
						'DestroyReasonID' => 0,
						'DestroyScheduled' => true,
						'DestroyScheduledTime' => 'string',
						'ExternalID' => 'string',
						'HarvestBatchID' => 'string',
						'HarvestCollections' => 0,
						'HarvestScheduled' => true,
						'ID' => 'string',
						'Location' => 'string',
						'Mother' => true,
						'OrgID' => 0,
						'ParentPlantID' => 'string',
						'RoomID' => 0,
						'SessionTime' => 0,
						'SourceInventoryID' => 'string',
						'State' => 'string',
						'StateID' => 0,
						'Strain' => 'string',
						'TransactionID' => 0,
					],
				],
				'Sessiontime' => 0,
				'TransactionID' => 0,
			]);
		});
		$a->get('/v1/harvest-batch/cure', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				'NextCursor' => 0,
				'NextTransactionID' => 0,
				'PlantCure' => [
					[
						'AdditionalCollections' => true,
						'CureID' => 'string',
						'Deleted' => true,
						'Derivative' => [
							[
								'Deleted' => true,
								'ID' => 'string',
								'InventoryID' => 'string',
								'InventoryType' => 0,
								'LocationLicense' => 'string',
								'PlantCureID' => 'string',
								'TransactionID' => 0,
								'Weight' => 0,
							],
						],
						'ExternalID' => 'string',
						'HarvestBatchID' => 'string',
						'LocationLicense' => 'string',
						'TotalWeight' => 0,
						'TransactionID' => 0,
						'UOM' => 'string',
					],
				],
			]);
		});
		$a->get('/v1/harvest-batch/cure/derivative', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				'CureDerivative' => [
					[
						'Deleted' => true,
						'ID' => 'string',
						'InventoryID' => 'string',
						'InventoryType' => 0,
						'LocationLicense' => 'string',
						'PlantCureID' => 'string',
						'TransactionID' => 0,
						'Weight' => 0,
					],
				],
				'NextCursor' => 0,
				'NextTransactionID' => 0,
			]);
		});
		$a->get('/v1/harvest-batch/cure/{cureid}', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				'PlantCure' => [
					'AdditionalCollections' => true,
					'CureID' => 'string',
					'Deleted' => true,
					'Derivative' => [
						[
							'Deleted' => true,
							'ID' => 'string',
							'InventoryID' => 'string',
							'InventoryType' => 0,
							'LocationLicense' => 'string',
							'PlantCureID' => 'string',
							'TransactionID' => 0,
							'Weight' => 0,
						],
					],
					'ExternalID' => 'string',
					'HarvestBatchID' => 'string',
					'LocationLicense' => 'string',
					'TotalWeight' => 0,
					'TransactionID' => 0,
					'UOM' => 'string',
				],
			]);
		});
		$a->get('/v1/harvest-batch/harvest', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				'Harvest' => [
					[
						'AdditionalCollections' => true,
						'Deleted' => true,
						'Derivative' => [
							[
								'Deleted' => true,
								'HarvestID' => 'string',
								'ID' => 'string',
								'InventoryID' => 'string',
								'InventoryType' => 0,
								'LocationLicense' => 'string',
								'TransactionID' => 0,
								'Weight' => 0,
							],
						],
						'DryWeightMax' => 0,
						'ExternalID' => 'string',
						'FinalizeHarvestCure' => true,
						'HarvestBatchID' => 'string',
						'HarvestID' => 'string',
						'LocationLicense' => 'string',
						'TotalHarvestWeight' => 0,
						'TransactionID' => 0,
						'UOM' => 'string',
					],
				],
				'NextCursor' => 0,
				'NextTransactionID' => 0,
			]);
		});
		$a->get('/v1/harvest-batch/harvest/derivative', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				'HarvestDerivative' => [
					[
						'Deleted' => true,
						'HarvestID' => 'string',
						'ID' => 'string',
						'InventoryID' => 'string',
						'InventoryType' => 0,
						'LocationLicense' => 'string',
						'TransactionID' => 0,
						'Weight' => 0,
					],
				],
				'NextCursor' => 0,
				'NextTransactionID' => 0,
			]);
		});
		$a->get('/v1/harvest-batch/harvest/{harvestid}', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				'Harvest' => [
					[
						'AdditionalCollections' => true,
						'Deleted' => true,
						'Derivative' => [
							[
								'Deleted' => true,
								'HarvestID' => 'string',
								'ID' => 'string',
								'InventoryID' => 'string',
								'InventoryType' => 0,
								'LocationLicense' => 'string',
								'TransactionID' => 0,
								'Weight' => 0,
							],
						],
						'DryWeightMax' => 0,
						'ExternalID' => 'string',
						'FinalizeHarvestCure' => true,
						'HarvestBatchID' => 'string',
						'HarvestID' => 'string',
						'LocationLicense' => 'string',
						'TotalHarvestWeight' => 0,
						'TransactionID' => 0,
						'UOM' => 'string',
					],
				],
				'NextCursor' => 0,
				'NextTransactionID' => 0,
			]);
		});
		$a->delete('/v1/harvest-batch/{batchid}', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				'HarvestBatch' => [
					'CreatedOn' => 'string',
					'CurrentState' => 'string',
					'Deleted' => true,
					'ExternalID' => 'string',
					'HarvestBatchID' => 'string',
					'HarvestScheduleDate' => 'string',
					'HarvestScheduled' => true,
					'LocationLicense' => 'string',
					'PlantCount' => 0,
					'TransactionID' => 0,
					'UpdatedOn' => 'string',
				],
				'Sessiontime' => 0,
				'TransactionID' => 0,
			]);
		});
		$a->get('/v1/harvest-batch/{batchid}', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				'HarvestBatch' => [
					'CreatedOn' => 'string',
					'CurrentState' => 'string',
					'Deleted' => true,
					'ExternalID' => 'string',
					'HarvestBatchID' => 'string',
					'HarvestScheduleDate' => 'string',
					'HarvestScheduled' => true,
					'LocationLicense' => 'string',
					'PlantCount' => 0,
					'TransactionID' => 0,
					'UpdatedOn' => 'string',
				],
			]);
		});
		$a->get('/v1/harvest-batch/{batchid}/cure', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				'NextCursor' => 0,
				'NextTransactionID' => 0,
				'PlantCure' => [
					[
						'AdditionalCollections' => true,
						'CureID' => 'string',
						'Deleted' => true,
						'Derivative' => [
							[
								'Deleted' => true,
								'ID' => 'string',
								'InventoryID' => 'string',
								'InventoryType' => 0,
								'LocationLicense' => 'string',
								'PlantCureID' => 'string',
								'TransactionID' => 0,
								'Weight' => 0,
							],
						],
						'ExternalID' => 'string',
						'HarvestBatchID' => 'string',
						'LocationLicense' => 'string',
						'TotalWeight' => 0,
						'TransactionID' => 0,
						'UOM' => 'string',
					],
				],
			]);
		});
		$a->post('/v1/harvest-batch/{batchid}/cure', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				'Derivative' => [
					[
						'Deleted' => true,
						'ID' => 'string',
						'InventoryID' => 'string',
						'InventoryType' => 0,
						'LocationLicense' => 'string',
						'PlantCureID' => 'string',
						'TransactionID' => 0,
						'Weight' => 0,
					],
				],
				'HarvestBatch' => [
					'CreatedOn' => 'string',
					'CurrentState' => 'string',
					'Deleted' => true,
					'ExternalID' => 'string',
					'HarvestBatchID' => 'string',
					'HarvestScheduleDate' => 'string',
					'HarvestScheduled' => true,
					'LocationLicense' => 'string',
					'PlantCount' => 0,
					'TransactionID' => 0,
					'UpdatedOn' => 'string',
				],
				'InventoryCollected' => [
					'Flower' => [
						'ActiveSampleInventoryID' => 'string',
						'Deleted' => true,
						'Destroyed' => true,
						'Dried' => true,
						'ExpirationDate' => 'string',
						'ExternalID' => 'string',
						'ID' => 'string',
						'Initial' => true,
						'InventoryParentID' => [
							'string',
						],
						'InventoryType' => 0,
						'IsSample' => true,
						'LabSample' => [
							[
								'Amount' => 0,
								'AmountUsed' => 0,
								'CertOfAnalysisHyperlink' => 'string',
								'Deleted' => true,
								'ID' => 0,
								'InventoryID' => 'string',
								'InventoryType' => 0,
								'LabLicense' => 'string',
								'LocationLicense' => 'string',
								'Medical' => true,
								'MedicalGrade' => true,
								'ParentID' => 'string',
								'QualityControlDataHyperlink' => 'string',
								'Result' => 'string',
								'RnD' => true,
								'SampleUse' => 'string',
								'SessionTime' => 0,
								'TestingData' => [
									[
										'LabAnalysisTime' => '2024-01-31T10:00:00.000Z',
										'SamplePreparationTime' => '2024-01-31T10:00:00.000Z',
										'TestID' => 0,
										'TestResult' => [
											[
												'LabProvided' => true,
												'TestPanel' => 'string',
												'TestPass' => true,
												'TestValue' => 0,
												'TransactionID' => 0,
											],
										],
									],
								],
								'TransactionID' => 0,
							],
						],
						'LocationLicense' => 'string',
						'MedUsableWeight' => 0,
						'Medicated' => true,
						'NetPackageWeight' => 0,
						'PackageDate' => 'string',
						'ProductName' => 'string',
						'ProductionBatchID' => 0,
						'QAStatus' => 'string',
						'RecUsableWeight' => 0,
						'RemainingAmount' => 0,
						'Remediated' => true,
						'RemediationCount' => 0,
						'RemediationEligible' => true,
						'Restocked' => true,
						'Rework' => true,
						'RoomID' => 0,
						'Seized' => true,
						'SessionTime' => 0,
						'SourcePlantID' => 'string',
						'StateProductIdentifier' => 'string',
						'Status' => 'string',
						'Strain' => 'string',
						'TransactionID' => 0,
						'UOM' => 'string',
						'UnitBased' => true,
						'UsableWeight' => 0,
					],
					'OtherMaterial' => [
						'ActiveSampleInventoryID' => 'string',
						'Deleted' => true,
						'Destroyed' => true,
						'Dried' => true,
						'ExpirationDate' => 'string',
						'ExternalID' => 'string',
						'ID' => 'string',
						'Initial' => true,
						'InventoryParentID' => [
							'string',
						],
						'InventoryType' => 0,
						'IsSample' => true,
						'LabSample' => [
							[
								'Amount' => 0,
								'AmountUsed' => 0,
								'CertOfAnalysisHyperlink' => 'string',
								'Deleted' => true,
								'ID' => 0,
								'InventoryID' => 'string',
								'InventoryType' => 0,
								'LabLicense' => 'string',
								'LocationLicense' => 'string',
								'Medical' => true,
								'MedicalGrade' => true,
								'ParentID' => 'string',
								'QualityControlDataHyperlink' => 'string',
								'Result' => 'string',
								'RnD' => true,
								'SampleUse' => 'string',
								'SessionTime' => 0,
								'TestingData' => [
									[
										'LabAnalysisTime' => '2024-01-31T10:00:00.000Z',
										'SamplePreparationTime' => '2024-01-31T10:00:00.000Z',
										'TestID' => 0,
										'TestResult' => [
											[
												'LabProvided' => true,
												'TestPanel' => 'string',
												'TestPass' => true,
												'TestValue' => 0,
												'TransactionID' => 0,
											],
										],
									],
								],
								'TransactionID' => 0,
							],
						],
						'LocationLicense' => 'string',
						'MedUsableWeight' => 0,
						'Medicated' => true,
						'NetPackageWeight' => 0,
						'PackageDate' => 'string',
						'ProductName' => 'string',
						'ProductionBatchID' => 0,
						'QAStatus' => 'string',
						'RecUsableWeight' => 0,
						'RemainingAmount' => 0,
						'Remediated' => true,
						'RemediationCount' => 0,
						'RemediationEligible' => true,
						'Restocked' => true,
						'Rework' => true,
						'RoomID' => 0,
						'Seized' => true,
						'SessionTime' => 0,
						'SourcePlantID' => 'string',
						'StateProductIdentifier' => 'string',
						'Status' => 'string',
						'Strain' => 'string',
						'TransactionID' => 0,
						'UOM' => 'string',
						'UnitBased' => true,
						'UsableWeight' => 0,
					],
					'Waste' => [
						'ActiveSampleInventoryID' => 'string',
						'Deleted' => true,
						'Destroyed' => true,
						'Dried' => true,
						'ExpirationDate' => 'string',
						'ExternalID' => 'string',
						'ID' => 'string',
						'Initial' => true,
						'InventoryParentID' => [
							'string',
						],
						'InventoryType' => 0,
						'IsSample' => true,
						'LabSample' => [
							[
								'Amount' => 0,
								'AmountUsed' => 0,
								'CertOfAnalysisHyperlink' => 'string',
								'Deleted' => true,
								'ID' => 0,
								'InventoryID' => 'string',
								'InventoryType' => 0,
								'LabLicense' => 'string',
								'LocationLicense' => 'string',
								'Medical' => true,
								'MedicalGrade' => true,
								'ParentID' => 'string',
								'QualityControlDataHyperlink' => 'string',
								'Result' => 'string',
								'RnD' => true,
								'SampleUse' => 'string',
								'SessionTime' => 0,
								'TestingData' => [
									[
										'LabAnalysisTime' => '2024-01-31T10:00:00.000Z',
										'SamplePreparationTime' => '2024-01-31T10:00:00.000Z',
										'TestID' => 0,
										'TestResult' => [
											[
												'LabProvided' => true,
												'TestPanel' => 'string',
												'TestPass' => true,
												'TestValue' => 0,
												'TransactionID' => 0,
											],
										],
									],
								],
								'TransactionID' => 0,
							],
						],
						'LocationLicense' => 'string',
						'MedUsableWeight' => 0,
						'Medicated' => true,
						'NetPackageWeight' => 0,
						'PackageDate' => 'string',
						'ProductName' => 'string',
						'ProductionBatchID' => 0,
						'QAStatus' => 'string',
						'RecUsableWeight' => 0,
						'RemainingAmount' => 0,
						'Remediated' => true,
						'RemediationCount' => 0,
						'RemediationEligible' => true,
						'Restocked' => true,
						'Rework' => true,
						'RoomID' => 0,
						'Seized' => true,
						'SessionTime' => 0,
						'SourcePlantID' => 'string',
						'StateProductIdentifier' => 'string',
						'Status' => 'string',
						'Strain' => 'string',
						'TransactionID' => 0,
						'UOM' => 'string',
						'UnitBased' => true,
						'UsableWeight' => 0,
					],
				],
				'PlantCure' => [
					'AdditionalCollections' => true,
					'CureID' => 'string',
					'Deleted' => true,
					'Derivative' => [
						[
							'Deleted' => true,
							'ID' => 'string',
							'InventoryID' => 'string',
							'InventoryType' => 0,
							'LocationLicense' => 'string',
							'PlantCureID' => 'string',
							'TransactionID' => 0,
							'Weight' => 0,
						],
					],
					'ExternalID' => 'string',
					'HarvestBatchID' => 'string',
					'LocationLicense' => 'string',
					'TotalWeight' => 0,
					'TransactionID' => 0,
					'UOM' => 'string',
				],
				'SessionTime' => 0,
				'TransactionID' => 0,
			]);
		});
		$a->delete('/v1/harvest-batch/{batchid}/cure/{cureid}', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				'HarvestBatch' => [
					'CreatedOn' => 'string',
					'CurrentState' => 'string',
					'Deleted' => true,
					'ExternalID' => 'string',
					'HarvestBatchID' => 'string',
					'HarvestScheduleDate' => 'string',
					'HarvestScheduled' => true,
					'LocationLicense' => 'string',
					'PlantCount' => 0,
					'TransactionID' => 0,
					'UpdatedOn' => 'string',
				],
				'Inventory' => [
					[
						'ActiveSampleInventoryID' => 'string',
						'Deleted' => true,
						'Destroyed' => true,
						'Dried' => true,
						'ExpirationDate' => 'string',
						'ExternalID' => 'string',
						'ID' => 'string',
						'Initial' => true,
						'InventoryParentID' => [
							'string',
						],
						'InventoryType' => 0,
						'IsSample' => true,
						'LabSample' => [
							[
								'Amount' => 0,
								'AmountUsed' => 0,
								'CertOfAnalysisHyperlink' => 'string',
								'Deleted' => true,
								'ID' => 0,
								'InventoryID' => 'string',
								'InventoryType' => 0,
								'LabLicense' => 'string',
								'LocationLicense' => 'string',
								'Medical' => true,
								'MedicalGrade' => true,
								'ParentID' => 'string',
								'QualityControlDataHyperlink' => 'string',
								'Result' => 'string',
								'RnD' => true,
								'SampleUse' => 'string',
								'SessionTime' => 0,
								'TestingData' => [
									[
										'LabAnalysisTime' => '2024-01-31T10:00:00.000Z',
										'SamplePreparationTime' => '2024-01-31T10:00:00.000Z',
										'TestID' => 0,
										'TestResult' => [
											[
												'LabProvided' => true,
												'TestPanel' => 'string',
												'TestPass' => true,
												'TestValue' => 0,
												'TransactionID' => 0,
											],
										],
									],
								],
								'TransactionID' => 0,
							],
						],
						'LocationLicense' => 'string',
						'MedUsableWeight' => 0,
						'Medicated' => true,
						'NetPackageWeight' => 0,
						'PackageDate' => 'string',
						'ProductName' => 'string',
						'ProductionBatchID' => 0,
						'QAStatus' => 'string',
						'RecUsableWeight' => 0,
						'RemainingAmount' => 0,
						'Remediated' => true,
						'RemediationCount' => 0,
						'RemediationEligible' => true,
						'Restocked' => true,
						'Rework' => true,
						'RoomID' => 0,
						'Seized' => true,
						'SessionTime' => 0,
						'SourcePlantID' => 'string',
						'StateProductIdentifier' => 'string',
						'Status' => 'string',
						'Strain' => 'string',
						'TransactionID' => 0,
						'UOM' => 'string',
						'UnitBased' => true,
						'UsableWeight' => 0,
					],
				],
				'PlantCure' => [
					'AdditionalCollections' => true,
					'CureID' => 'string',
					'Deleted' => true,
					'Derivative' => [
						[
							'Deleted' => true,
							'ID' => 'string',
							'InventoryID' => 'string',
							'InventoryType' => 0,
							'LocationLicense' => 'string',
							'PlantCureID' => 'string',
							'TransactionID' => 0,
							'Weight' => 0,
						],
					],
					'ExternalID' => 'string',
					'HarvestBatchID' => 'string',
					'LocationLicense' => 'string',
					'TotalWeight' => 0,
					'TransactionID' => 0,
					'UOM' => 'string',
				],
				'SessionTime' => 0,
				'TransactionID' => 0,
			]);
		});
		$a->put('/v1/harvest-batch/{batchid}/cure/{cureid}', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				'Derivative' => [
					[
						'Deleted' => true,
						'ID' => 'string',
						'InventoryID' => 'string',
						'InventoryType' => 0,
						'LocationLicense' => 'string',
						'PlantCureID' => 'string',
						'TransactionID' => 0,
						'Weight' => 0,
					],
				],
				'HarvestBatch' => [
					'CreatedOn' => 'string',
					'CurrentState' => 'string',
					'Deleted' => true,
					'ExternalID' => 'string',
					'HarvestBatchID' => 'string',
					'HarvestScheduleDate' => 'string',
					'HarvestScheduled' => true,
					'LocationLicense' => 'string',
					'PlantCount' => 0,
					'TransactionID' => 0,
					'UpdatedOn' => 'string',
				],
				'NewInventoryCollected' => [
					'Flower' => [
						'ActiveSampleInventoryID' => 'string',
						'Deleted' => true,
						'Destroyed' => true,
						'Dried' => true,
						'ExpirationDate' => 'string',
						'ExternalID' => 'string',
						'ID' => 'string',
						'Initial' => true,
						'InventoryParentID' => [
							'string',
						],
						'InventoryType' => 0,
						'IsSample' => true,
						'LabSample' => [
							[
								'Amount' => 0,
								'AmountUsed' => 0,
								'CertOfAnalysisHyperlink' => 'string',
								'Deleted' => true,
								'ID' => 0,
								'InventoryID' => 'string',
								'InventoryType' => 0,
								'LabLicense' => 'string',
								'LocationLicense' => 'string',
								'Medical' => true,
								'MedicalGrade' => true,
								'ParentID' => 'string',
								'QualityControlDataHyperlink' => 'string',
								'Result' => 'string',
								'RnD' => true,
								'SampleUse' => 'string',
								'SessionTime' => 0,
								'TestingData' => [
									[
										'LabAnalysisTime' => '2024-01-31T10:00:00.000Z',
										'SamplePreparationTime' => '2024-01-31T10:00:00.000Z',
										'TestID' => 0,
										'TestResult' => [
											[
												'LabProvided' => true,
												'TestPanel' => 'string',
												'TestPass' => true,
												'TestValue' => 0,
												'TransactionID' => 0,
											],
										],
									],
								],
								'TransactionID' => 0,
							],
						],
						'LocationLicense' => 'string',
						'MedUsableWeight' => 0,
						'Medicated' => true,
						'NetPackageWeight' => 0,
						'PackageDate' => 'string',
						'ProductName' => 'string',
						'ProductionBatchID' => 0,
						'QAStatus' => 'string',
						'RecUsableWeight' => 0,
						'RemainingAmount' => 0,
						'Remediated' => true,
						'RemediationCount' => 0,
						'RemediationEligible' => true,
						'Restocked' => true,
						'Rework' => true,
						'RoomID' => 0,
						'Seized' => true,
						'SessionTime' => 0,
						'SourcePlantID' => 'string',
						'StateProductIdentifier' => 'string',
						'Status' => 'string',
						'Strain' => 'string',
						'TransactionID' => 0,
						'UOM' => 'string',
						'UnitBased' => true,
						'UsableWeight' => 0,
					],
					'OtherMaterial' => [
						'ActiveSampleInventoryID' => 'string',
						'Deleted' => true,
						'Destroyed' => true,
						'Dried' => true,
						'ExpirationDate' => 'string',
						'ExternalID' => 'string',
						'ID' => 'string',
						'Initial' => true,
						'InventoryParentID' => [
							'string',
						],
						'InventoryType' => 0,
						'IsSample' => true,
						'LabSample' => [
							[
								'Amount' => 0,
								'AmountUsed' => 0,
								'CertOfAnalysisHyperlink' => 'string',
								'Deleted' => true,
								'ID' => 0,
								'InventoryID' => 'string',
								'InventoryType' => 0,
								'LabLicense' => 'string',
								'LocationLicense' => 'string',
								'Medical' => true,
								'MedicalGrade' => true,
								'ParentID' => 'string',
								'QualityControlDataHyperlink' => 'string',
								'Result' => 'string',
								'RnD' => true,
								'SampleUse' => 'string',
								'SessionTime' => 0,
								'TestingData' => [
									[
										'LabAnalysisTime' => '2024-01-31T10:00:00.000Z',
										'SamplePreparationTime' => '2024-01-31T10:00:00.000Z',
										'TestID' => 0,
										'TestResult' => [
											[
												'LabProvided' => true,
												'TestPanel' => 'string',
												'TestPass' => true,
												'TestValue' => 0,
												'TransactionID' => 0,
											],
										],
									],
								],
								'TransactionID' => 0,
							],
						],
						'LocationLicense' => 'string',
						'MedUsableWeight' => 0,
						'Medicated' => true,
						'NetPackageWeight' => 0,
						'PackageDate' => 'string',
						'ProductName' => 'string',
						'ProductionBatchID' => 0,
						'QAStatus' => 'string',
						'RecUsableWeight' => 0,
						'RemainingAmount' => 0,
						'Remediated' => true,
						'RemediationCount' => 0,
						'RemediationEligible' => true,
						'Restocked' => true,
						'Rework' => true,
						'RoomID' => 0,
						'Seized' => true,
						'SessionTime' => 0,
						'SourcePlantID' => 'string',
						'StateProductIdentifier' => 'string',
						'Status' => 'string',
						'Strain' => 'string',
						'TransactionID' => 0,
						'UOM' => 'string',
						'UnitBased' => true,
						'UsableWeight' => 0,
					],
					'Waste' => [
						'ActiveSampleInventoryID' => 'string',
						'Deleted' => true,
						'Destroyed' => true,
						'Dried' => true,
						'ExpirationDate' => 'string',
						'ExternalID' => 'string',
						'ID' => 'string',
						'Initial' => true,
						'InventoryParentID' => [
							'string',
						],
						'InventoryType' => 0,
						'IsSample' => true,
						'LabSample' => [
							[
								'Amount' => 0,
								'AmountUsed' => 0,
								'CertOfAnalysisHyperlink' => 'string',
								'Deleted' => true,
								'ID' => 0,
								'InventoryID' => 'string',
								'InventoryType' => 0,
								'LabLicense' => 'string',
								'LocationLicense' => 'string',
								'Medical' => true,
								'MedicalGrade' => true,
								'ParentID' => 'string',
								'QualityControlDataHyperlink' => 'string',
								'Result' => 'string',
								'RnD' => true,
								'SampleUse' => 'string',
								'SessionTime' => 0,
								'TestingData' => [
									[
										'LabAnalysisTime' => '2024-01-31T10:00:00.000Z',
										'SamplePreparationTime' => '2024-01-31T10:00:00.000Z',
										'TestID' => 0,
										'TestResult' => [
											[
												'LabProvided' => true,
												'TestPanel' => 'string',
												'TestPass' => true,
												'TestValue' => 0,
												'TransactionID' => 0,
											],
										],
									],
								],
								'TransactionID' => 0,
							],
						],
						'LocationLicense' => 'string',
						'MedUsableWeight' => 0,
						'Medicated' => true,
						'NetPackageWeight' => 0,
						'PackageDate' => 'string',
						'ProductName' => 'string',
						'ProductionBatchID' => 0,
						'QAStatus' => 'string',
						'RecUsableWeight' => 0,
						'RemainingAmount' => 0,
						'Remediated' => true,
						'RemediationCount' => 0,
						'RemediationEligible' => true,
						'Restocked' => true,
						'Rework' => true,
						'RoomID' => 0,
						'Seized' => true,
						'SessionTime' => 0,
						'SourcePlantID' => 'string',
						'StateProductIdentifier' => 'string',
						'Status' => 'string',
						'Strain' => 'string',
						'TransactionID' => 0,
						'UOM' => 'string',
						'UnitBased' => true,
						'UsableWeight' => 0,
					],
				],
				'PlantCure' => [
					'AdditionalCollections' => true,
					'CureID' => 'string',
					'Deleted' => true,
					'Derivative' => [
						[
							'Deleted' => true,
							'ID' => 'string',
							'InventoryID' => 'string',
							'InventoryType' => 0,
							'LocationLicense' => 'string',
							'PlantCureID' => 'string',
							'TransactionID' => 0,
							'Weight' => 0,
						],
					],
					'ExternalID' => 'string',
					'HarvestBatchID' => 'string',
					'LocationLicense' => 'string',
					'TotalWeight' => 0,
					'TransactionID' => 0,
					'UOM' => 'string',
				],
				'SessionTime' => 0,
				'TransactionID' => 0,
			]);
		});
		$a->get('/v1/harvest-batch/{batchid}/harvest', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				'Harvest' => [
					[
						'AdditionalCollections' => true,
						'Deleted' => true,
						'Derivative' => [
							[
								'Deleted' => true,
								'HarvestID' => 'string',
								'ID' => 'string',
								'InventoryID' => 'string',
								'InventoryType' => 0,
								'LocationLicense' => 'string',
								'TransactionID' => 0,
								'Weight' => 0,
							],
						],
						'DryWeightMax' => 0,
						'ExternalID' => 'string',
						'FinalizeHarvestCure' => true,
						'HarvestBatchID' => 'string',
						'HarvestID' => 'string',
						'LocationLicense' => 'string',
						'TotalHarvestWeight' => 0,
						'TransactionID' => 0,
						'UOM' => 'string',
					],
				],
			]);
		});
		$a->post('/v1/harvest-batch/{batchid}/harvest', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				'Harvest' => [
					'AdditionalCollections' => true,
					'Deleted' => true,
					'Derivative' => [
						[
							'Deleted' => true,
							'HarvestID' => 'string',
							'ID' => 'string',
							'InventoryID' => 'string',
							'InventoryType' => 0,
							'LocationLicense' => 'string',
							'TransactionID' => 0,
							'Weight' => 0,
						],
					],
					'DryWeightMax' => 0,
					'ExternalID' => 'string',
					'FinalizeHarvestCure' => true,
					'HarvestBatchID' => 'string',
					'HarvestID' => 'string',
					'LocationLicense' => 'string',
					'TotalHarvestWeight' => 0,
					'TransactionID' => 0,
					'UOM' => 'string',
				],
				'HarvestBatch' => [
					'CreatedOn' => 'string',
					'CurrentState' => 'string',
					'Deleted' => true,
					'ExternalID' => 'string',
					'HarvestBatchID' => 'string',
					'HarvestScheduleDate' => 'string',
					'HarvestScheduled' => true,
					'LocationLicense' => 'string',
					'PlantCount' => 0,
					'TransactionID' => 0,
					'UpdatedOn' => 'string',
				],
				'InventoryCollected' => [
					'Flower' => [
						'ActiveSampleInventoryID' => 'string',
						'Deleted' => true,
						'Destroyed' => true,
						'Dried' => true,
						'ExpirationDate' => 'string',
						'ExternalID' => 'string',
						'ID' => 'string',
						'Initial' => true,
						'InventoryParentID' => [
							'string',
						],
						'InventoryType' => 0,
						'IsSample' => true,
						'LabSample' => [
							[
								'Amount' => 0,
								'AmountUsed' => 0,
								'CertOfAnalysisHyperlink' => 'string',
								'Deleted' => true,
								'ID' => 0,
								'InventoryID' => 'string',
								'InventoryType' => 0,
								'LabLicense' => 'string',
								'LocationLicense' => 'string',
								'Medical' => true,
								'MedicalGrade' => true,
								'ParentID' => 'string',
								'QualityControlDataHyperlink' => 'string',
								'Result' => 'string',
								'RnD' => true,
								'SampleUse' => 'string',
								'SessionTime' => 0,
								'TestingData' => [
									[
										'LabAnalysisTime' => '2024-01-31T10:00:00.000Z',
										'SamplePreparationTime' => '2024-01-31T10:00:00.000Z',
										'TestID' => 0,
										'TestResult' => [
											[
												'LabProvided' => true,
												'TestPanel' => 'string',
												'TestPass' => true,
												'TestValue' => 0,
												'TransactionID' => 0,
											],
										],
									],
								],
								'TransactionID' => 0,
							],
						],
						'LocationLicense' => 'string',
						'MedUsableWeight' => 0,
						'Medicated' => true,
						'NetPackageWeight' => 0,
						'PackageDate' => 'string',
						'ProductName' => 'string',
						'ProductionBatchID' => 0,
						'QAStatus' => 'string',
						'RecUsableWeight' => 0,
						'RemainingAmount' => 0,
						'Remediated' => true,
						'RemediationCount' => 0,
						'RemediationEligible' => true,
						'Restocked' => true,
						'Rework' => true,
						'RoomID' => 0,
						'Seized' => true,
						'SessionTime' => 0,
						'SourcePlantID' => 'string',
						'StateProductIdentifier' => 'string',
						'Status' => 'string',
						'Strain' => 'string',
						'TransactionID' => 0,
						'UOM' => 'string',
						'UnitBased' => true,
						'UsableWeight' => 0,
					],
					'OtherMaterial' => [
						'ActiveSampleInventoryID' => 'string',
						'Deleted' => true,
						'Destroyed' => true,
						'Dried' => true,
						'ExpirationDate' => 'string',
						'ExternalID' => 'string',
						'ID' => 'string',
						'Initial' => true,
						'InventoryParentID' => [
							'string',
						],
						'InventoryType' => 0,
						'IsSample' => true,
						'LabSample' => [
							[
								'Amount' => 0,
								'AmountUsed' => 0,
								'CertOfAnalysisHyperlink' => 'string',
								'Deleted' => true,
								'ID' => 0,
								'InventoryID' => 'string',
								'InventoryType' => 0,
								'LabLicense' => 'string',
								'LocationLicense' => 'string',
								'Medical' => true,
								'MedicalGrade' => true,
								'ParentID' => 'string',
								'QualityControlDataHyperlink' => 'string',
								'Result' => 'string',
								'RnD' => true,
								'SampleUse' => 'string',
								'SessionTime' => 0,
								'TestingData' => [
									[
										'LabAnalysisTime' => '2024-01-31T10:00:00.000Z',
										'SamplePreparationTime' => '2024-01-31T10:00:00.000Z',
										'TestID' => 0,
										'TestResult' => [
											[
												'LabProvided' => true,
												'TestPanel' => 'string',
												'TestPass' => true,
												'TestValue' => 0,
												'TransactionID' => 0,
											],
										],
									],
								],
								'TransactionID' => 0,
							],
						],
						'LocationLicense' => 'string',
						'MedUsableWeight' => 0,
						'Medicated' => true,
						'NetPackageWeight' => 0,
						'PackageDate' => 'string',
						'ProductName' => 'string',
						'ProductionBatchID' => 0,
						'QAStatus' => 'string',
						'RecUsableWeight' => 0,
						'RemainingAmount' => 0,
						'Remediated' => true,
						'RemediationCount' => 0,
						'RemediationEligible' => true,
						'Restocked' => true,
						'Rework' => true,
						'RoomID' => 0,
						'Seized' => true,
						'SessionTime' => 0,
						'SourcePlantID' => 'string',
						'StateProductIdentifier' => 'string',
						'Status' => 'string',
						'Strain' => 'string',
						'TransactionID' => 0,
						'UOM' => 'string',
						'UnitBased' => true,
						'UsableWeight' => 0,
					],
					'Waste' => [
						'ActiveSampleInventoryID' => 'string',
						'Deleted' => true,
						'Destroyed' => true,
						'Dried' => true,
						'ExpirationDate' => 'string',
						'ExternalID' => 'string',
						'ID' => 'string',
						'Initial' => true,
						'InventoryParentID' => [
							'string',
						],
						'InventoryType' => 0,
						'IsSample' => true,
						'LabSample' => [
							[
								'Amount' => 0,
								'AmountUsed' => 0,
								'CertOfAnalysisHyperlink' => 'string',
								'Deleted' => true,
								'ID' => 0,
								'InventoryID' => 'string',
								'InventoryType' => 0,
								'LabLicense' => 'string',
								'LocationLicense' => 'string',
								'Medical' => true,
								'MedicalGrade' => true,
								'ParentID' => 'string',
								'QualityControlDataHyperlink' => 'string',
								'Result' => 'string',
								'RnD' => true,
								'SampleUse' => 'string',
								'SessionTime' => 0,
								'TestingData' => [
									[
										'LabAnalysisTime' => '2024-01-31T10:00:00.000Z',
										'SamplePreparationTime' => '2024-01-31T10:00:00.000Z',
										'TestID' => 0,
										'TestResult' => [
											[
												'LabProvided' => true,
												'TestPanel' => 'string',
												'TestPass' => true,
												'TestValue' => 0,
												'TransactionID' => 0,
											],
										],
									],
								],
								'TransactionID' => 0,
							],
						],
						'LocationLicense' => 'string',
						'MedUsableWeight' => 0,
						'Medicated' => true,
						'NetPackageWeight' => 0,
						'PackageDate' => 'string',
						'ProductName' => 'string',
						'ProductionBatchID' => 0,
						'QAStatus' => 'string',
						'RecUsableWeight' => 0,
						'RemainingAmount' => 0,
						'Remediated' => true,
						'RemediationCount' => 0,
						'RemediationEligible' => true,
						'Restocked' => true,
						'Rework' => true,
						'RoomID' => 0,
						'Seized' => true,
						'SessionTime' => 0,
						'SourcePlantID' => 'string',
						'StateProductIdentifier' => 'string',
						'Status' => 'string',
						'Strain' => 'string',
						'TransactionID' => 0,
						'UOM' => 'string',
						'UnitBased' => true,
						'UsableWeight' => 0,
					],
					'WetFlower' => [
						'ActiveSampleInventoryID' => 'string',
						'Deleted' => true,
						'Destroyed' => true,
						'Dried' => true,
						'ExpirationDate' => 'string',
						'ExternalID' => 'string',
						'ID' => 'string',
						'Initial' => true,
						'InventoryParentID' => [
							'string',
						],
						'InventoryType' => 0,
						'IsSample' => true,
						'LabSample' => [
							[
								'Amount' => 0,
								'AmountUsed' => 0,
								'CertOfAnalysisHyperlink' => 'string',
								'Deleted' => true,
								'ID' => 0,
								'InventoryID' => 'string',
								'InventoryType' => 0,
								'LabLicense' => 'string',
								'LocationLicense' => 'string',
								'Medical' => true,
								'MedicalGrade' => true,
								'ParentID' => 'string',
								'QualityControlDataHyperlink' => 'string',
								'Result' => 'string',
								'RnD' => true,
								'SampleUse' => 'string',
								'SessionTime' => 0,
								'TestingData' => [
									[
										'LabAnalysisTime' => '2024-01-31T10:00:00.000Z',
										'SamplePreparationTime' => '2024-01-31T10:00:00.000Z',
										'TestID' => 0,
										'TestResult' => [
											[
												'LabProvided' => true,
												'TestPanel' => 'string',
												'TestPass' => true,
												'TestValue' => 0,
												'TransactionID' => 0,
											],
										],
									],
								],
								'TransactionID' => 0,
							],
						],
						'LocationLicense' => 'string',
						'MedUsableWeight' => 0,
						'Medicated' => true,
						'NetPackageWeight' => 0,
						'PackageDate' => 'string',
						'ProductName' => 'string',
						'ProductionBatchID' => 0,
						'QAStatus' => 'string',
						'RecUsableWeight' => 0,
						'RemainingAmount' => 0,
						'Remediated' => true,
						'RemediationCount' => 0,
						'RemediationEligible' => true,
						'Restocked' => true,
						'Rework' => true,
						'RoomID' => 0,
						'Seized' => true,
						'SessionTime' => 0,
						'SourcePlantID' => 'string',
						'StateProductIdentifier' => 'string',
						'Status' => 'string',
						'Strain' => 'string',
						'TransactionID' => 0,
						'UOM' => 'string',
						'UnitBased' => true,
						'UsableWeight' => 0,
					],
				],
				'SessionTime' => 0,
				'TransactionID' => 0,
			]);
		});
		$a->put('/v1/harvest-batch/{batchid}/harvest/schedule', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				'HarvestBatch' => [
					'CreatedOn' => 'string',
					'CurrentState' => 'string',
					'Deleted' => true,
					'ExternalID' => 'string',
					'HarvestBatchID' => 'string',
					'HarvestScheduleDate' => 'string',
					'HarvestScheduled' => true,
					'LocationLicense' => 'string',
					'PlantCount' => 0,
					'TransactionID' => 0,
					'UpdatedOn' => 'string',
				],
				'SessionTime' => 0,
				'TransactionID' => 0,
			]);
		});
		$a->put('/v1/harvest-batch/{batchid}/harvest/schedule/undo', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				'HarvestBatch' => [
					'CreatedOn' => 'string',
					'CurrentState' => 'string',
					'Deleted' => true,
					'ExternalID' => 'string',
					'HarvestBatchID' => 'string',
					'HarvestScheduleDate' => 'string',
					'HarvestScheduled' => true,
					'LocationLicense' => 'string',
					'PlantCount' => 0,
					'TransactionID' => 0,
					'UpdatedOn' => 'string',
				],
				'SessionTime' => 0,
				'TransactionID' => 0,
			]);
		});
		$a->delete('/v1/harvest-batch/{batchid}/harvest/{harvestid}', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				'Harvest' => [
					'AdditionalCollections' => true,
					'Deleted' => true,
					'Derivative' => [
						[
							'Deleted' => true,
							'HarvestID' => 'string',
							'ID' => 'string',
							'InventoryID' => 'string',
							'InventoryType' => 0,
							'LocationLicense' => 'string',
							'TransactionID' => 0,
							'Weight' => 0,
						],
					],
					'DryWeightMax' => 0,
					'ExternalID' => 'string',
					'FinalizeHarvestCure' => true,
					'HarvestBatchID' => 'string',
					'HarvestID' => 'string',
					'LocationLicense' => 'string',
					'TotalHarvestWeight' => 0,
					'TransactionID' => 0,
					'UOM' => 'string',
				],
				'HarvestBatch' => [
					'CreatedOn' => 'string',
					'CurrentState' => 'string',
					'Deleted' => true,
					'ExternalID' => 'string',
					'HarvestBatchID' => 'string',
					'HarvestScheduleDate' => 'string',
					'HarvestScheduled' => true,
					'LocationLicense' => 'string',
					'PlantCount' => 0,
					'TransactionID' => 0,
					'UpdatedOn' => 'string',
				],
				'Inventory' => [
					[
						'ActiveSampleInventoryID' => 'string',
						'Deleted' => true,
						'Destroyed' => true,
						'Dried' => true,
						'ExpirationDate' => 'string',
						'ExternalID' => 'string',
						'ID' => 'string',
						'Initial' => true,
						'InventoryParentID' => [
							'string',
						],
						'InventoryType' => 0,
						'IsSample' => true,
						'LabSample' => [
							[
								'Amount' => 0,
								'AmountUsed' => 0,
								'CertOfAnalysisHyperlink' => 'string',
								'Deleted' => true,
								'ID' => 0,
								'InventoryID' => 'string',
								'InventoryType' => 0,
								'LabLicense' => 'string',
								'LocationLicense' => 'string',
								'Medical' => true,
								'MedicalGrade' => true,
								'ParentID' => 'string',
								'QualityControlDataHyperlink' => 'string',
								'Result' => 'string',
								'RnD' => true,
								'SampleUse' => 'string',
								'SessionTime' => 0,
								'TestingData' => [
									[
										'LabAnalysisTime' => '2024-01-31T10:00:00.000Z',
										'SamplePreparationTime' => '2024-01-31T10:00:00.000Z',
										'TestID' => 0,
										'TestResult' => [
											[
												'LabProvided' => true,
												'TestPanel' => 'string',
												'TestPass' => true,
												'TestValue' => 0,
												'TransactionID' => 0,
											],
										],
									],
								],
								'TransactionID' => 0,
							],
						],
						'LocationLicense' => 'string',
						'MedUsableWeight' => 0,
						'Medicated' => true,
						'NetPackageWeight' => 0,
						'PackageDate' => 'string',
						'ProductName' => 'string',
						'ProductionBatchID' => 0,
						'QAStatus' => 'string',
						'RecUsableWeight' => 0,
						'RemainingAmount' => 0,
						'Remediated' => true,
						'RemediationCount' => 0,
						'RemediationEligible' => true,
						'Restocked' => true,
						'Rework' => true,
						'RoomID' => 0,
						'Seized' => true,
						'SessionTime' => 0,
						'SourcePlantID' => 'string',
						'StateProductIdentifier' => 'string',
						'Status' => 'string',
						'Strain' => 'string',
						'TransactionID' => 0,
						'UOM' => 'string',
						'UnitBased' => true,
						'UsableWeight' => 0,
					],
				],
				'SessionTime' => 0,
				'TransactionID' => 0,
			]);
		});
		$a->put('/v1/harvest-batch/{batchid}/harvest/{harvestid}', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				'Harvest' => [
					'AdditionalCollections' => true,
					'Deleted' => true,
					'Derivative' => [
						[
							'Deleted' => true,
							'HarvestID' => 'string',
							'ID' => 'string',
							'InventoryID' => 'string',
							'InventoryType' => 0,
							'LocationLicense' => 'string',
							'TransactionID' => 0,
							'Weight' => 0,
						],
					],
					'DryWeightMax' => 0,
					'ExternalID' => 'string',
					'FinalizeHarvestCure' => true,
					'HarvestBatchID' => 'string',
					'HarvestID' => 'string',
					'LocationLicense' => 'string',
					'TotalHarvestWeight' => 0,
					'TransactionID' => 0,
					'UOM' => 'string',
				],
				'HarvestBatch' => [
					'CreatedOn' => 'string',
					'CurrentState' => 'string',
					'Deleted' => true,
					'ExternalID' => 'string',
					'HarvestBatchID' => 'string',
					'HarvestScheduleDate' => 'string',
					'HarvestScheduled' => true,
					'LocationLicense' => 'string',
					'PlantCount' => 0,
					'TransactionID' => 0,
					'UpdatedOn' => 'string',
				],
				'InventoryCollected' => [
					'Flower' => [
						'ActiveSampleInventoryID' => 'string',
						'Deleted' => true,
						'Destroyed' => true,
						'Dried' => true,
						'ExpirationDate' => 'string',
						'ExternalID' => 'string',
						'ID' => 'string',
						'Initial' => true,
						'InventoryParentID' => [
							'string',
						],
						'InventoryType' => 0,
						'IsSample' => true,
						'LabSample' => [
							[
								'Amount' => 0,
								'AmountUsed' => 0,
								'CertOfAnalysisHyperlink' => 'string',
								'Deleted' => true,
								'ID' => 0,
								'InventoryID' => 'string',
								'InventoryType' => 0,
								'LabLicense' => 'string',
								'LocationLicense' => 'string',
								'Medical' => true,
								'MedicalGrade' => true,
								'ParentID' => 'string',
								'QualityControlDataHyperlink' => 'string',
								'Result' => 'string',
								'RnD' => true,
								'SampleUse' => 'string',
								'SessionTime' => 0,
								'TestingData' => [
									[
										'LabAnalysisTime' => '2024-01-31T10:00:00.000Z',
										'SamplePreparationTime' => '2024-01-31T10:00:00.000Z',
										'TestID' => 0,
										'TestResult' => [
											[
												'LabProvided' => true,
												'TestPanel' => 'string',
												'TestPass' => true,
												'TestValue' => 0,
												'TransactionID' => 0,
											],
										],
									],
								],
								'TransactionID' => 0,
							],
						],
						'LocationLicense' => 'string',
						'MedUsableWeight' => 0,
						'Medicated' => true,
						'NetPackageWeight' => 0,
						'PackageDate' => 'string',
						'ProductName' => 'string',
						'ProductionBatchID' => 0,
						'QAStatus' => 'string',
						'RecUsableWeight' => 0,
						'RemainingAmount' => 0,
						'Remediated' => true,
						'RemediationCount' => 0,
						'RemediationEligible' => true,
						'Restocked' => true,
						'Rework' => true,
						'RoomID' => 0,
						'Seized' => true,
						'SessionTime' => 0,
						'SourcePlantID' => 'string',
						'StateProductIdentifier' => 'string',
						'Status' => 'string',
						'Strain' => 'string',
						'TransactionID' => 0,
						'UOM' => 'string',
						'UnitBased' => true,
						'UsableWeight' => 0,
					],
					'OtherMaterial' => [
						'ActiveSampleInventoryID' => 'string',
						'Deleted' => true,
						'Destroyed' => true,
						'Dried' => true,
						'ExpirationDate' => 'string',
						'ExternalID' => 'string',
						'ID' => 'string',
						'Initial' => true,
						'InventoryParentID' => [
							'string',
						],
						'InventoryType' => 0,
						'IsSample' => true,
						'LabSample' => [
							[
								'Amount' => 0,
								'AmountUsed' => 0,
								'CertOfAnalysisHyperlink' => 'string',
								'Deleted' => true,
								'ID' => 0,
								'InventoryID' => 'string',
								'InventoryType' => 0,
								'LabLicense' => 'string',
								'LocationLicense' => 'string',
								'Medical' => true,
								'MedicalGrade' => true,
								'ParentID' => 'string',
								'QualityControlDataHyperlink' => 'string',
								'Result' => 'string',
								'RnD' => true,
								'SampleUse' => 'string',
								'SessionTime' => 0,
								'TestingData' => [
									[
										'LabAnalysisTime' => '2024-01-31T10:00:00.000Z',
										'SamplePreparationTime' => '2024-01-31T10:00:00.000Z',
										'TestID' => 0,
										'TestResult' => [
											[
												'LabProvided' => true,
												'TestPanel' => 'string',
												'TestPass' => true,
												'TestValue' => 0,
												'TransactionID' => 0,
											],
										],
									],
								],
								'TransactionID' => 0,
							],
						],
						'LocationLicense' => 'string',
						'MedUsableWeight' => 0,
						'Medicated' => true,
						'NetPackageWeight' => 0,
						'PackageDate' => 'string',
						'ProductName' => 'string',
						'ProductionBatchID' => 0,
						'QAStatus' => 'string',
						'RecUsableWeight' => 0,
						'RemainingAmount' => 0,
						'Remediated' => true,
						'RemediationCount' => 0,
						'RemediationEligible' => true,
						'Restocked' => true,
						'Rework' => true,
						'RoomID' => 0,
						'Seized' => true,
						'SessionTime' => 0,
						'SourcePlantID' => 'string',
						'StateProductIdentifier' => 'string',
						'Status' => 'string',
						'Strain' => 'string',
						'TransactionID' => 0,
						'UOM' => 'string',
						'UnitBased' => true,
						'UsableWeight' => 0,
					],
					'Waste' => [
						'ActiveSampleInventoryID' => 'string',
						'Deleted' => true,
						'Destroyed' => true,
						'Dried' => true,
						'ExpirationDate' => 'string',
						'ExternalID' => 'string',
						'ID' => 'string',
						'Initial' => true,
						'InventoryParentID' => [
							'string',
						],
						'InventoryType' => 0,
						'IsSample' => true,
						'LabSample' => [
							[
								'Amount' => 0,
								'AmountUsed' => 0,
								'CertOfAnalysisHyperlink' => 'string',
								'Deleted' => true,
								'ID' => 0,
								'InventoryID' => 'string',
								'InventoryType' => 0,
								'LabLicense' => 'string',
								'LocationLicense' => 'string',
								'Medical' => true,
								'MedicalGrade' => true,
								'ParentID' => 'string',
								'QualityControlDataHyperlink' => 'string',
								'Result' => 'string',
								'RnD' => true,
								'SampleUse' => 'string',
								'SessionTime' => 0,
								'TestingData' => [
									[
										'LabAnalysisTime' => '2024-01-31T10:00:00.000Z',
										'SamplePreparationTime' => '2024-01-31T10:00:00.000Z',
										'TestID' => 0,
										'TestResult' => [
											[
												'LabProvided' => true,
												'TestPanel' => 'string',
												'TestPass' => true,
												'TestValue' => 0,
												'TransactionID' => 0,
											],
										],
									],
								],
								'TransactionID' => 0,
							],
						],
						'LocationLicense' => 'string',
						'MedUsableWeight' => 0,
						'Medicated' => true,
						'NetPackageWeight' => 0,
						'PackageDate' => 'string',
						'ProductName' => 'string',
						'ProductionBatchID' => 0,
						'QAStatus' => 'string',
						'RecUsableWeight' => 0,
						'RemainingAmount' => 0,
						'Remediated' => true,
						'RemediationCount' => 0,
						'RemediationEligible' => true,
						'Restocked' => true,
						'Rework' => true,
						'RoomID' => 0,
						'Seized' => true,
						'SessionTime' => 0,
						'SourcePlantID' => 'string',
						'StateProductIdentifier' => 'string',
						'Status' => 'string',
						'Strain' => 'string',
						'TransactionID' => 0,
						'UOM' => 'string',
						'UnitBased' => true,
						'UsableWeight' => 0,
					],

					'WetFlower' => [
						'ActiveSampleInventoryID' => 'string',
						'Deleted' => true,
						'Destroyed' => true,
						'Dried' => true,
						'ExpirationDate' => 'string',
						'ExternalID' => 'string',
						'ID' => 'string',
						'Initial' => true,
						'InventoryParentID' => [
							'string',
						],
						'InventoryType' => 0,
						'IsSample' => true,
						'LabSample' => [
							[
								'Amount' => 0,
								'AmountUsed' => 0,
								'CertOfAnalysisHyperlink' => 'string',
								'Deleted' => true,
								'ID' => 0,
								'InventoryID' => 'string',
								'InventoryType' => 0,
								'LabLicense' => 'string',
								'LocationLicense' => 'string',
								'Medical' => true,
								'MedicalGrade' => true,
								'ParentID' => 'string',
								'QualityControlDataHyperlink' => 'string',
								'Result' => 'string',
								'RnD' => true,
								'SampleUse' => 'string',
								'SessionTime' => 0,
								'TestingData' => [
									[
										'LabAnalysisTime' => '2024-01-31T10:00:00.000Z',
										'SamplePreparationTime' => '2024-01-31T10:00:00.000Z',
										'TestID' => 0,
										'TestResult' => [
											[
												'LabProvided' => true,
												'TestPanel' => 'string',
												'TestPass' => true,
												'TestValue' => 0,
												'TransactionID' => 0,
											],
										],
									],
								],
								'TransactionID' => 0,
							],
						],
						'LocationLicense' => 'string',
						'MedUsableWeight' => 0,
						'Medicated' => true,
						'NetPackageWeight' => 0,
						'PackageDate' => 'string',
						'ProductName' => 'string',
						'ProductionBatchID' => 0,
						'QAStatus' => 'string',
						'RecUsableWeight' => 0,
						'RemainingAmount' => 0,
						'Remediated' => true,
						'RemediationCount' => 0,
						'RemediationEligible' => true,
						'Restocked' => true,
						'Rework' => true,
						'RoomID' => 0,
						'Seized' => true,
						'SessionTime' => 0,
						'SourcePlantID' => 'string',
						'StateProductIdentifier' => 'string',
						'Status' => 'string',
						'Strain' => 'string',
						'TransactionID' => 0,
						'UOM' => 'string',
						'UnitBased' => true,
						'UsableWeight' => 0,
					],
				],
				'SessionTime' => 0,
				'TransactionID' => 0,
			]);
		});
		$a->delete('/v1/harvest-batch/{batchid}/plant', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				'HarvestBatch' => [
					'CreatedOn' => 'string',
					'CurrentState' => 'string',
					'Deleted' => true,
					'ExternalID' => 'string',
					'HarvestBatchID' => 'string',
					'HarvestScheduleDate' => 'string',
					'HarvestScheduled' => true,
					'LocationLicense' => 'string',
					'PlantCount' => 0,
					'TransactionID' => 0,
					'UpdatedOn' => 'string',
				],
				'Plant' => [
					[
						'BirthDate' => 'string',
						'Converted' => true,
						'CureCollections' => 0,
						'Deleted' => true,
						'DestroyReason' => 'string',
						'DestroyReasonID' => 0,
						'DestroyScheduled' => true,
						'DestroyScheduledTime' => 'string',
						'ExternalID' => 'string',
						'HarvestBatchID' => 'string',
						'HarvestCollections' => 0,
						'HarvestScheduled' => true,
						'ID' => 'string',
						'Location' => 'string',
						'Mother' => true,
						'OrgID' => 0,
						'ParentPlantID' => 'string',
						'RoomID' => 0,
						'SessionTime' => 0,
						'SourceInventoryID' => 'string',
						'State' => 'string',
						'StateID' => 0,
						'Strain' => 'string',
						'TransactionID' => 0,
					],
				],
				'Sessiontime' => 0,
				'TransactionID' => 0,
			]);
		});
		$a->put('/v1/harvest-batch/{batchid}/plant', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				'HarvestBatch' => [
					'CreatedOn' => 'string',
					'CurrentState' => 'string',
					'Deleted' => true,
					'ExternalID' => 'string',
					'HarvestBatchID' => 'string',
					'HarvestScheduleDate' => 'string',
					'HarvestScheduled' => true,
					'LocationLicense' => 'string',
					'PlantCount' => 0,
					'TransactionID' => 0,
					'UpdatedOn' => 'string',
				],
				'Plant' => [
					[
						'BirthDate' => 'string',
						'Converted' => true,
						'CureCollections' => 0,
						'Deleted' => true,
						'DestroyReason' => 'string',
						'DestroyReasonID' => 0,
						'DestroyScheduled' => true,
						'DestroyScheduledTime' => 'string',
						'ExternalID' => 'string',
						'HarvestBatchID' => 'string',
						'HarvestCollections' => 0,
						'HarvestScheduled' => true,
						'ID' => 'string',
						'Location' => 'string',
						'Mother' => true,
						'OrgID' => 0,
						'ParentPlantID' => 'string',
						'RoomID' => 0,
						'SessionTime' => 0,
						'SourceInventoryID' => 'string',
						'State' => 'string',
						'StateID' => 0,
						'Strain' => 'string',
						'TransactionID' => 0,
					],
				],
				'Sessiontime' => 0,
				'TransactionID' => 0,
			]
			);
		});

		// Inventory
		$a->get('/v1/inventory', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				'Inventory' => [
					[
						'ActiveSampleInventoryID' => 'string',
						'Deleted' => true,
						'Destroyed' => true,
						'Dried' => true,
						'ExpirationDate' => 'string',
						'ExternalID' => 'string',
						'ID' => 'string',
						'Initial' => true,
						'InventoryParentID' => [
							'string',
						],
						'InventoryType' => 0,
						'IsSample' => true,
						'LabSample' => [
							[
								'Amount' => 0,
								'AmountUsed' => 0,
								'CertOfAnalysisHyperlink' => 'string',
								'Deleted' => true,
								'ID' => 0,
								'InventoryID' => 'string',
								'InventoryType' => 0,
								'LabLicense' => 'string',
								'LocationLicense' => 'string',
								'Medical' => true,
								'MedicalGrade' => true,
								'ParentID' => 'string',
								'QualityControlDataHyperlink' => 'string',
								'Result' => 'string',
								'RnD' => true,
								'SampleUse' => 'string',
								'SessionTime' => 0,
								'TestingData' => [
									[
										'LabAnalysisTime' => '2024-01-31T10:00:00.000Z',
										'SamplePreparationTime' => '2024-01-31T10:00:00.000Z',
										'TestID' => 0,
										'TestResult' => [
											[
												'LabProvided' => true,
												'TestPanel' => 'string',
												'TestPass' => true,
												'TestValue' => 0,
												'TransactionID' => 0,
											],
										],
									],
								],
								'TransactionID' => 0,
							],
						],
						'LocationLicense' => 'string',
						'MedUsableWeight' => 0,
						'Medicated' => true,
						'NetPackageWeight' => 0,
						'PackageDate' => 'string',
						'ProductName' => 'string',
						'ProductionBatchID' => 0,
						'QAStatus' => 'string',
						'RecUsableWeight' => 0,
						'RemainingAmount' => 0,
						'Remediated' => true,
						'RemediationCount' => 0,
						'RemediationEligible' => true,
						'Restocked' => true,
						'Rework' => true,
						'RoomID' => 0,
						'Seized' => true,
						'SessionTime' => 0,
						'SourcePlantID' => 'string',
						'StateProductIdentifier' => 'string',
						'Status' => 'string',
						'Strain' => 'string',
						'TransactionID' => 0,
						'UOM' => 'string',
						'UnitBased' => true,
						'UsableWeight' => 0,
					],
				],
				'NextCursor' => 0,
				'NextTransactionID' => 0,
			]
			);
		});
		$a->post('/v1/inventory', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				'Inventory' => [
					[
						'ActiveSampleInventoryID' => 'string',
						'Deleted' => true,
						'Destroyed' => true,
						'Dried' => true,
						'ExpirationDate' => 'string',
						'ExternalID' => 'string',
						'ID' => 'string',
						'Initial' => true,
						'InventoryParentID' => [
							'string',
						],
						'InventoryType' => 0,
						'IsSample' => true,
						'LabSample' => [
							[
								'Amount' => 0,
								'AmountUsed' => 0,
								'CertOfAnalysisHyperlink' => 'string',
								'Deleted' => true,
								'ID' => 0,
								'InventoryID' => 'string',
								'InventoryType' => 0,
								'LabLicense' => 'string',
								'LocationLicense' => 'string',
								'Medical' => true,
								'MedicalGrade' => true,
								'ParentID' => 'string',
								'QualityControlDataHyperlink' => 'string',
								'Result' => 'string',
								'RnD' => true,
								'SampleUse' => 'string',
								'SessionTime' => 0,
								'TestingData' => [
									[
										'LabAnalysisTime' => '2024-01-31T10:00:00.000Z',
										'SamplePreparationTime' => '2024-01-31T10:00:00.000Z',
										'TestID' => 0,
										'TestResult' => [
											[
												'LabProvided' => true,
												'TestPanel' => 'string',
												'TestPass' => true,
												'TestValue' => 0,
												'TransactionID' => 0,
											],
										],
									],
								],
								'TransactionID' => 0,
							],
						],
						'LocationLicense' => 'string',
						'MedUsableWeight' => 0,
						'Medicated' => true,
						'NetPackageWeight' => 0,
						'PackageDate' => 'string',
						'ProductName' => 'string',
						'ProductionBatchID' => 0,
						'QAStatus' => 'string',
						'RecUsableWeight' => 0,
						'RemainingAmount' => 0,
						'Remediated' => true,
						'RemediationCount' => 0,
						'RemediationEligible' => true,
						'Restocked' => true,
						'Rework' => true,
						'RoomID' => 0,
						'Seized' => true,
						'SessionTime' => 0,
						'SourcePlantID' => 'string',
						'StateProductIdentifier' => 'string',
						'Status' => 'string',
						'Strain' => 'string',
						'TransactionID' => 0,
						'UOM' => 'string',
						'UnitBased' => true,
						'UsableWeight' => 0,
					],
				],
				'SessionTime' => 0,
				'TransactionID' => 0,
			]
			);
		});
		$a->put('/v1/inventory', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				'Inventory' => [
					[
						'ActiveSampleInventoryID' => 'string',
						'Deleted' => true,
						'Destroyed' => true,
						'Dried' => true,
						'ExpirationDate' => 'string',
						'ExternalID' => 'string',
						'ID' => 'string',
						'Initial' => true,
						'InventoryParentID' => [
							'string',
						],
						'InventoryType' => 0,
						'IsSample' => true,
						'LabSample' => [
							[
								'Amount' => 0,
								'AmountUsed' => 0,
								'CertOfAnalysisHyperlink' => 'string',
								'Deleted' => true,
								'ID' => 0,
								'InventoryID' => 'string',
								'InventoryType' => 0,
								'LabLicense' => 'string',
								'LocationLicense' => 'string',
								'Medical' => true,
								'MedicalGrade' => true,
								'ParentID' => 'string',
								'QualityControlDataHyperlink' => 'string',
								'Result' => 'string',
								'RnD' => true,
								'SampleUse' => 'string',
								'SessionTime' => 0,
								'TestingData' => [
									[
										'LabAnalysisTime' => '2024-01-31T10:00:00.000Z',
										'SamplePreparationTime' => '2024-01-31T10:00:00.000Z',
										'TestID' => 0,
										'TestResult' => [
											[
												'LabProvided' => true,
												'TestPanel' => 'string',
												'TestPass' => true,
												'TestValue' => 0,
												'TransactionID' => 0,
											],
										],
									],
								],
								'TransactionID' => 0,
							],
						],
						'LocationLicense' => 'string',
						'MedUsableWeight' => 0,
						'Medicated' => true,
						'NetPackageWeight' => 0,
						'PackageDate' => 'string',
						'ProductName' => 'string',
						'ProductionBatchID' => 0,
						'QAStatus' => 'string',
						'RecUsableWeight' => 0,
						'RemainingAmount' => 0,
						'Remediated' => true,
						'RemediationCount' => 0,
						'RemediationEligible' => true,
						'Restocked' => true,
						'Rework' => true,
						'RoomID' => 0,
						'Seized' => true,
						'SessionTime' => 0,
						'SourcePlantID' => 'string',
						'StateProductIdentifier' => 'string',
						'Status' => 'string',
						'Strain' => 'string',
						'TransactionID' => 0,
						'UOM' => 'string',
						'UnitBased' => true,
						'UsableWeight' => 0,
					],
				],
				'SessionTime' => 0,
				'TransactionID' => 0,
			]
			);
		});
		$a->put('/v1/inventory/adjust', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				'Inventory' => [
					[
						'ActiveSampleInventoryID' => 'string',
						'Deleted' => true,
						'Destroyed' => true,
						'Dried' => true,
						'ExpirationDate' => 'string',
						'ExternalID' => 'string',
						'ID' => 'string',
						'Initial' => true,
						'InventoryParentID' => [
							'string',
						],
						'InventoryType' => 0,
						'IsSample' => true,
						'LabSample' => [
							[
								'Amount' => 0,
								'AmountUsed' => 0,
								'CertOfAnalysisHyperlink' => 'string',
								'Deleted' => true,
								'ID' => 0,
								'InventoryID' => 'string',
								'InventoryType' => 0,
								'LabLicense' => 'string',
								'LocationLicense' => 'string',
								'Medical' => true,
								'MedicalGrade' => true,
								'ParentID' => 'string',
								'QualityControlDataHyperlink' => 'string',
								'Result' => 'string',
								'RnD' => true,
								'SampleUse' => 'string',
								'SessionTime' => 0,
								'TestingData' => [
									[
										'LabAnalysisTime' => '2024-01-31T10:00:00.000Z',
										'SamplePreparationTime' => '2024-01-31T10:00:00.000Z',
										'TestID' => 0,
										'TestResult' => [
											[
												'LabProvided' => true,
												'TestPanel' => 'string',
												'TestPass' => true,
												'TestValue' => 0,
												'TransactionID' => 0,
											],
										],
									],
								],
								'TransactionID' => 0,
							],
						],
						'LocationLicense' => 'string',
						'MedUsableWeight' => 0,
						'Medicated' => true,
						'NetPackageWeight' => 0,
						'PackageDate' => 'string',
						'ProductName' => 'string',
						'ProductionBatchID' => 0,
						'QAStatus' => 'string',
						'RecUsableWeight' => 0,
						'RemainingAmount' => 0,
						'Remediated' => true,
						'RemediationCount' => 0,
						'RemediationEligible' => true,
						'Restocked' => true,
						'Rework' => true,
						'RoomID' => 0,
						'Seized' => true,
						'SessionTime' => 0,
						'SourcePlantID' => 'string',
						'StateProductIdentifier' => 'string',
						'Status' => 'string',
						'Strain' => 'string',
						'TransactionID' => 0,
						'UOM' => 'string',
						'UnitBased' => true,
						'UsableWeight' => 0,
					],
				],
				'InventoryAdjustment' => [
					[
						'ID' => 0,
						'InventoryID' => 'string',
						'LocationLicense' => 'string',
						'NewAmount' => 0,
						'PreviousAmount' => 0,
						'Reason' => 'string',
						'SessionTime' => 0,
						'TransactionID' => 0,
						'Type' => 0,
					],
				],
				'SessionTime' => 0,
				'TransactionID' => 0,
			]
			);
		});
		$a->get('/v1/inventory/adjustment', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				'Adjustments' => [
					[
						'ID' => 0,
						'InventoryID' => 'string',
						'LocationLicense' => 'string',
						'NewAmount' => 0,
						'PreviousAmount' => 0,
						'Reason' => 'string',
						'SessionTime' => 0,
						'TransactionID' => 0,
						'Type' => 0,
					],
				],
				'NextCursor' => 0,
				'NextTransactionID' => 0,
			]
			);
		});
		$a->get('/v1/inventory/adjustment/type', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				'AdjustmentTypes' => [
					[
						'ID' => 0,
						'Name' => 'string',
					],
				],
			]
			);
		});
		$a->get('/v1/inventory/adjustment/{id}', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				'Adjustment' => [
					'ID' => 0,
					'InventoryID' => 'string',
					'LocationLicense' => 'string',
					'NewAmount' => 0,
					'PreviousAmount' => 0,
					'Reason' => 'string',
					'SessionTime' => 0,
					'TransactionID' => 0,
					'Type' => 0,
				],
			]
			);
		});
		$a->post('/v1/inventory/conversion', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				'Derivative' => [
					'ActiveSampleInventoryID' => 'string',
					'Deleted' => true,
					'Destroyed' => true,
					'Dried' => true,
					'ExpirationDate' => 'string',
					'ExternalID' => 'string',
					'ID' => 'string',
					'Initial' => true,
					'InventoryParentID' => [
						'string',
					],
					'InventoryType' => 0,
					'IsSample' => true,
					'LabSample' => [
						[
							'Amount' => 0,
							'AmountUsed' => 0,
							'CertOfAnalysisHyperlink' => 'string',
							'Deleted' => true,
							'ID' => 0,
							'InventoryID' => 'string',
							'InventoryType' => 0,
							'LabLicense' => 'string',
							'LocationLicense' => 'string',
							'Medical' => true,
							'MedicalGrade' => true,
							'ParentID' => 'string',
							'QualityControlDataHyperlink' => 'string',
							'Result' => 'string',
							'RnD' => true,
							'SampleUse' => 'string',
							'SessionTime' => 0,
							'TestingData' => [
								[
									'LabAnalysisTime' => '2024-01-31T10:00:00.000Z',
									'SamplePreparationTime' => '2024-01-31T10:00:00.000Z',
									'TestID' => 0,
									'TestResult' => [
										[
											'LabProvided' => true,
											'TestPanel' => 'string',
											'TestPass' => true,
											'TestValue' => 0,
											'TransactionID' => 0,
										],
									],
								],
							],
							'TransactionID' => 0,
						],
					],
					'LocationLicense' => 'string',
					'MedUsableWeight' => 0,
					'Medicated' => true,
					'NetPackageWeight' => 0,
					'PackageDate' => 'string',
					'ProductName' => 'string',
					'ProductionBatchID' => 0,
					'QAStatus' => 'string',
					'RecUsableWeight' => 0,
					'RemainingAmount' => 0,
					'Remediated' => true,
					'RemediationCount' => 0,
					'RemediationEligible' => true,
					'Restocked' => true,
					'Rework' => true,
					'RoomID' => 0,
					'Seized' => true,
					'SessionTime' => 0,
					'SourcePlantID' => 'string',
					'StateProductIdentifier' => 'string',
					'Status' => 'string',
					'Strain' => 'string',
					'TransactionID' => 0,
					'UOM' => 'string',
					'UnitBased' => true,
					'UsableWeight' => 0,
				],
				'InventoryConversion' => [
					'Amount' => 0,
					'Deleted' => true,
					'ID' => 0,
					'InventoryID' => 'string',
					'Item' => [
						[
							'Amount' => 0,
							'ConversionID' => 0,
							'ID' => 0,
							'InventoryID' => 'string',
							'TransactionID' => 0,
							'UOM' => 'string',
						],
					],
					'LicenseNumber' => 'string',
					'SessionTime' => 0,
					'TransactionID' => 0,
					'WeightPerUnit' => 0,
				],
				'Item' => [
					[
						'ActiveSampleInventoryID' => 'string',
						'Deleted' => true,
						'Destroyed' => true,
						'Dried' => true,
						'ExpirationDate' => 'string',
						'ExternalID' => 'string',
						'ID' => 'string',
						'Initial' => true,
						'InventoryParentID' => [
							'string',
						],
						'InventoryType' => 0,
						'IsSample' => true,
						'LabSample' => [
							[
								'Amount' => 0,
								'AmountUsed' => 0,
								'CertOfAnalysisHyperlink' => 'string',
								'Deleted' => true,
								'ID' => 0,
								'InventoryID' => 'string',
								'InventoryType' => 0,
								'LabLicense' => 'string',
								'LocationLicense' => 'string',
								'Medical' => true,
								'MedicalGrade' => true,
								'ParentID' => 'string',
								'QualityControlDataHyperlink' => 'string',
								'Result' => 'string',
								'RnD' => true,
								'SampleUse' => 'string',
								'SessionTime' => 0,
								'TestingData' => [
									[
										'LabAnalysisTime' => '2024-01-31T10:00:00.000Z',
										'SamplePreparationTime' => '2024-01-31T10:00:00.000Z',
										'TestID' => 0,
										'TestResult' => [
											[
												'LabProvided' => true,
												'TestPanel' => 'string',
												'TestPass' => true,
												'TestValue' => 0,
												'TransactionID' => 0,
											],
										],
									],
								],
								'TransactionID' => 0,
							],
						],
						'LocationLicense' => 'string',
						'MedUsableWeight' => 0,
						'Medicated' => true,
						'NetPackageWeight' => 0,
						'PackageDate' => 'string',
						'ProductName' => 'string',
						'ProductionBatchID' => 0,
						'QAStatus' => 'string',
						'RecUsableWeight' => 0,
						'RemainingAmount' => 0,
						'Remediated' => true,
						'RemediationCount' => 0,
						'RemediationEligible' => true,
						'Restocked' => true,
						'Rework' => true,
						'RoomID' => 0,
						'Seized' => true,
						'SessionTime' => 0,
						'SourcePlantID' => 'string',
						'StateProductIdentifier' => 'string',
						'Status' => 'string',
						'Strain' => 'string',
						'TransactionID' => 0,
						'UOM' => 'string',
						'UnitBased' => true,
						'UsableWeight' => 0,
					],
				],
				'SessionTime' => 0,
				'TransactionID' => 0,
				'Waste' => [
					'ActiveSampleInventoryID' => 'string',
					'Deleted' => true,
					'Destroyed' => true,
					'Dried' => true,
					'ExpirationDate' => 'string',
					'ExternalID' => 'string',
					'ID' => 'string',
					'Initial' => true,
					'InventoryParentID' => [
						'string',
					],
					'InventoryType' => 0,
					'IsSample' => true,
					'LabSample' => [
						[
							'Amount' => 0,
							'AmountUsed' => 0,
							'CertOfAnalysisHyperlink' => 'string',
							'Deleted' => true,
							'ID' => 0,
							'InventoryID' => 'string',
							'InventoryType' => 0,
							'LabLicense' => 'string',
							'LocationLicense' => 'string',
							'Medical' => true,
							'MedicalGrade' => true,
							'ParentID' => 'string',
							'QualityControlDataHyperlink' => 'string',
							'Result' => 'string',
							'RnD' => true,
							'SampleUse' => 'string',
							'SessionTime' => 0,
							'TestingData' => [
								[
									'LabAnalysisTime' => '2024-01-31T10:00:00.000Z',
									'SamplePreparationTime' => '2024-01-31T10:00:00.000Z',
									'TestID' => 0,
									'TestResult' => [
										[
											'LabProvided' => true,
											'TestPanel' => 'string',
											'TestPass' => true,
											'TestValue' => 0,
											'TransactionID' => 0,
										],
									],
								],
							],
							'TransactionID' => 0,
						],
					],
					'LocationLicense' => 'string',
					'MedUsableWeight' => 0,
					'Medicated' => true,
					'NetPackageWeight' => 0,
					'PackageDate' => 'string',
					'ProductName' => 'string',
					'ProductionBatchID' => 0,
					'QAStatus' => 'string',
					'RecUsableWeight' => 0,
					'RemainingAmount' => 0,
					'Remediated' => true,
					'RemediationCount' => 0,
					'RemediationEligible' => true,
					'Restocked' => true,
					'Rework' => true,
					'RoomID' => 0,
					'Seized' => true,
					'SessionTime' => 0,
					'SourcePlantID' => 'string',
					'StateProductIdentifier' => 'string',
					'Status' => 'string',
					'Strain' => 'string',
					'TransactionID' => 0,
					'UOM' => 'string',
					'UnitBased' => true,
					'UsableWeight' => 0,
				],
			]
			);
		});
		$a->delete('/v1/inventory/conversion/{id}', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				'SessionTime' => 0,
				'TransactionID' => 0,
			]
			);
		});
		$a->put('/v1/inventory/destroy', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				'Inventory' => [
					[
						'ActiveSampleInventoryID' => 'string',
						'Deleted' => true,
						'Destroyed' => true,
						'Dried' => true,
						'ExpirationDate' => 'string',
						'ExternalID' => 'string',
						'ID' => 'string',
						'Initial' => true,
						'InventoryParentID' => [
							'string',
						],
						'InventoryType' => 0,
						'IsSample' => true,
						'LabSample' => [
							[
								'Amount' => 0,
								'AmountUsed' => 0,
								'CertOfAnalysisHyperlink' => 'string',
								'Deleted' => true,
								'ID' => 0,
								'InventoryID' => 'string',
								'InventoryType' => 0,
								'LabLicense' => 'string',
								'LocationLicense' => 'string',
								'Medical' => true,
								'MedicalGrade' => true,
								'ParentID' => 'string',
								'QualityControlDataHyperlink' => 'string',
								'Result' => 'string',
								'RnD' => true,
								'SampleUse' => 'string',
								'SessionTime' => 0,
								'TestingData' => [
									[
										'LabAnalysisTime' => '2024-01-31T10:00:00.000Z',
										'SamplePreparationTime' => '2024-01-31T10:00:00.000Z',
										'TestID' => 0,
										'TestResult' => [
											[
												'LabProvided' => true,
												'TestPanel' => 'string',
												'TestPass' => true,
												'TestValue' => 0,
												'TransactionID' => 0,
											],
										],
									],
								],
								'TransactionID' => 0,
							],
						],
						'LocationLicense' => 'string',
						'MedUsableWeight' => 0,
						'Medicated' => true,
						'NetPackageWeight' => 0,
						'PackageDate' => 'string',
						'ProductName' => 'string',
						'ProductionBatchID' => 0,
						'QAStatus' => 'string',
						'RecUsableWeight' => 0,
						'RemainingAmount' => 0,
						'Remediated' => true,
						'RemediationCount' => 0,
						'RemediationEligible' => true,
						'Restocked' => true,
						'Rework' => true,
						'RoomID' => 0,
						'Seized' => true,
						'SessionTime' => 0,
						'SourcePlantID' => 'string',
						'StateProductIdentifier' => 'string',
						'Status' => 'string',
						'Strain' => 'string',
						'TransactionID' => 0,
						'UOM' => 'string',
						'UnitBased' => true,
						'UsableWeight' => 0,
					],
				],
				'SessionTime' => 0,
				'TransactionID' => 0,
			]
			);
		});
		$a->get('/v1/inventory/destroy/reason', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				'DestroyReasons' => [
					[
						'ID' => 0,
						'Name' => 'string',
					],
				],
			]
			);
		});
		$a->put('/v1/inventory/destroy/schedule', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				'Inventory' => [
					[
						'ActiveSampleInventoryID' => 'string',
						'Deleted' => true,
						'Destroyed' => true,
						'Dried' => true,
						'ExpirationDate' => 'string',
						'ExternalID' => 'string',
						'ID' => 'string',
						'Initial' => true,
						'InventoryParentID' => [
							'string',
						],
						'InventoryType' => 0,
						'IsSample' => true,
						'LabSample' => [
							[
								'Amount' => 0,
								'AmountUsed' => 0,
								'CertOfAnalysisHyperlink' => 'string',
								'Deleted' => true,
								'ID' => 0,
								'InventoryID' => 'string',
								'InventoryType' => 0,
								'LabLicense' => 'string',
								'LocationLicense' => 'string',
								'Medical' => true,
								'MedicalGrade' => true,
								'ParentID' => 'string',
								'QualityControlDataHyperlink' => 'string',
								'Result' => 'string',
								'RnD' => true,
								'SampleUse' => 'string',
								'SessionTime' => 0,
								'TestingData' => [
									[
										'LabAnalysisTime' => '2024-01-31T10:00:00.000Z',
										'SamplePreparationTime' => '2024-01-31T10:00:00.000Z',
										'TestID' => 0,
										'TestResult' => [
											[
												'LabProvided' => true,
												'TestPanel' => 'string',
												'TestPass' => true,
												'TestValue' => 0,
												'TransactionID' => 0,
											],
										],
									],
								],
								'TransactionID' => 0,
							],
						],
						'LocationLicense' => 'string',
						'MedUsableWeight' => 0,
						'Medicated' => true,
						'NetPackageWeight' => 0,
						'PackageDate' => 'string',
						'ProductName' => 'string',
						'ProductionBatchID' => 0,
						'QAStatus' => 'string',
						'RecUsableWeight' => 0,
						'RemainingAmount' => 0,
						'Remediated' => true,
						'RemediationCount' => 0,
						'RemediationEligible' => true,
						'Restocked' => true,
						'Rework' => true,
						'RoomID' => 0,
						'Seized' => true,
						'SessionTime' => 0,
						'SourcePlantID' => 'string',
						'StateProductIdentifier' => 'string',
						'Status' => 'string',
						'Strain' => 'string',
						'TransactionID' => 0,
						'UOM' => 'string',
						'UnitBased' => true,
						'UsableWeight' => 0,
					],
				],
				'SessionTime' => 0,
				'TransactionID' => 0,
			]
			);
		});
		$a->put('/v1/inventory/destroy/schedule/undo', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				'Inventory' => [
					[
						'ActiveSampleInventoryID' => 'string',
						'Deleted' => true,
						'Destroyed' => true,
						'Dried' => true,
						'ExpirationDate' => 'string',
						'ExternalID' => 'string',
						'ID' => 'string',
						'Initial' => true,
						'InventoryParentID' => [
							'string',
						],
						'InventoryType' => 0,
						'IsSample' => true,
						'LabSample' => [
							[
								'Amount' => 0,
								'AmountUsed' => 0,
								'CertOfAnalysisHyperlink' => 'string',
								'Deleted' => true,
								'ID' => 0,
								'InventoryID' => 'string',
								'InventoryType' => 0,
								'LabLicense' => 'string',
								'LocationLicense' => 'string',
								'Medical' => true,
								'MedicalGrade' => true,
								'ParentID' => 'string',
								'QualityControlDataHyperlink' => 'string',
								'Result' => 'string',
								'RnD' => true,
								'SampleUse' => 'string',
								'SessionTime' => 0,
								'TestingData' => [
									[
										'LabAnalysisTime' => '2024-01-31T10:00:00.000Z',
										'SamplePreparationTime' => '2024-01-31T10:00:00.000Z',
										'TestID' => 0,
										'TestResult' => [
											[
												'LabProvided' => true,
												'TestPanel' => 'string',
												'TestPass' => true,
												'TestValue' => 0,
												'TransactionID' => 0,
											],
										],
									],
								],
								'TransactionID' => 0,
							],
						],
						'LocationLicense' => 'string',
						'MedUsableWeight' => 0,
						'Medicated' => true,
						'NetPackageWeight' => 0,
						'PackageDate' => 'string',
						'ProductName' => 'string',
						'ProductionBatchID' => 0,
						'QAStatus' => 'string',
						'RecUsableWeight' => 0,
						'RemainingAmount' => 0,
						'Remediated' => true,
						'RemediationCount' => 0,
						'RemediationEligible' => true,
						'Restocked' => true,
						'Rework' => true,
						'RoomID' => 0,
						'Seized' => true,
						'SessionTime' => 0,
						'SourcePlantID' => 'string',
						'StateProductIdentifier' => 'string',
						'Status' => 'string',
						'Strain' => 'string',
						'TransactionID' => 0,
						'UOM' => 'string',
						'UnitBased' => true,
						'UsableWeight' => 0,
					],
				],
				'Sessiontime' => 0,
				'TransactionID' => 0,
			]
			);
		});
		$a->get('/v1/inventory/ingredient', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				'InventoryIngredient' => [
					[
						'CreatedOn' => 'string',
						'Deleted' => true,
						'ID' => 0,
						'IngredientName' => 'string',
						'InventoryID' => 'string',
						'LocationLicense' => 'string',
						'Quantity' => 0,
						'TransactionID' => 0,
						'UOM' => 'string',
					],
				],
				'NextCursor' => 0,
				'NextTransactionID' => 0,
			]
			);
		});
		$a->get('/v1/inventory/ingredient/uom', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				'UOM' => [
					'string',
				],
			]
			);
		});
		$a->delete('/v1/inventory/ingredient/{id}', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				'Inventory' => [
					'ActiveSampleInventoryID' => 'string',
					'Deleted' => true,
					'Destroyed' => true,
					'Dried' => true,
					'ExpirationDate' => 'string',
					'ExternalID' => 'string',
					'ID' => 'string',
					'Initial' => true,
					'InventoryParentID' => [
						'string',
					],
					'InventoryType' => 0,
					'IsSample' => true,
					'LabSample' => [
						[
							'Amount' => 0,
							'AmountUsed' => 0,
							'CertOfAnalysisHyperlink' => 'string',
							'Deleted' => true,
							'ID' => 0,
							'InventoryID' => 'string',
							'InventoryType' => 0,
							'LabLicense' => 'string',
							'LocationLicense' => 'string',
							'Medical' => true,
							'MedicalGrade' => true,
							'ParentID' => 'string',
							'QualityControlDataHyperlink' => 'string',
							'Result' => 'string',
							'RnD' => true,
							'SampleUse' => 'string',
							'SessionTime' => 0,
							'TestingData' => [
								[
									'LabAnalysisTime' => '2024-01-31T10:00:00.000Z',
									'SamplePreparationTime' => '2024-01-31T10:00:00.000Z',
									'TestID' => 0,
									'TestResult' => [
										[
											'LabProvided' => true,
											'TestPanel' => 'string',
											'TestPass' => true,
											'TestValue' => 0,
											'TransactionID' => 0,
										],
									],
								],
							],
							'TransactionID' => 0,
						],
					],
					'LocationLicense' => 'string',
					'MedUsableWeight' => 0,
					'Medicated' => true,
					'NetPackageWeight' => 0,
					'PackageDate' => 'string',
					'ProductName' => 'string',
					'ProductionBatchID' => 0,
					'QAStatus' => 'string',
					'RecUsableWeight' => 0,
					'RemainingAmount' => 0,
					'Remediated' => true,
					'RemediationCount' => 0,
					'RemediationEligible' => true,
					'Restocked' => true,
					'Rework' => true,
					'RoomID' => 0,
					'Seized' => true,
					'SessionTime' => 0,
					'SourcePlantID' => 'string',
					'StateProductIdentifier' => 'string',
					'Status' => 'string',
					'Strain' => 'string',
					'TransactionID' => 0,
					'UOM' => 'string',
					'UnitBased' => true,
					'UsableWeight' => 0,
				],
				'InventoryIngredient' => [
					'CreatedOn' => 'string',
					'Deleted' => true,
					'ID' => 0,
					'IngredientName' => 'string',
					'InventoryID' => 'string',
					'LocationLicense' => 'string',
					'Quantity' => 0,
					'TransactionID' => 0,
					'UOM' => 'string',
				],
				'SessionTime' => 0,
				'TransactionID' => 0,
			]
			);
		});
		$a->post('/v1/inventory/initial', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				'Data' => [
					[
						'ErrorCode' => 'string',
						'ErrorData' => [
							'string',
						],
						'ItemIndex' => 0,
						'Message' => 'string',
						'ProviderBarcodeID' => 'string',
						'Success' => true,
						'TraceabilityBarcodeID' => 'string',
						'TransactionID' => 0,
					],
				],
				'Error' => 'string',
				'ErrorCode' => 'string',
				'errorCount' => 0,
			]
			);
		});
		$a->post('/v1/inventory/lot', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				'Derivative' => [
					'ActiveSampleInventoryID' => 'string',
					'Deleted' => true,
					'Destroyed' => true,
					'Dried' => true,
					'ExpirationDate' => 'string',
					'ExternalID' => 'string',
					'ID' => 'string',
					'Initial' => true,
					'InventoryParentID' => [
						'string',
					],
					'InventoryType' => 0,
					'IsSample' => true,
					'LabSample' => [
						[
							'Amount' => 0,
							'AmountUsed' => 0,
							'CertOfAnalysisHyperlink' => 'string',
							'Deleted' => true,
							'ID' => 0,
							'InventoryID' => 'string',
							'InventoryType' => 0,
							'LabLicense' => 'string',
							'LocationLicense' => 'string',
							'Medical' => true,
							'MedicalGrade' => true,
							'ParentID' => 'string',
							'QualityControlDataHyperlink' => 'string',
							'Result' => 'string',
							'RnD' => true,
							'SampleUse' => 'string',
							'SessionTime' => 0,
							'TestingData' => [
								[
									'LabAnalysisTime' => '2024-01-31T10:00:00.000Z',
									'SamplePreparationTime' => '2024-01-31T10:00:00.000Z',
									'TestID' => 0,
									'TestResult' => [
										[
											'LabProvided' => true,
											'TestPanel' => 'string',
											'TestPass' => true,
											'TestValue' => 0,
											'TransactionID' => 0,
										],
									],
								],
							],
							'TransactionID' => 0,
						],
					],
					'LocationLicense' => 'string',
					'MedUsableWeight' => 0,
					'Medicated' => true,
					'NetPackageWeight' => 0,
					'PackageDate' => 'string',
					'ProductName' => 'string',
					'ProductionBatchID' => 0,
					'QAStatus' => 'string',
					'RecUsableWeight' => 0,
					'RemainingAmount' => 0,
					'Remediated' => true,
					'RemediationCount' => 0,
					'RemediationEligible' => true,
					'Restocked' => true,
					'Rework' => true,
					'RoomID' => 0,
					'Seized' => true,
					'SessionTime' => 0,
					'SourcePlantID' => 'string',
					'StateProductIdentifier' => 'string',
					'Status' => 'string',
					'Strain' => 'string',
					'TransactionID' => 0,
					'UOM' => 'string',
					'UnitBased' => true,
					'UsableWeight' => 0,
				],
				'InventoryConversion' => [
					'Amount' => 0,
					'Deleted' => true,
					'ID' => 0,
					'InventoryID' => 'string',
					'Item' => [
						[
							'Amount' => 0,
							'ConversionID' => 0,
							'ID' => 0,
							'InventoryID' => 'string',
							'TransactionID' => 0,
							'UOM' => 'string',
						],
					],
					'LicenseNumber' => 'string',
					'SessionTime' => 0,
					'TransactionID' => 0,
					'WeightPerUnit' => 0,
				],
				'Item' => [
					[
						'ActiveSampleInventoryID' => 'string',
						'Deleted' => true,
						'Destroyed' => true,
						'Dried' => true,
						'ExpirationDate' => 'string',
						'ExternalID' => 'string',
						'ID' => 'string',
						'Initial' => true,
						'InventoryParentID' => [
							'string',
						],
						'InventoryType' => 0,
						'IsSample' => true,
						'LabSample' => [
							[
								'Amount' => 0,
								'AmountUsed' => 0,
								'CertOfAnalysisHyperlink' => 'string',
								'Deleted' => true,
								'ID' => 0,
								'InventoryID' => 'string',
								'InventoryType' => 0,
								'LabLicense' => 'string',
								'LocationLicense' => 'string',
								'Medical' => true,
								'MedicalGrade' => true,
								'ParentID' => 'string',
								'QualityControlDataHyperlink' => 'string',
								'Result' => 'string',
								'RnD' => true,
								'SampleUse' => 'string',
								'SessionTime' => 0,
								'TestingData' => [
									[
										'LabAnalysisTime' => '2024-01-31T10:00:00.000Z',
										'SamplePreparationTime' => '2024-01-31T10:00:00.000Z',
										'TestID' => 0,
										'TestResult' => [
											[
												'LabProvided' => true,
												'TestPanel' => 'string',
												'TestPass' => true,
												'TestValue' => 0,
												'TransactionID' => 0,
											],
										],
									],
								],
								'TransactionID' => 0,
							],
						],
						'LocationLicense' => 'string',
						'MedUsableWeight' => 0,
						'Medicated' => true,
						'NetPackageWeight' => 0,
						'PackageDate' => 'string',
						'ProductName' => 'string',
						'ProductionBatchID' => 0,
						'QAStatus' => 'string',
						'RecUsableWeight' => 0,
						'RemainingAmount' => 0,
						'Remediated' => true,
						'RemediationCount' => 0,
						'RemediationEligible' => true,
						'Restocked' => true,
						'Rework' => true,
						'RoomID' => 0,
						'Seized' => true,
						'SessionTime' => 0,
						'SourcePlantID' => 'string',
						'StateProductIdentifier' => 'string',
						'Status' => 'string',
						'Strain' => 'string',
						'TransactionID' => 0,
						'UOM' => 'string',
						'UnitBased' => true,
						'UsableWeight' => 0,
					],
				],
				'SessionTime' => 0,
				'TransactionID' => 0,
			]
			);
		});
		$a->put('/v1/inventory/move', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				'SessionTime' => 0,
				'TransactionID' => 0,
			]
			);
		});
		$a->get('/v1/inventory/status', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				'Status' => [
					[
						'ID' => 0,
						'Name' => 'string',
					],
				],
			]
			);
		});
		$a->get('/v1/inventory/type', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				'InventoryTypes' => [
					[
						'FinalStage' => true,
						'ID' => 0,
						'IntermediateStage' => true,
						'LotStage' => true,
						'Name' => 'string',
						'Retail' => true,
						'UnitBased' => true,
					],
				],
			]
			);
		});
		$a->get('/v1/inventory/type/{id}', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				'FinalStage' => true,
				'ID' => 0,
				'IntermediateStage' => true,
				'LotStage' => true,
				'Name' => 'string',
				'Retail' => true,
				'UnitBased' => true,
			]
			);
		});
		$a->get('/v1/inventory/{id}', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				'Inventory' => [
					'ActiveSampleInventoryID' => 'string',
					'Deleted' => true,
					'Destroyed' => true,
					'Dried' => true,
					'ExpirationDate' => 'string',
					'ExternalID' => 'string',
					'ID' => 'string',
					'Initial' => true,
					'InventoryParentID' => [
						'string',
					],
					'InventoryType' => 0,
					'IsSample' => true,
					'LabSample' => [
						[
							'Amount' => 0,
							'AmountUsed' => 0,
							'CertOfAnalysisHyperlink' => 'string',
							'Deleted' => true,
							'ID' => 0,
							'InventoryID' => 'string',
							'InventoryType' => 0,
							'LabLicense' => 'string',
							'LocationLicense' => 'string',
							'Medical' => true,
							'MedicalGrade' => true,
							'ParentID' => 'string',
							'QualityControlDataHyperlink' => 'string',
							'Result' => 'string',
							'RnD' => true,
							'SampleUse' => 'string',
							'SessionTime' => 0,
							'TestingData' => [
								[
									'LabAnalysisTime' => '2024-01-31T10:00:00.000Z',
									'SamplePreparationTime' => '2024-01-31T10:00:00.000Z',
									'TestID' => 0,
									'TestResult' => [
										[
											'LabProvided' => true,
											'TestPanel' => 'string',
											'TestPass' => true,
											'TestValue' => 0,
											'TransactionID' => 0,
										],
									],
								],
							],
							'TransactionID' => 0,
						],
					],
					'LocationLicense' => 'string',
					'MedUsableWeight' => 0,
					'Medicated' => true,
					'NetPackageWeight' => 0,
					'PackageDate' => 'string',
					'ProductName' => 'string',
					'ProductionBatchID' => 0,
					'QAStatus' => 'string',
					'RecUsableWeight' => 0,
					'RemainingAmount' => 0,
					'Remediated' => true,
					'RemediationCount' => 0,
					'RemediationEligible' => true,
					'Restocked' => true,
					'Rework' => true,
					'RoomID' => 0,
					'Seized' => true,
					'SessionTime' => 0,
					'SourcePlantID' => 'string',
					'StateProductIdentifier' => 'string',
					'Status' => 'string',
					'Strain' => 'string',
					'TransactionID' => 0,
					'UOM' => 'string',
					'UnitBased' => true,
					'UsableWeight' => 0,
				],
			]
			);
		});
		$a->put('/v1/inventory/{id}/adjust', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				'Inventory' => [
					'ActiveSampleInventoryID' => 'string',
					'Deleted' => true,
					'Destroyed' => true,
					'Dried' => true,
					'ExpirationDate' => 'string',
					'ExternalID' => 'string',
					'ID' => 'string',
					'Initial' => true,
					'InventoryParentID' => [
						'string',
					],
					'InventoryType' => 0,
					'IsSample' => true,
					'LabSample' => [
						[
							'Amount' => 0,
							'AmountUsed' => 0,
							'CertOfAnalysisHyperlink' => 'string',
							'Deleted' => true,
							'ID' => 0,
							'InventoryID' => 'string',
							'InventoryType' => 0,
							'LabLicense' => 'string',
							'LocationLicense' => 'string',
							'Medical' => true,
							'MedicalGrade' => true,
							'ParentID' => 'string',
							'QualityControlDataHyperlink' => 'string',
							'Result' => 'string',
							'RnD' => true,
							'SampleUse' => 'string',
							'SessionTime' => 0,
							'TestingData' => [
								[
									'LabAnalysisTime' => '2024-01-31T10:00:00.000Z',
									'SamplePreparationTime' => '2024-01-31T10:00:00.000Z',
									'TestID' => 0,
									'TestResult' => [
										[
											'LabProvided' => true,
											'TestPanel' => 'string',
											'TestPass' => true,
											'TestValue' => 0,
											'TransactionID' => 0,
										],
									],
								],
							],
							'TransactionID' => 0,
						],
					],
					'LocationLicense' => 'string',
					'MedUsableWeight' => 0,
					'Medicated' => true,
					'NetPackageWeight' => 0,
					'PackageDate' => 'string',
					'ProductName' => 'string',
					'ProductionBatchID' => 0,
					'QAStatus' => 'string',
					'RecUsableWeight' => 0,
					'RemainingAmount' => 0,
					'Remediated' => true,
					'RemediationCount' => 0,
					'RemediationEligible' => true,
					'Restocked' => true,
					'Rework' => true,
					'RoomID' => 0,
					'Seized' => true,
					'SessionTime' => 0,
					'SourcePlantID' => 'string',
					'StateProductIdentifier' => 'string',
					'Status' => 'string',
					'Strain' => 'string',
					'TransactionID' => 0,
					'UOM' => 'string',
					'UnitBased' => true,
					'UsableWeight' => 0,
				],
				'InventoryAdjustment' => [
					'ID' => 0,
					'InventoryID' => 'string',
					'LocationLicense' => 'string',
					'NewAmount' => 0,
					'PreviousAmount' => 0,
					'Reason' => 'string',
					'SessionTime' => 0,
					'TransactionID' => 0,
					'Type' => 0,
				],
				'SessionTime' => 0,
				'TransactionID' => 0,
			]
			);
		});
		$a->put('/v1/inventory/{id}/adjust/usable', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				'Inventory' => [
					'ActiveSampleInventoryID' => 'string',
					'Deleted' => true,
					'Destroyed' => true,
					'Dried' => true,
					'ExpirationDate' => 'string',
					'ExternalID' => 'string',
					'ID' => 'string',
					'Initial' => true,
					'InventoryParentID' => [
						'string',
					],
					'InventoryType' => 0,
					'IsSample' => true,
					'LabSample' => [
						[
							'Amount' => 0,
							'AmountUsed' => 0,
							'CertOfAnalysisHyperlink' => 'string',
							'Deleted' => true,
							'ID' => 0,
							'InventoryID' => 'string',
							'InventoryType' => 0,
							'LabLicense' => 'string',
							'LocationLicense' => 'string',
							'Medical' => true,
							'MedicalGrade' => true,
							'ParentID' => 'string',
							'QualityControlDataHyperlink' => 'string',
							'Result' => 'string',
							'RnD' => true,
							'SampleUse' => 'string',
							'SessionTime' => 0,
							'TestingData' => [
								[
									'LabAnalysisTime' => '2024-01-31T10:00:00.000Z',
									'SamplePreparationTime' => '2024-01-31T10:00:00.000Z',
									'TestID' => 0,
									'TestResult' => [
										[
											'LabProvided' => true,
											'TestPanel' => 'string',
											'TestPass' => true,
											'TestValue' => 0,
											'TransactionID' => 0,
										],
									],
								],
							],
							'TransactionID' => 0,
						],
					],
					'LocationLicense' => 'string',
					'MedUsableWeight' => 0,
					'Medicated' => true,
					'NetPackageWeight' => 0,
					'PackageDate' => 'string',
					'ProductName' => 'string',
					'ProductionBatchID' => 0,
					'QAStatus' => 'string',
					'RecUsableWeight' => 0,
					'RemainingAmount' => 0,
					'Remediated' => true,
					'RemediationCount' => 0,
					'RemediationEligible' => true,
					'Restocked' => true,
					'Rework' => true,
					'RoomID' => 0,
					'Seized' => true,
					'SessionTime' => 0,
					'SourcePlantID' => 'string',
					'StateProductIdentifier' => 'string',
					'Status' => 'string',
					'Strain' => 'string',
					'TransactionID' => 0,
					'UOM' => 'string',
					'UnitBased' => true,
					'UsableWeight' => 0,
				],
				'SessionTime' => 0,
				'TransactionID' => 0,
			]
			);
		});
		$a->post('/v1/inventory/{id}/dry', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				'Inventory' => [
					'ActiveSampleInventoryID' => 'string',
					'Deleted' => true,
					'Destroyed' => true,
					'Dried' => true,
					'ExpirationDate' => 'string',
					'ExternalID' => 'string',
					'ID' => 'string',
					'Initial' => true,
					'InventoryParentID' => [
						'string',
					],
					'InventoryType' => 0,
					'IsSample' => true,
					'LabSample' => [
						[
							'Amount' => 0,
							'AmountUsed' => 0,
							'CertOfAnalysisHyperlink' => 'string',
							'Deleted' => true,
							'ID' => 0,
							'InventoryID' => 'string',
							'InventoryType' => 0,
							'LabLicense' => 'string',
							'LocationLicense' => 'string',
							'Medical' => true,
							'MedicalGrade' => true,
							'ParentID' => 'string',
							'QualityControlDataHyperlink' => 'string',
							'Result' => 'string',
							'RnD' => true,
							'SampleUse' => 'string',
							'SessionTime' => 0,
							'TestingData' => [
								[
									'LabAnalysisTime' => '2024-01-31T10:00:00.000Z',
									'SamplePreparationTime' => '2024-01-31T10:00:00.000Z',
									'TestID' => 0,
									'TestResult' => [
										[
											'LabProvided' => true,
											'TestPanel' => 'string',
											'TestPass' => true,
											'TestValue' => 0,
											'TransactionID' => 0,
										],
									],
								],
							],
							'TransactionID' => 0,
						],
					],
					'LocationLicense' => 'string',
					'MedUsableWeight' => 0,
					'Medicated' => true,
					'NetPackageWeight' => 0,
					'PackageDate' => 'string',
					'ProductName' => 'string',
					'ProductionBatchID' => 0,
					'QAStatus' => 'string',
					'RecUsableWeight' => 0,
					'RemainingAmount' => 0,
					'Remediated' => true,
					'RemediationCount' => 0,
					'RemediationEligible' => true,
					'Restocked' => true,
					'Rework' => true,
					'RoomID' => 0,
					'Seized' => true,
					'SessionTime' => 0,
					'SourcePlantID' => 'string',
					'StateProductIdentifier' => 'string',
					'Status' => 'string',
					'Strain' => 'string',
					'TransactionID' => 0,
					'UOM' => 'string',
					'UnitBased' => true,
					'UsableWeight' => 0,
				],
				'SessionTime' => 0,
				'TransactionID' => 0,
			]
			);
		});
		$a->put('/v1/inventory/{id}/dry/undo', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				'Inventory' => [
					'ActiveSampleInventoryID' => 'string',
					'Deleted' => true,
					'Destroyed' => true,
					'Dried' => true,
					'ExpirationDate' => 'string',
					'ExternalID' => 'string',
					'ID' => 'string',
					'Initial' => true,
					'InventoryParentID' => [
						'string',
					],
					'InventoryType' => 0,
					'IsSample' => true,
					'LabSample' => [
						[
							'Amount' => 0,
							'AmountUsed' => 0,
							'CertOfAnalysisHyperlink' => 'string',
							'Deleted' => true,
							'ID' => 0,
							'InventoryID' => 'string',
							'InventoryType' => 0,
							'LabLicense' => 'string',
							'LocationLicense' => 'string',
							'Medical' => true,
							'MedicalGrade' => true,
							'ParentID' => 'string',
							'QualityControlDataHyperlink' => 'string',
							'Result' => 'string',
							'RnD' => true,
							'SampleUse' => 'string',
							'SessionTime' => 0,
							'TestingData' => [
								[
									'LabAnalysisTime' => '2024-01-31T10:00:00.000Z',
									'SamplePreparationTime' => '2024-01-31T10:00:00.000Z',
									'TestID' => 0,
									'TestResult' => [
										[
											'LabProvided' => true,
											'TestPanel' => 'string',
											'TestPass' => true,
											'TestValue' => 0,
											'TransactionID' => 0,
										],
									],
								],
							],
							'TransactionID' => 0,
						],
					],
					'LocationLicense' => 'string',
					'MedUsableWeight' => 0,
					'Medicated' => true,
					'NetPackageWeight' => 0,
					'PackageDate' => 'string',
					'ProductName' => 'string',
					'ProductionBatchID' => 0,
					'QAStatus' => 'string',
					'RecUsableWeight' => 0,
					'RemainingAmount' => 0,
					'Remediated' => true,
					'RemediationCount' => 0,
					'RemediationEligible' => true,
					'Restocked' => true,
					'Rework' => true,
					'RoomID' => 0,
					'Seized' => true,
					'SessionTime' => 0,
					'SourcePlantID' => 'string',
					'StateProductIdentifier' => 'string',
					'Status' => 'string',
					'Strain' => 'string',
					'TransactionID' => 0,
					'UOM' => 'string',
					'UnitBased' => true,
					'UsableWeight' => 0,
				],
				'SessionTime' => 0,
				'TransactionID' => 0,
			]
			);
		});
		$a->get('/v1/inventory/{id}/ingredient', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				'InventoryIngredient' => [
					[
						'CreatedOn' => 'string',
						'Deleted' => true,
						'ID' => 0,
						'IngredientName' => 'string',
						'InventoryID' => 'string',
						'LocationLicense' => 'string',
						'Quantity' => 0,
						'TransactionID' => 0,
						'UOM' => 'string',
					],
				],
				'NextCursor' => 0,
				'NextTransactionID' => 0,
			]
			);
		});
		$a->post('/v1/inventory/{id}/ingredient', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				'Inventory' => [
					'ActiveSampleInventoryID' => 'string',
					'Deleted' => true,
					'Destroyed' => true,
					'Dried' => true,
					'ExpirationDate' => 'string',
					'ExternalID' => 'string',
					'ID' => 'string',
					'Initial' => true,
					'InventoryParentID' => [
						'string',
					],
					'InventoryType' => 0,
					'IsSample' => true,
					'LabSample' => [
						[
							'Amount' => 0,
							'AmountUsed' => 0,
							'CertOfAnalysisHyperlink' => 'string',
							'Deleted' => true,
							'ID' => 0,
							'InventoryID' => 'string',
							'InventoryType' => 0,
							'LabLicense' => 'string',
							'LocationLicense' => 'string',
							'Medical' => true,
							'MedicalGrade' => true,
							'ParentID' => 'string',
							'QualityControlDataHyperlink' => 'string',
							'Result' => 'string',
							'RnD' => true,
							'SampleUse' => 'string',
							'SessionTime' => 0,
							'TestingData' => [
								[
									'LabAnalysisTime' => '2024-01-31T10:00:00.000Z',
									'SamplePreparationTime' => '2024-01-31T10:00:00.000Z',
									'TestID' => 0,
									'TestResult' => [
										[
											'LabProvided' => true,
											'TestPanel' => 'string',
											'TestPass' => true,
											'TestValue' => 0,
											'TransactionID' => 0,
										],
									],
								],
							],
							'TransactionID' => 0,
						],
					],
					'LocationLicense' => 'string',
					'MedUsableWeight' => 0,
					'Medicated' => true,
					'NetPackageWeight' => 0,
					'PackageDate' => 'string',
					'ProductName' => 'string',
					'ProductionBatchID' => 0,
					'QAStatus' => 'string',
					'RecUsableWeight' => 0,
					'RemainingAmount' => 0,
					'Remediated' => true,
					'RemediationCount' => 0,
					'RemediationEligible' => true,
					'Restocked' => true,
					'Rework' => true,
					'RoomID' => 0,
					'Seized' => true,
					'SessionTime' => 0,
					'SourcePlantID' => 'string',
					'StateProductIdentifier' => 'string',
					'Status' => 'string',
					'Strain' => 'string',
					'TransactionID' => 0,
					'UOM' => 'string',
					'UnitBased' => true,
					'UsableWeight' => 0,
				],
				'InventoryIngredient' => [
					[
						'CreatedOn' => 'string',
						'Deleted' => true,
						'ID' => 0,
						'IngredientName' => 'string',
						'InventoryID' => 'string',
						'LocationLicense' => 'string',
						'Quantity' => 0,
						'TransactionID' => 0,
						'UOM' => 'string',
					],
				],
				'SessionTime' => 0,
				'TransactionID' => 0,
			]
			);
		});
		$a->post('/v1/inventory/{id}/sublot', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				'Derivative' => [
					'ActiveSampleInventoryID' => 'string',
					'Deleted' => true,
					'Destroyed' => true,
					'Dried' => true,
					'ExpirationDate' => 'string',
					'ExternalID' => 'string',
					'ID' => 'string',
					'Initial' => true,
					'InventoryParentID' => [
						'string',
					],
					'InventoryType' => 0,
					'IsSample' => true,
					'LabSample' => [
						[
							'Amount' => 0,
							'AmountUsed' => 0,
							'CertOfAnalysisHyperlink' => 'string',
							'Deleted' => true,
							'ID' => 0,
							'InventoryID' => 'string',
							'InventoryType' => 0,
							'LabLicense' => 'string',
							'LocationLicense' => 'string',
							'Medical' => true,
							'MedicalGrade' => true,
							'ParentID' => 'string',
							'QualityControlDataHyperlink' => 'string',
							'Result' => 'string',
							'RnD' => true,
							'SampleUse' => 'string',
							'SessionTime' => 0,
							'TestingData' => [
								[
									'LabAnalysisTime' => '2024-01-31T10:00:00.000Z',
									'SamplePreparationTime' => '2024-01-31T10:00:00.000Z',
									'TestID' => 0,
									'TestResult' => [
										[
											'LabProvided' => true,
											'TestPanel' => 'string',
											'TestPass' => true,
											'TestValue' => 0,
											'TransactionID' => 0,
										],
									],
								],
							],
							'TransactionID' => 0,
						],
					],
					'LocationLicense' => 'string',
					'MedUsableWeight' => 0,
					'Medicated' => true,
					'NetPackageWeight' => 0,
					'PackageDate' => 'string',
					'ProductName' => 'string',
					'ProductionBatchID' => 0,
					'QAStatus' => 'string',
					'RecUsableWeight' => 0,
					'RemainingAmount' => 0,
					'Remediated' => true,
					'RemediationCount' => 0,
					'RemediationEligible' => true,
					'Restocked' => true,
					'Rework' => true,
					'RoomID' => 0,
					'Seized' => true,
					'SessionTime' => 0,
					'SourcePlantID' => 'string',
					'StateProductIdentifier' => 'string',
					'Status' => 'string',
					'Strain' => 'string',
					'TransactionID' => 0,
					'UOM' => 'string',
					'UnitBased' => true,
					'UsableWeight' => 0,
				],
				'Inventory' => [
					'ActiveSampleInventoryID' => 'string',
					'Deleted' => true,
					'Destroyed' => true,
					'Dried' => true,
					'ExpirationDate' => 'string',
					'ExternalID' => 'string',
					'ID' => 'string',
					'Initial' => true,
					'InventoryParentID' => [
						'string',
					],
					'InventoryType' => 0,
					'IsSample' => true,
					'LabSample' => [
						[
							'Amount' => 0,
							'AmountUsed' => 0,
							'CertOfAnalysisHyperlink' => 'string',
							'Deleted' => true,
							'ID' => 0,
							'InventoryID' => 'string',
							'InventoryType' => 0,
							'LabLicense' => 'string',
							'LocationLicense' => 'string',
							'Medical' => true,
							'MedicalGrade' => true,
							'ParentID' => 'string',
							'QualityControlDataHyperlink' => 'string',
							'Result' => 'string',
							'RnD' => true,
							'SampleUse' => 'string',
							'SessionTime' => 0,
							'TestingData' => [
								[
									'LabAnalysisTime' => '2024-01-31T10:00:00.000Z',
									'SamplePreparationTime' => '2024-01-31T10:00:00.000Z',
									'TestID' => 0,
									'TestResult' => [
										[
											'LabProvided' => true,
											'TestPanel' => 'string',
											'TestPass' => true,
											'TestValue' => 0,
											'TransactionID' => 0,
										],
									],
								],
							],
							'TransactionID' => 0,
						],
					],
					'LocationLicense' => 'string',
					'MedUsableWeight' => 0,
					'Medicated' => true,
					'NetPackageWeight' => 0,
					'PackageDate' => 'string',
					'ProductName' => 'string',
					'ProductionBatchID' => 0,
					'QAStatus' => 'string',
					'RecUsableWeight' => 0,
					'RemainingAmount' => 0,
					'Remediated' => true,
					'RemediationCount' => 0,
					'RemediationEligible' => true,
					'Restocked' => true,
					'Rework' => true,
					'RoomID' => 0,
					'Seized' => true,
					'SessionTime' => 0,
					'SourcePlantID' => 'string',
					'StateProductIdentifier' => 'string',
					'Status' => 'string',
					'Strain' => 'string',
					'TransactionID' => 0,
					'UOM' => 'string',
					'UnitBased' => true,
					'UsableWeight' => 0,
				],
				'SessionTime' => 0,
				'TransactionID' => 0,
			]
			);
		});

		// Licensee Lab Testing
		$a->get('/v1/inventory/lab/sample', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				'Limit' => 0,
				'NextCursor' => 0,
				'NextTransactionID' => 0,
				'Sample' => [
					[
						'Amount' => 0,
						'AmountUsed' => 0,
						'CertOfAnalysisHyperlink' => 'string',
						'Deleted' => true,
						'ID' => 0,
						'InventoryID' => 'string',
						'InventoryType' => 0,
						'LabLicense' => 'string',
						'LocationLicense' => 'string',
						'Medical' => true,
						'MedicalGrade' => true,
						'ParentID' => 'string',
						'QualityControlDataHyperlink' => 'string',
						'Result' => 'string',
						'RnD' => true,
						'SampleUse' => 'string',
						'SessionTime' => 0,
						'TestingData' => [
							[
								'LabAnalysisTime' => '2024-01-31T10:00:00.000Z',
								'SamplePreparationTime' => '2024-01-31T10:00:00.000Z',
								'TestID' => 0,
								'TestResult' => [
									[
										'LabProvided' => true,
										'TestPanel' => 'string',
										'TestPass' => true,
										'TestValue' => 0,
										'TransactionID' => 0,
									],
								],
							],
						],
						'TransactionID' => 0,
					],
				],
			]
			);
		});
		$a->put('/v1/inventory/lab/sample/void', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				'Inventory' => [
					[
						'ActiveSampleInventoryID' => 'string',
						'Deleted' => true,
						'Destroyed' => true,
						'Dried' => true,
						'ExpirationDate' => 'string',
						'ExternalID' => 'string',
						'ID' => 'string',
						'Initial' => true,
						'InventoryParentID' => [
							'string',
						],
						'InventoryType' => 0,
						'IsSample' => true,
						'LabSample' => [
							[
								'Amount' => 0,
								'AmountUsed' => 0,
								'CertOfAnalysisHyperlink' => 'string',
								'Deleted' => true,
								'ID' => 0,
								'InventoryID' => 'string',
								'InventoryType' => 0,
								'LabLicense' => 'string',
								'LocationLicense' => 'string',
								'Medical' => true,
								'MedicalGrade' => true,
								'ParentID' => 'string',
								'QualityControlDataHyperlink' => 'string',
								'Result' => 'string',
								'RnD' => true,
								'SampleUse' => 'string',
								'SessionTime' => 0,
								'TestingData' => [
									[
										'LabAnalysisTime' => '2024-01-31T10:00:00.000Z',
										'SamplePreparationTime' => '2024-01-31T10:00:00.000Z',
										'TestID' => 0,
										'TestResult' => [
											[
												'LabProvided' => true,
												'TestPanel' => 'string',
												'TestPass' => true,
												'TestValue' => 0,
												'TransactionID' => 0,
											],
										],
									],
								],
								'TransactionID' => 0,
							],
						],
						'LocationLicense' => 'string',
						'MedUsableWeight' => 0,
						'Medicated' => true,
						'NetPackageWeight' => 0,
						'PackageDate' => 'string',
						'ProductName' => 'string',
						'ProductionBatchID' => 0,
						'QAStatus' => 'string',
						'RecUsableWeight' => 0,
						'RemainingAmount' => 0,
						'Remediated' => true,
						'RemediationCount' => 0,
						'RemediationEligible' => true,
						'Restocked' => true,
						'Rework' => true,
						'RoomID' => 0,
						'Seized' => true,
						'SessionTime' => 0,
						'SourcePlantID' => 'string',
						'StateProductIdentifier' => 'string',
						'Status' => 'string',
						'Strain' => 'string',
						'TransactionID' => 0,
						'UOM' => 'string',
						'UnitBased' => true,
						'UsableWeight' => 0,
					],
				],
				'Sample' => [
					[
						'Amount' => 0,
						'AmountUsed' => 0,
						'CertOfAnalysisHyperlink' => 'string',
						'Deleted' => true,
						'ID' => 0,
						'InventoryID' => 'string',
						'InventoryType' => 0,
						'LabLicense' => 'string',
						'LocationLicense' => 'string',
						'Medical' => true,
						'MedicalGrade' => true,
						'ParentID' => 'string',
						'QualityControlDataHyperlink' => 'string',
						'Result' => 'string',
						'RnD' => true,
						'SampleUse' => 'string',
						'SessionTime' => 0,
						'TestingData' => [
							[
								'LabAnalysisTime' => '2024-01-31T10:00:00.000Z',
								'SamplePreparationTime' => '2024-01-31T10:00:00.000Z',
								'TestID' => 0,
								'TestResult' => [
									[
										'LabProvided' => true,
										'TestPanel' => 'string',
										'TestPass' => true,
										'TestValue' => 0,
										'TransactionID' => 0,
									],
								],
							],
						],
						'TransactionID' => 0,
					],
				],
				'SessionTime' => 0,
				'TransactionID' => 0,
			]
			);
		});
		$a->get('/v1/inventory/lab/sample/{id}', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				'Sample' => [
					'Amount' => 0,
					'AmountUsed' => 0,
					'CertOfAnalysisHyperlink' => 'string',
					'Deleted' => true,
					'ID' => 0,
					'InventoryID' => 'string',
					'InventoryType' => 0,
					'LabLicense' => 'string',
					'LocationLicense' => 'string',
					'Medical' => true,
					'MedicalGrade' => true,
					'ParentID' => 'string',
					'QualityControlDataHyperlink' => 'string',
					'Result' => 'string',
					'RnD' => true,
					'SampleUse' => 'string',
					'SessionTime' => 0,
					'TestingData' => [
						[
							'LabAnalysisTime' => '2024-01-31T10:00:00.000Z',
							'SamplePreparationTime' => '2024-01-31T10:00:00.000Z',
							'TestID' => 0,
							'TestResult' => [
								[
									'LabProvided' => true,
									'TestPanel' => 'string',
									'TestPass' => true,
									'TestValue' => 0,
									'TransactionID' => 0,
								],
							],
						],
					],
					'TransactionID' => 0,
				],
			]
			);
		});
		$a->get('/v1/inventory/lab/test', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				'Test' => [
					[
						'ID' => 0,
						'Name' => 'string',
						'Panels' => [
							[
								'AddToTotal' => true,
								'InventoryType' => 0,
								'Name' => 'string',
								'PassFailCondition' => 'string',
								'PassFailConditional' => true,
								'PassFailLimit' => 'string',
								'TestValueRecordOnly' => true,
								'TotalPanel' => true,
								'UOM' => 'string',
							],
						],
					],
				],
			]
			);
		});
		$a->get('/v1/inventory/lab/test/medical', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				'Test' => [
					[
						'ID' => 0,
						'Name' => 'string',
						'Panels' => [
							[
								'AddToTotal' => true,
								'InventoryType' => 0,
								'Name' => 'string',
								'PassFailCondition' => 'string',
								'PassFailConditional' => true,
								'PassFailLimit' => 'string',
								'TestValueRecordOnly' => true,
								'TotalPanel' => true,
								'UOM' => 'string',
							],
						],
					],
				],
			]
			);
		});
		$a->get('/v1/inventory/lab/test/result', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				'Inventory' => [
					[
						'ActiveSampleInventoryID' => 'string',
						'Deleted' => true,
						'Destroyed' => true,
						'Dried' => true,
						'ExpirationDate' => 'string',
						'ExternalID' => 'string',
						'ID' => 'string',
						'Initial' => true,
						'InventoryParentID' => [
							'string',
						],
						'InventoryType' => 0,
						'IsSample' => true,
						'LabSample' => [
							[
								'Amount' => 0,
								'AmountUsed' => 0,
								'CertOfAnalysisHyperlink' => 'string',
								'Deleted' => true,
								'ID' => 0,
								'InventoryID' => 'string',
								'InventoryType' => 0,
								'LabLicense' => 'string',
								'LocationLicense' => 'string',
								'Medical' => true,
								'MedicalGrade' => true,
								'ParentID' => 'string',
								'QualityControlDataHyperlink' => 'string',
								'Result' => 'string',
								'RnD' => true,
								'SampleUse' => 'string',
								'SessionTime' => 0,
								'TestingData' => [
									[
										'LabAnalysisTime' => '2024-01-31T10:00:00.000Z',
										'SamplePreparationTime' => '2024-01-31T10:00:00.000Z',
										'TestID' => 0,
										'TestResult' => [
											[
												'LabProvided' => true,
												'TestPanel' => 'string',
												'TestPass' => true,
												'TestValue' => 0,
												'TransactionID' => 0,
											],
										],
									],
								],
								'TransactionID' => 0,
							],
						],
						'LocationLicense' => 'string',
						'MedUsableWeight' => 0,
						'Medicated' => true,
						'NetPackageWeight' => 0,
						'PackageDate' => 'string',
						'ProductName' => 'string',
						'ProductionBatchID' => 0,
						'QAStatus' => 'string',
						'RecUsableWeight' => 0,
						'RemainingAmount' => 0,
						'Remediated' => true,
						'RemediationCount' => 0,
						'RemediationEligible' => true,
						'Restocked' => true,
						'Rework' => true,
						'RoomID' => 0,
						'Seized' => true,
						'SessionTime' => 0,
						'SourcePlantID' => 'string',
						'StateProductIdentifier' => 'string',
						'Status' => 'string',
						'Strain' => 'string',
						'TransactionID' => 0,
						'UOM' => 'string',
						'UnitBased' => true,
						'UsableWeight' => 0,
					],
				],
			]
			);
		});
		$a->post('/v1/inventory/lab/lab/sample', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				'LabSample' => [
					'Amount' => 0,
					'AmountUsed' => 0,
					'CertOfAnalysisHyperlink' => 'string',
					'Deleted' => true,
					'ID' => 0,
					'InventoryID' => 'string',
					'InventoryType' => 0,
					'LabLicense' => 'string',
					'LocationLicense' => 'string',
					'Medical' => true,
					'MedicalGrade' => true,
					'ParentID' => 'string',
					'QualityControlDataHyperlink' => 'string',
					'Result' => 'string',
					'RnD' => true,
					'SampleUse' => 'string',
					'SessionTime' => 0,
					'TestingData' => [
						[
							'LabAnalysisTime' => '2024-01-31T10:00:00.000Z',
							'SamplePreparationTime' => '2024-01-31T10:00:00.000Z',
							'TestID' => 0,
							'TestResult' => [
								[
									'LabProvided' => true,
									'TestPanel' => 'string',
									'TestPass' => true,
									'TestValue' => 0,
									'TransactionID' => 0,
								],
							],
						],
					],
					'TransactionID' => 0,
				],
				'LabSampleInventory' => [
					'ActiveSampleInventoryID' => 'string',
					'Deleted' => true,
					'Destroyed' => true,
					'Dried' => true,
					'ExpirationDate' => 'string',
					'ExternalID' => 'string',
					'ID' => 'string',
					'Initial' => true,
					'InventoryParentID' => [
						'string',
					],
					'InventoryType' => 0,
					'IsSample' => true,
					'LabSample' => [
						[
							'Amount' => 0,
							'AmountUsed' => 0,
							'CertOfAnalysisHyperlink' => 'string',
							'Deleted' => true,
							'ID' => 0,
							'InventoryID' => 'string',
							'InventoryType' => 0,
							'LabLicense' => 'string',
							'LocationLicense' => 'string',
							'Medical' => true,
							'MedicalGrade' => true,
							'ParentID' => 'string',
							'QualityControlDataHyperlink' => 'string',
							'Result' => 'string',
							'RnD' => true,
							'SampleUse' => 'string',
							'SessionTime' => 0,
							'TestingData' => [
								[
									'LabAnalysisTime' => '2024-01-31T10:00:00.000Z',
									'SamplePreparationTime' => '2024-01-31T10:00:00.000Z',
									'TestID' => 0,
									'TestResult' => [
										[
											'LabProvided' => true,
											'TestPanel' => 'string',
											'TestPass' => true,
											'TestValue' => 0,
											'TransactionID' => 0,
										],
									],
								],
							],
							'TransactionID' => 0,
						],
					],
					'LocationLicense' => 'string',
					'MedUsableWeight' => 0,
					'Medicated' => true,
					'NetPackageWeight' => 0,
					'PackageDate' => 'string',
					'ProductName' => 'string',
					'ProductionBatchID' => 0,
					'QAStatus' => 'string',
					'RecUsableWeight' => 0,
					'RemainingAmount' => 0,
					'Remediated' => true,
					'RemediationCount' => 0,
					'RemediationEligible' => true,
					'Restocked' => true,
					'Rework' => true,
					'RoomID' => 0,
					'Seized' => true,
					'SessionTime' => 0,
					'SourcePlantID' => 'string',
					'StateProductIdentifier' => 'string',
					'Status' => 'string',
					'Strain' => 'string',
					'TransactionID' => 0,
					'UOM' => 'string',
					'UnitBased' => true,
					'UsableWeight' => 0,
				],
				'Parent' => [
					'ActiveSampleInventoryID' => 'string',
					'Deleted' => true,
					'Destroyed' => true,
					'Dried' => true,
					'ExpirationDate' => 'string',
					'ExternalID' => 'string',
					'ID' => 'string',
					'Initial' => true,
					'InventoryParentID' => [
						'string',
					],
					'InventoryType' => 0,
					'IsSample' => true,
					'LabSample' => [
						[
							'Amount' => 0,
							'AmountUsed' => 0,
							'CertOfAnalysisHyperlink' => 'string',
							'Deleted' => true,
							'ID' => 0,
							'InventoryID' => 'string',
							'InventoryType' => 0,
							'LabLicense' => 'string',
							'LocationLicense' => 'string',
							'Medical' => true,
							'MedicalGrade' => true,
							'ParentID' => 'string',
							'QualityControlDataHyperlink' => 'string',
							'Result' => 'string',
							'RnD' => true,
							'SampleUse' => 'string',
							'SessionTime' => 0,
							'TestingData' => [
								[
									'LabAnalysisTime' => '2024-01-31T10:00:00.000Z',
									'SamplePreparationTime' => '2024-01-31T10:00:00.000Z',
									'TestID' => 0,
									'TestResult' => [
										[
											'LabProvided' => true,
											'TestPanel' => 'string',
											'TestPass' => true,
											'TestValue' => 0,
											'TransactionID' => 0,
										],
									],
								],
							],
							'TransactionID' => 0,
						],
					],
					'LocationLicense' => 'string',
					'MedUsableWeight' => 0,
					'Medicated' => true,
					'NetPackageWeight' => 0,
					'PackageDate' => 'string',
					'ProductName' => 'string',
					'ProductionBatchID' => 0,
					'QAStatus' => 'string',
					'RecUsableWeight' => 0,
					'RemainingAmount' => 0,
					'Remediated' => true,
					'RemediationCount' => 0,
					'RemediationEligible' => true,
					'Restocked' => true,
					'Rework' => true,
					'RoomID' => 0,
					'Seized' => true,
					'SessionTime' => 0,
					'SourcePlantID' => 'string',
					'StateProductIdentifier' => 'string',
					'Status' => 'string',
					'Strain' => 'string',
					'TransactionID' => 0,
					'UOM' => 'string',
					'UnitBased' => true,
					'UsableWeight' => 0,
				],
				'SessionTime' => 0,
				'TransactionID' => 0,
			]
			);
		});
		$a->get('/v1/lab', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				'Labs' => [
					[
						'Address1' => 'string',
						'City' => 'string',
						'Deleted' => 0,
						'ID' => 0,
						'LicenseNumber' => 'string',
						'Name' => 'string',
						'Phone' => 'string',
						'State' => 'string',
						'TransactionID' => 0,
						'Zip' => 'string',
					],
				],
				'NextCursor' => 0,
				'NextTransactionID' => 0,
			]
			);
		});
		$a->get('/v1/lab/{id}', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				'Lab' => [
					'Address1' => 'string',
					'City' => 'string',
					'Deleted' => 0,
					'ID' => 0,
					'LicenseNumber' => 'string',
					'Name' => 'string',
					'Phone' => 'string',
					'State' => 'string',
					'TransactionID' => 0,
					'Zip' => 'string',
				],
			]
			);
		});

		// Employee
		$a->get('/v1/employee', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				'Employee' => [
					[
						'BirthDate' => 'string',
						'Deleted' => true,
						'DriverLicense' => 'string',
						'Email' => 'string',
						'ExternalID' => 'string',
						'HireDate' => 'string',
						'ID' => 0,
						'Name' => 'string',
						'StateIssue' => 'string',
						'TransactionID' => 0,
					],
				],
				'NextCursor' => 0,
				'NextTransactionID' => 0,
			]
			);
		});
		$a->post('/v1/employee', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				'Employee' => [
					'BirthDate' => 'string',
					'Deleted' => true,
					'DriverLicense' => 'string',
					'Email' => 'string',
					'ExternalID' => 'string',
					'HireDate' => 'string',
					'ID' => 0,
					'Name' => 'string',
					'StateIssue' => 'string',
					'TransactionID' => 0,
				],
				'SessionTime' => 0,
				'TransactionID' => 0,
			]
			);
		});
		$a->delete('/v1/employee/{id}', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				'Employee' => [
					'BirthDate' => 'string',
					'Deleted' => true,
					'DriverLicense' => 'string',
					'Email' => 'string',
					'ExternalID' => 'string',
					'HireDate' => 'string',
					'ID' => 0,
					'Name' => 'string',
					'StateIssue' => 'string',
					'TransactionID' => 0,
				],
				'SessionTime' => 0,
				'TransactionID' => 0,
			]
			);
		});
		$a->get('/v1/employee/{id}', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				'BirthDate' => 'string',
				'Deleted' => true,
				'DriverLicense' => 'string',
				'Email' => 'string',
				'ExternalID' => 'string',
				'HireDate' => 'string',
				'ID' => 0,
				'Name' => 'string',
				'StateIssue' => 'string',
				'TransactionID' => 0,
			]
			);
		});
		$a->put('/v1/employee/{id}', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				'Employee' => [
					'BirthDate' => 'string',
					'Deleted' => true,
					'DriverLicense' => 'string',
					'Email' => 'string',
					'ExternalID' => 'string',
					'HireDate' => 'string',
					'ID' => 0,
					'Name' => 'string',
					'StateIssue' => 'string',
					'TransactionID' => 0,
				],
				'SessionTime' => 0,
				'TransactionID' => 0,
			]
			);
		});

		// Vehicle
		$a->get('/v1/vehicle', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				'NextTransactionID' => 0,
				'Vehicle' => [
					[
						'Color' => 'string',
						'Deleted' => true,
						'ExternalID' => 'string',
						'ID' => 0,
						'Make' => 'string',
						'Model' => 'string',
						'Name' => 'string',
						'Plate' => 'string',
						'TransactionID' => 0,
						'Vin' => 'string',
						'Year' => 'string',
					],
				],
				'nextCursor' => 0,
			]
			);
		});
		$a->post('/v1/vehicle/{id}', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				'SessionTime' => 0,
				'TransactionID' => 0,
				'Vehicle' => [
					'Color' => 'string',
					'Deleted' => true,
					'ExternalID' => 'string',
					'ID' => 0,
					'Make' => 'string',
					'Model' => 'string',
					'Name' => 'string',
					'Plate' => 'string',
					'TransactionID' => 0,
					'Vin' => 'string',
					'Year' => 'string',
				],
			]
			);
		});
		$a->delete('/v1/vehicle/{id}', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				'SessionTime' => 0,
				'TransactionID' => 0,
				'Vehicle' => [
					'Color' => 'string',
					'Deleted' => true,
					'ExternalID' => 'string',
					'ID' => 0,
					'Make' => 'string',
					'Model' => 'string',
					'Name' => 'string',
					'Plate' => 'string',
					'TransactionID' => 0,
					'Vin' => 'string',
					'Year' => 'string',
				],
			]
			);
		});
		$a->get('/v1/vehicle/{id}', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				'Color' => 'string',
				'Deleted' => true,
				'ExternalID' => 'string',
				'ID' => 0,
				'Make' => 'string',
				'Model' => 'string',
				'Name' => 'string',
				'Plate' => 'string',
				'TransactionID' => 0,
				'Vin' => 'string',
				'Year' => 'string',
			]
			);
		});
		$a->put('/v1/vehicle/{id}', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				'SessionTime' => 0,
				'TransactionID' => 0,
				'Vehicle' => [
					'Color' => 'string',
					'Deleted' => true,
					'ExternalID' => 'string',
					'ID' => 0,
					'Make' => 'string',
					'Model' => 'string',
					'Name' => 'string',
					'Plate' => 'string',
					'TransactionID' => 0,
					'Vin' => 'string',
					'Year' => 'string',
				],
			]
			);
		});

		// Vendor
		$a->get('/v1/vendor', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				'NextCursor' => 0,
				'NextTransactionID' => 0,
				'Vendor' => [
					[
						'Address' => 'string',
						'Address2' => 'string',
						'City' => 'string',
						'Deleted' => true,
						'ID' => 0,
						'LegacyComplyDate' => 'string',
						'LocationLicense' => 'string',
						'Name' => 'string',
						'Phone' => 'string',
						'Processor' => true,
						'Producer' => true,
						'Retail' => true,
						'State' => 'string',
						'TransactionID' => 0,
						'Transporter' => true,
						'Type' => 0,
						'UBI' => 'string',
						'Zip' => 'string',
					],
				],
			]
			);
		});
		$a->get('/v1/vendor/{id}', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				'Vendor' => [
					'Address' => 'string',
					'Address2' => 'string',
					'City' => 'string',
					'Deleted' => true,
					'ID' => 0,
					'LegacyComplyDate' => 'string',
					'LocationLicense' => 'string',
					'Name' => 'string',
					'Phone' => 'string',
					'Processor' => true,
					'Producer' => true,
					'Retail' => true,
					'State' => 'string',
					'TransactionID' => 0,
					'Transporter' => true,
					'Type' => 0,
					'UBI' => 'string',
					'Zip' => 'string',
				],
			]
			);
		});

		// Invoice
		$a->get('/v1/invoice', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				'Invoice' => [
					[
						'Accepted' => true,
						'BuyerLocationLicense' => 'string',
						'Deleted' => true,
						'Inventory' => [
							[
								'Amount' => 0,
								'Deleted' => true,
								'ID' => 0,
								'InventoryID' => 'string',
								'InvoiceID' => 'string',
								'Price' => 0,
								'TransactionID' => 0,
							],
						],
						'InvoiceID' => 'string',
						'LocationLicense' => 'string',
						'Payment' => [
							[
								'Accepted' => true,
								'AcceptedLocationID' => 'string',
								'AcceptedOn' => 'string',
								'Amount' => 0,
								'BuyerLocationLicense' => 'string',
								'BuyerUserID' => 0,
								'CreatedOn' => 'string',
								'Deleted' => true,
								'ID' => 0,
								'InvoiceID' => 'string',
								'Rejected' => true,
								'RejectedLocationLicense' => 'string',
								'RejectedOn' => 'string',
								'RejectedReason' => 'string',
								'TransactionID' => 0,
								'UpdatedOn' => 'string',
							],
						],
						'Refund' => true,
						'SessionTime' => 0,
						'TransactionID' => 0,
					],
				],
				'NextCursor' => 0,
				'NextTransactionID' => 0,
			]
			);
		});
		$a->post('/v1/invoice', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				'Invoice' => [
					[
						'Accepted' => true,
						'BuyerLocationLicense' => 'string',
						'Deleted' => true,
						'Inventory' => [
							[
								'Amount' => 0,
								'Deleted' => true,
								'ID' => 0,
								'InventoryID' => 'string',
								'InvoiceID' => 'string',
								'Price' => 0,
								'TransactionID' => 0,
							],
						],
						'InvoiceID' => 'string',
						'LocationLicense' => 'string',
						'Payment' => [
							[
								'Accepted' => true,
								'AcceptedLocationID' => 'string',
								'AcceptedOn' => 'string',
								'Amount' => 0,
								'BuyerLocationLicense' => 'string',
								'BuyerUserID' => 0,
								'CreatedOn' => 'string',
								'Deleted' => true,
								'ID' => 0,
								'InvoiceID' => 'string',
								'Rejected' => true,
								'RejectedLocationLicense' => 'string',
								'RejectedOn' => 'string',
								'RejectedReason' => 'string',
								'TransactionID' => 0,
								'UpdatedOn' => 'string',
							],
						],
						'Refund' => true,
						'SessionTime' => 0,
						'TransactionID' => 0,
					],
				],
				'NextCursor' => 0,
				'NextTransactionID' => 0,
			]
			);
		});
		$a->get('/v1/invoice/{id}', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				'Invoice' => [
					'Accepted' => true,
					'BuyerLocationLicense' => 'string',
					'Deleted' => true,
					'Inventory' => [
						[
							'Amount' => 0,
							'Deleted' => true,
							'ID' => 0,
							'InventoryID' => 'string',
							'InvoiceID' => 'string',
							'Price' => 0,
							'TransactionID' => 0,
						],
					],
					'InvoiceID' => 'string',
					'LocationLicense' => 'string',
					'Payment' => [
						[
							'Accepted' => true,
							'AcceptedLocationID' => 'string',
							'AcceptedOn' => 'string',
							'Amount' => 0,
							'BuyerLocationLicense' => 'string',
							'BuyerUserID' => 0,
							'CreatedOn' => 'string',
							'Deleted' => true,
							'ID' => 0,
							'InvoiceID' => 'string',
							'Rejected' => true,
							'RejectedLocationLicense' => 'string',
							'RejectedOn' => 'string',
							'RejectedReason' => 'string',
							'TransactionID' => 0,
							'UpdatedOn' => 'string',
						],
					],
					'Refund' => true,
					'SessionTime' => 0,
					'TransactionID' => 0,
				],
			]
			);
		});
		$a->put('/v1/invoice/{id}', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				'Inventory' => [
					[
						'ActiveSampleInventoryID' => 'string',
						'Deleted' => true,
						'Destroyed' => true,
						'Dried' => true,
						'ExpirationDate' => 'string',
						'ExternalID' => 'string',
						'ID' => 'string',
						'Initial' => true,
						'InventoryParentID' => [
							'string',
						],
						'InventoryType' => 0,
						'IsSample' => true,
						'LabSample' => [
							[
								'Amount' => 0,
								'AmountUsed' => 0,
								'CertOfAnalysisHyperlink' => 'string',
								'Deleted' => true,
								'ID' => 0,
								'InventoryID' => 'string',
								'InventoryType' => 0,
								'LabLicense' => 'string',
								'LocationLicense' => 'string',
								'Medical' => true,
								'MedicalGrade' => true,
								'ParentID' => 'string',
								'QualityControlDataHyperlink' => 'string',
								'Result' => 'string',
								'RnD' => true,
								'SampleUse' => 'string',
								'SessionTime' => 0,
								'TestingData' => [
									[
										'LabAnalysisTime' => '2024-01-31T10:00:00.000Z',
										'SamplePreparationTime' => '2024-01-31T10:00:00.000Z',
										'TestID' => 0,
										'TestResult' => [
											[
												'LabProvided' => true,
												'TestPanel' => 'string',
												'TestPass' => true,
												'TestValue' => 0,
												'TransactionID' => 0,
											],
										],
									],
								],
								'TransactionID' => 0,
							],
						],
						'LocationLicense' => 'string',
						'MedUsableWeight' => 0,
						'Medicated' => true,
						'NetPackageWeight' => 0,
						'PackageDate' => 'string',
						'ProductName' => 'string',
						'ProductionBatchID' => 0,
						'QAStatus' => 'string',
						'RecUsableWeight' => 0,
						'RemainingAmount' => 0,
						'Remediated' => true,
						'RemediationCount' => 0,
						'RemediationEligible' => true,
						'Restocked' => true,
						'Rework' => true,
						'RoomID' => 0,
						'Seized' => true,
						'SessionTime' => 0,
						'SourcePlantID' => 'string',
						'StateProductIdentifier' => 'string',
						'Status' => 'string',
						'Strain' => 'string',
						'TransactionID' => 0,
						'UOM' => 'string',
						'UnitBased' => true,
						'UsableWeight' => 0,
					],
				],
				'Invoice' => [
					'Accepted' => true,
					'BuyerLocationLicense' => 'string',
					'Deleted' => true,
					'Inventory' => [
						[
							'Amount' => 0,
							'Deleted' => true,
							'ID' => 0,
							'InventoryID' => 'string',
							'InvoiceID' => 'string',
							'Price' => 0,
							'TransactionID' => 0,
						],
					],
					'InvoiceID' => 'string',
					'LocationLicense' => 'string',
					'Payment' => [
						[
							'Accepted' => true,
							'AcceptedLocationID' => 'string',
							'AcceptedOn' => 'string',
							'Amount' => 0,
							'BuyerLocationLicense' => 'string',
							'BuyerUserID' => 0,
							'CreatedOn' => 'string',
							'Deleted' => true,
							'ID' => 0,
							'InvoiceID' => 'string',
							'Rejected' => true,
							'RejectedLocationLicense' => 'string',
							'RejectedOn' => 'string',
							'RejectedReason' => 'string',
							'TransactionID' => 0,
							'UpdatedOn' => 'string',
						],
					],
					'Refund' => true,
					'SessionTime' => 0,
					'TransactionID' => 0,
				],
				'SessionTime' => 0,
				'TransactionID' => 0,
			]
			);
		});
		$a->post('/v1/invoice/{id}/payment', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				'InvoicePayment' => [
					'Accepted' => true,
					'AcceptedLocationID' => 'string',
					'AcceptedOn' => 'string',
					'Amount' => 0,
					'BuyerLocationLicense' => 'string',
					'BuyerUserID' => 0,
					'CreatedOn' => 'string',
					'Deleted' => true,
					'ID' => 0,
					'InvoiceID' => 'string',
					'Rejected' => true,
					'RejectedLocationLicense' => 'string',
					'RejectedOn' => 'string',
					'RejectedReason' => 'string',
					'TransactionID' => 0,
					'UpdatedOn' => 'string',
				],
				'TransactionID' => 0,
			]
			);
		});
		$a->delete('/v1/invoice/{id}/payment/{paymentid}', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				'InvoicePayment' => [
					'Accepted' => true,
					'AcceptedLocationID' => 'string',
					'AcceptedOn' => 'string',
					'Amount' => 0,
					'BuyerLocationLicense' => 'string',
					'BuyerUserID' => 0,
					'CreatedOn' => 'string',
					'Deleted' => true,
					'ID' => 0,
					'InvoiceID' => 'string',
					'Rejected' => true,
					'RejectedLocationLicense' => 'string',
					'RejectedOn' => 'string',
					'RejectedReason' => 'string',
					'TransactionID' => 0,
					'UpdatedOn' => 'string',
				],
				'TransactionID' => 0,
			]
			);
		});
		$a->put('/v1/invoice/{id}/payment/{paymentid}', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				'InvoicePayment' => [
					'Accepted' => true,
					'AcceptedLocationID' => 'string',
					'AcceptedOn' => 'string',
					'Amount' => 0,
					'BuyerLocationLicense' => 'string',
					'BuyerUserID' => 0,
					'CreatedOn' => 'string',
					'Deleted' => true,
					'ID' => 0,
					'InvoiceID' => 'string',
					'Rejected' => true,
					'RejectedLocationLicense' => 'string',
					'RejectedOn' => 'string',
					'RejectedReason' => 'string',
					'TransactionID' => 0,
					'UpdatedOn' => 'string',
				],
				'TransactionID' => 0,
			]
			);
		});
		$a->put('/v1/invoice/{id}/payment/{paymentid}/accept', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				'InvoicePayment' => [
					'Accepted' => true,
					'AcceptedLocationID' => 'string',
					'AcceptedOn' => 'string',
					'Amount' => 0,
					'BuyerLocationLicense' => 'string',
					'BuyerUserID' => 0,
					'CreatedOn' => 'string',
					'Deleted' => true,
					'ID' => 0,
					'InvoiceID' => 'string',
					'Rejected' => true,
					'RejectedLocationLicense' => 'string',
					'RejectedOn' => 'string',
					'RejectedReason' => 'string',
					'TransactionID' => 0,
					'UpdatedOn' => 'string',
				],
				'TransactionID' => 0,
			]
			);
		});
		$a->put('/v1/invoice/{id}/payment/{paymentid}/reject', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				'InvoicePayment' => [
					'Accepted' => true,
					'AcceptedLocationID' => 'string',
					'AcceptedOn' => 'string',
					'Amount' => 0,
					'BuyerLocationLicense' => 'string',
					'BuyerUserID' => 0,
					'CreatedOn' => 'string',
					'Deleted' => true,
					'ID' => 0,
					'InvoiceID' => 'string',
					'Rejected' => true,
					'RejectedLocationLicense' => 'string',
					'RejectedOn' => 'string',
					'RejectedReason' => 'string',
					'TransactionID' => 0,
					'UpdatedOn' => 'string',
				],
				'TransactionID' => 0,
			]
			);
		});
		$a->put('/v1/invoice/{id}/price', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				'Invoice' => [
					'Accepted' => true,
					'BuyerLocationLicense' => 'string',
					'Deleted' => true,
					'Inventory' => [
						[
							'Amount' => 0,
							'Deleted' => true,
							'ID' => 0,
							'InventoryID' => 'string',
							'InvoiceID' => 'string',
							'Price' => 0,
							'TransactionID' => 0,
						],
					],
					'InvoiceID' => 'string',
					'LocationLicense' => 'string',
					'Payment' => [
						[
							'Accepted' => true,
							'AcceptedLocationID' => 'string',
							'AcceptedOn' => 'string',
							'Amount' => 0,
							'BuyerLocationLicense' => 'string',
							'BuyerUserID' => 0,
							'CreatedOn' => 'string',
							'Deleted' => true,
							'ID' => 0,
							'InvoiceID' => 'string',
							'Rejected' => true,
							'RejectedLocationLicense' => 'string',
							'RejectedOn' => 'string',
							'RejectedReason' => 'string',
							'TransactionID' => 0,
							'UpdatedOn' => 'string',
						],
					],
					'Refund' => true,
					'SessionTime' => 0,
					'TransactionID' => 0,
				],
				'SessionTime' => 0,
				'TransactionID' => 0,
			]
			);
		});
		$a->put('/v1/invoice/{id}/void', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				'Inventory' => [
					[
						'ActiveSampleInventoryID' => 'string',
						'Deleted' => true,
						'Destroyed' => true,
						'Dried' => true,
						'ExpirationDate' => 'string',
						'ExternalID' => 'string',
						'ID' => 'string',
						'Initial' => true,
						'InventoryParentID' => [
							'string',
						],
						'InventoryType' => 0,
						'IsSample' => true,
						'LabSample' => [
							[
								'Amount' => 0,
								'AmountUsed' => 0,
								'CertOfAnalysisHyperlink' => 'string',
								'Deleted' => true,
								'ID' => 0,
								'InventoryID' => 'string',
								'InventoryType' => 0,
								'LabLicense' => 'string',
								'LocationLicense' => 'string',
								'Medical' => true,
								'MedicalGrade' => true,
								'ParentID' => 'string',
								'QualityControlDataHyperlink' => 'string',
								'Result' => 'string',
								'RnD' => true,
								'SampleUse' => 'string',
								'SessionTime' => 0,
								'TestingData' => [
									[
										'LabAnalysisTime' => '2024-01-31T10:00:00.000Z',
										'SamplePreparationTime' => '2024-01-31T10:00:00.000Z',
										'TestID' => 0,
										'TestResult' => [
											[
												'LabProvided' => true,
												'TestPanel' => 'string',
												'TestPass' => true,
												'TestValue' => 0,
												'TransactionID' => 0,
											],
										],
									],
								],
								'TransactionID' => 0,
							],
						],
						'LocationLicense' => 'string',
						'MedUsableWeight' => 0,
						'Medicated' => true,
						'NetPackageWeight' => 0,
						'PackageDate' => 'string',
						'ProductName' => 'string',
						'ProductionBatchID' => 0,
						'QAStatus' => 'string',
						'RecUsableWeight' => 0,
						'RemainingAmount' => 0,
						'Remediated' => true,
						'RemediationCount' => 0,
						'RemediationEligible' => true,
						'Restocked' => true,
						'Rework' => true,
						'RoomID' => 0,
						'Seized' => true,
						'SessionTime' => 0,
						'SourcePlantID' => 'string',
						'StateProductIdentifier' => 'string',
						'Status' => 'string',
						'Strain' => 'string',
						'TransactionID' => 0,
						'UOM' => 'string',
						'UnitBased' => true,
						'UsableWeight' => 0,
					],
				],
				'Invoice' => [
					'Accepted' => true,
					'BuyerLocationLicense' => 'string',
					'Deleted' => true,
					'Inventory' => [
						[
							'Amount' => 0,
							'Deleted' => true,
							'ID' => 0,
							'InventoryID' => 'string',
							'InvoiceID' => 'string',
							'Price' => 0,
							'TransactionID' => 0,
						],
					],
					'InvoiceID' => 'string',
					'LocationLicense' => 'string',
					'Payment' => [
						[
							'Accepted' => true,
							'AcceptedLocationID' => 'string',
							'AcceptedOn' => 'string',
							'Amount' => 0,
							'BuyerLocationLicense' => 'string',
							'BuyerUserID' => 0,
							'CreatedOn' => 'string',
							'Deleted' => true,
							'ID' => 0,
							'InvoiceID' => 'string',
							'Rejected' => true,
							'RejectedLocationLicense' => 'string',
							'RejectedOn' => 'string',
							'RejectedReason' => 'string',
							'TransactionID' => 0,
							'UpdatedOn' => 'string',
						],
					],
					'Refund' => true,
					'SessionTime' => 0,
					'TransactionID' => 0,
				],
				'SessionTime' => 0,
				'TransactionID' => 0,
			]
			);
		});

		// Manifest
		$a->get('/v1/manifest', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				'Manifest' => [
					[
						'City' => 'string',
						'Completed' => true,
						'CompletionDate' => 'string',
						'CreatedOn' => 'string',
						'Deleted' => true,
						'Driver' => [
							[
								'DateofBirth' => 'string',
								'ID' => 0,
								'Name' => 'string',
							],
						],
						'DriverArrived' => true,
						'InTransit' => true,
						'IsAccepted' => true,
						'IsParked' => true,
						'LicenseNumber' => 'string',
						'Links' => [
							[
								'Href' => 'string',
								'Method' => 'string',
								'Rel' => 'string',
							],
						],
						'ManifestID' => 'string',
						'Name' => 'string',
						'Phone' => 'string',
						'Received' => true,
						'SessionTime' => 0,
						'State' => 'string',
						'Stop' => [
							[
								'ApproximateArrival' => '2024-01-31T10:00:00.000Z',
								'ApproximateDeparture' => '2024-01-31T10:00:00.000Z',
								'ApproximateRoute' => 'string',
								'City' => 'string',
								'DriverArrived' => true,
								'DriverArrivedTime' => 'string',
								'ID' => 0,
								'Invoice' => [
									'Accepted' => true,
									'BuyerLocationLicense' => 'string',
									'Deleted' => true,
									'Inventory' => [
										[
											'Amount' => 0,
											'Deleted' => true,
											'ID' => 0,
											'InventoryID' => 'string',
											'InvoiceID' => 'string',
											'Price' => 0,
											'TransactionID' => 0,
										],
									],
									'InvoiceID' => 'string',
									'LocationLicense' => 'string',
									'Payment' => [
										[
											'Accepted' => true,
											'AcceptedLocationID' => 'string',
											'AcceptedOn' => 'string',
											'Amount' => 0,
											'BuyerLocationLicense' => 'string',
											'BuyerUserID' => 0,
											'CreatedOn' => 'string',
											'Deleted' => true,
											'ID' => 0,
											'InvoiceID' => 'string',
											'Rejected' => true,
											'RejectedLocationLicense' => 'string',
											'RejectedOn' => 'string',
											'RejectedReason' => 'string',
											'TransactionID' => 0,
											'UpdatedOn' => 'string',
										],
									],
									'Refund' => true,
									'SessionTime' => 0,
									'TransactionID' => 0,
								],
								'InvoiceID' => 'string',
								'Item' => [
									[
										'Deleted' => true,
										'Description' => 'string',
										'ID' => 0,
										'InventoryID' => 'string',
										'ManifestID' => 'string',
										'Quantity' => 0,
										'QuantityReceived' => 0,
										'SessionTime' => 0,
										'StopNumber' => 0,
										'TransactionID' => 0,
									],
								],
								'ItemsCount' => 0,
								'Links' => [
									[
										'Href' => 'string',
										'Method' => 'string',
										'Rel' => 'string',
									],
								],
								'LocationLicense' => 'string',
								'ManifestID' => 'string',
								'Name' => 'string',
								'ParkedTime' => 'string',
								'Phone' => 'string',
								'ResumedDirections' => 'string',
								'ResumedEstimatedArrival' => 'string',
								'ResumedEstimatedDeparture' => 'string',
								'ResumedTime' => 'string',
								'State' => 'string',
								'StopNumber' => 0,
								'TransporterParked' => true,
								'TransporterResumed' => true,
								'ZipCode' => 'string',
							],
						],
						'StopCount' => 0,
						'Street' => 'string',
						'ThirdPartyTransporter' => [
							'LicenseNumber' => 'string',
							'Name' => 'string',
						],
						'TotalItemCount' => 0,
						'TransactionID' => 0,
						'Type' => 'string',
						'UpdatedOn' => 'string',
						'Vehicle' => [
							'Description' => 'string',
							'ID' => 'string',
						],
						'Zip' => 'string',
					],
				],
				'NextCursor' => 0,
				'NextTransactionID' => 0,
			]
			);
		});
		$a->post('/v1/manifest', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				'Inventory' => [
					[
						'ActiveSampleInventoryID' => 'string',
						'Deleted' => true,
						'Destroyed' => true,
						'Dried' => true,
						'ExpirationDate' => 'string',
						'ExternalID' => 'string',
						'ID' => 'string',
						'Initial' => true,
						'InventoryParentID' => [
							'string',
						],
						'InventoryType' => 0,
						'IsSample' => true,
						'LabSample' => [
							[
								'Amount' => 0,
								'AmountUsed' => 0,
								'CertOfAnalysisHyperlink' => 'string',
								'Deleted' => true,
								'ID' => 0,
								'InventoryID' => 'string',
								'InventoryType' => 0,
								'LabLicense' => 'string',
								'LocationLicense' => 'string',
								'Medical' => true,
								'MedicalGrade' => true,
								'ParentID' => 'string',
								'QualityControlDataHyperlink' => 'string',
								'Result' => 'string',
								'RnD' => true,
								'SampleUse' => 'string',
								'SessionTime' => 0,
								'TestingData' => [
									[
										'LabAnalysisTime' => '2024-01-31T10:00:00.000Z',
										'SamplePreparationTime' => '2024-01-31T10:00:00.000Z',
										'TestID' => 0,
										'TestResult' => [
											[
												'LabProvided' => true,
												'TestPanel' => 'string',
												'TestPass' => true,
												'TestValue' => 0,
												'TransactionID' => 0,
											],
										],
									],
								],
								'TransactionID' => 0,
							],
						],
						'LocationLicense' => 'string',
						'MedUsableWeight' => 0,
						'Medicated' => true,
						'NetPackageWeight' => 0,
						'PackageDate' => 'string',
						'ProductName' => 'string',
						'ProductionBatchID' => 0,
						'QAStatus' => 'string',
						'RecUsableWeight' => 0,
						'RemainingAmount' => 0,
						'Remediated' => true,
						'RemediationCount' => 0,
						'RemediationEligible' => true,
						'Restocked' => true,
						'Rework' => true,
						'RoomID' => 0,
						'Seized' => true,
						'SessionTime' => 0,
						'SourcePlantID' => 'string',
						'StateProductIdentifier' => 'string',
						'Status' => 'string',
						'Strain' => 'string',
						'TransactionID' => 0,
						'UOM' => 'string',
						'UnitBased' => true,
						'UsableWeight' => 0,
					],
				],
				'Manifest' => [
					'City' => 'string',
					'Completed' => true,
					'CompletionDate' => 'string',
					'CreatedOn' => 'string',
					'Deleted' => true,
					'Driver' => [
						[
							'DateofBirth' => 'string',
							'ID' => 0,
							'Name' => 'string',
						],
					],
					'DriverArrived' => true,
					'InTransit' => true,
					'IsAccepted' => true,
					'IsParked' => true,
					'LicenseNumber' => 'string',
					'Links' => [
						[
							'Href' => 'string',
							'Method' => 'string',
							'Rel' => 'string',
						],
					],
					'ManifestID' => 'string',
					'Name' => 'string',
					'Phone' => 'string',
					'Received' => true,
					'SessionTime' => 0,
					'State' => 'string',
					'Stop' => [
						[
							'ApproximateArrival' => '2024-01-31T10:00:00.000Z',
							'ApproximateDeparture' => '2024-01-31T10:00:00.000Z',
							'ApproximateRoute' => 'string',
							'City' => 'string',
							'DriverArrived' => true,
							'DriverArrivedTime' => 'string',
							'ID' => 0,
							'Invoice' => [
								'Accepted' => true,
								'BuyerLocationLicense' => 'string',
								'Deleted' => true,
								'Inventory' => [
									[
										'Amount' => 0,
										'Deleted' => true,
										'ID' => 0,
										'InventoryID' => 'string',
										'InvoiceID' => 'string',
										'Price' => 0,
										'TransactionID' => 0,
									],
								],
								'InvoiceID' => 'string',
								'LocationLicense' => 'string',
								'Payment' => [
									[
										'Accepted' => true,
										'AcceptedLocationID' => 'string',
										'AcceptedOn' => 'string',
										'Amount' => 0,
										'BuyerLocationLicense' => 'string',
										'BuyerUserID' => 0,
										'CreatedOn' => 'string',
										'Deleted' => true,
										'ID' => 0,
										'InvoiceID' => 'string',
										'Rejected' => true,
										'RejectedLocationLicense' => 'string',
										'RejectedOn' => 'string',
										'RejectedReason' => 'string',
										'TransactionID' => 0,
										'UpdatedOn' => 'string',
									],
								],
								'Refund' => true,
								'SessionTime' => 0,
								'TransactionID' => 0,
							],
							'InvoiceID' => 'string',
							'Item' => [
								[
									'Deleted' => true,
									'Description' => 'string',
									'ID' => 0,
									'InventoryID' => 'string',
									'ManifestID' => 'string',
									'Quantity' => 0,
									'QuantityReceived' => 0,
									'SessionTime' => 0,
									'StopNumber' => 0,
									'TransactionID' => 0,
								],
							],
							'ItemsCount' => 0,
							'Links' => [
								[
									'Href' => 'string',
									'Method' => 'string',
									'Rel' => 'string',
								],
							],
							'LocationLicense' => 'string',
							'ManifestID' => 'string',
							'Name' => 'string',
							'ParkedTime' => 'string',
							'Phone' => 'string',
							'ResumedDirections' => 'string',
							'ResumedEstimatedArrival' => 'string',
							'ResumedEstimatedDeparture' => 'string',
							'ResumedTime' => 'string',
							'State' => 'string',
							'StopNumber' => 0,
							'TransporterParked' => true,
							'TransporterResumed' => true,
							'ZipCode' => 'string',
						],
					],
					'StopCount' => 0,
					'Street' => 'string',
					'ThirdPartyTransporter' => [
						'LicenseNumber' => 'string',
						'Name' => 'string',
					],
					'TotalItemCount' => 0,
					'TransactionID' => 0,
					'Type' => 'string',
					'UpdatedOn' => 'string',
					'Vehicle' => [
						'Description' => 'string',
						'ID' => 'string',
					],
					'Zip' => 'string',
				],
				'Sessiontime' => 0,
				'TransactionID' => 0,
			]
			);
		});
		$a->get('/v1/manifest/pickup', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				'Manifest' => [
					[
						'City' => 'string',
						'Completed' => true,
						'CompletionDate' => 'string',
						'CreatedOn' => 'string',
						'Deleted' => true,
						'Driver' => [
							[
								'DateofBirth' => 'string',
								'ID' => 0,
								'Name' => 'string',
							],
						],
						'DriverArrived' => true,
						'InTransit' => true,
						'IsAccepted' => true,
						'IsParked' => true,
						'LicenseNumber' => 'string',
						'Links' => [
							[
								'Href' => 'string',
								'Method' => 'string',
								'Rel' => 'string',
							],
						],
						'ManifestID' => 'string',
						'Name' => 'string',
						'Phone' => 'string',
						'Received' => true,
						'SessionTime' => 0,
						'State' => 'string',
						'Stop' => [
							[
								'ApproximateArrival' => '2024-01-31T10:00:00.000Z',
								'ApproximateDeparture' => '2024-01-31T10:00:00.000Z',
								'ApproximateRoute' => 'string',
								'City' => 'string',
								'DriverArrived' => true,
								'DriverArrivedTime' => 'string',
								'ID' => 0,
								'Invoice' => [
									'Accepted' => true,
									'BuyerLocationLicense' => 'string',
									'Deleted' => true,
									'Inventory' => [
										[
											'Amount' => 0,
											'Deleted' => true,
											'ID' => 0,
											'InventoryID' => 'string',
											'InvoiceID' => 'string',
											'Price' => 0,
											'TransactionID' => 0,
										],
									],
									'InvoiceID' => 'string',
									'LocationLicense' => 'string',
									'Payment' => [
										[
											'Accepted' => true,
											'AcceptedLocationID' => 'string',
											'AcceptedOn' => 'string',
											'Amount' => 0,
											'BuyerLocationLicense' => 'string',
											'BuyerUserID' => 0,
											'CreatedOn' => 'string',
											'Deleted' => true,
											'ID' => 0,
											'InvoiceID' => 'string',
											'Rejected' => true,
											'RejectedLocationLicense' => 'string',
											'RejectedOn' => 'string',
											'RejectedReason' => 'string',
											'TransactionID' => 0,
											'UpdatedOn' => 'string',
										],
									],
									'Refund' => true,
									'SessionTime' => 0,
									'TransactionID' => 0,
								],
								'InvoiceID' => 'string',
								'Item' => [
									[
										'Deleted' => true,
										'Description' => 'string',
										'ID' => 0,
										'InventoryID' => 'string',
										'ManifestID' => 'string',
										'Quantity' => 0,
										'QuantityReceived' => 0,
										'SessionTime' => 0,
										'StopNumber' => 0,
										'TransactionID' => 0,
									],
								],
								'ItemsCount' => 0,
								'Links' => [
									[
										'Href' => 'string',
										'Method' => 'string',
										'Rel' => 'string',
									],
								],
								'LocationLicense' => 'string',
								'ManifestID' => 'string',
								'Name' => 'string',
								'ParkedTime' => 'string',
								'Phone' => 'string',
								'ResumedDirections' => 'string',
								'ResumedEstimatedArrival' => 'string',
								'ResumedEstimatedDeparture' => 'string',
								'ResumedTime' => 'string',
								'State' => 'string',
								'StopNumber' => 0,
								'TransporterParked' => true,
								'TransporterResumed' => true,
								'ZipCode' => 'string',
							],
						],
						'StopCount' => 0,
						'Street' => 'string',
						'ThirdPartyTransporter' => [
							'LicenseNumber' => 'string',
							'Name' => 'string',
						],
						'TotalItemCount' => 0,
						'TransactionID' => 0,
						'Type' => 'string',
						'UpdatedOn' => 'string',
						'Vehicle' => [
							'Description' => 'string',
							'ID' => 'string',
						],
						'Zip' => 'string',
					],
				],
				'NextCursor' => 0,
				'NextTransactionID' => 0,
			]
			);
		});
		$a->post('/v1/manifest/pickup', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				'Inventory' => [
					[
						'ActiveSampleInventoryID' => 'string',
						'Deleted' => true,
						'Destroyed' => true,
						'Dried' => true,
						'ExpirationDate' => 'string',
						'ExternalID' => 'string',
						'ID' => 'string',
						'Initial' => true,
						'InventoryParentID' => [
							'string',
						],
						'InventoryType' => 0,
						'IsSample' => true,
						'LabSample' => [
							[
								'Amount' => 0,
								'AmountUsed' => 0,
								'CertOfAnalysisHyperlink' => 'string',
								'Deleted' => true,
								'ID' => 0,
								'InventoryID' => 'string',
								'InventoryType' => 0,
								'LabLicense' => 'string',
								'LocationLicense' => 'string',
								'Medical' => true,
								'MedicalGrade' => true,
								'ParentID' => 'string',
								'QualityControlDataHyperlink' => 'string',
								'Result' => 'string',
								'RnD' => true,
								'SampleUse' => 'string',
								'SessionTime' => 0,
								'TestingData' => [
									[
										'LabAnalysisTime' => '2024-01-31T10:00:00.000Z',
										'SamplePreparationTime' => '2024-01-31T10:00:00.000Z',
										'TestID' => 0,
										'TestResult' => [
											[
												'LabProvided' => true,
												'TestPanel' => 'string',
												'TestPass' => true,
												'TestValue' => 0,
												'TransactionID' => 0,
											],
										],
									],
								],
								'TransactionID' => 0,
							],
						],
						'LocationLicense' => 'string',
						'MedUsableWeight' => 0,
						'Medicated' => true,
						'NetPackageWeight' => 0,
						'PackageDate' => 'string',
						'ProductName' => 'string',
						'ProductionBatchID' => 0,
						'QAStatus' => 'string',
						'RecUsableWeight' => 0,
						'RemainingAmount' => 0,
						'Remediated' => true,
						'RemediationCount' => 0,
						'RemediationEligible' => true,
						'Restocked' => true,
						'Rework' => true,
						'RoomID' => 0,
						'Seized' => true,
						'SessionTime' => 0,
						'SourcePlantID' => 'string',
						'StateProductIdentifier' => 'string',
						'Status' => 'string',
						'Strain' => 'string',
						'TransactionID' => 0,
						'UOM' => 'string',
						'UnitBased' => true,
						'UsableWeight' => 0,
					],
				],
				'Manifest' => [
					'City' => 'string',
					'Completed' => true,
					'CompletionDate' => 'string',
					'CreatedOn' => 'string',
					'Deleted' => true,
					'Driver' => [
						[
							'DateofBirth' => 'string',
							'ID' => 0,
							'Name' => 'string',
						],
					],
					'DriverArrived' => true,
					'InTransit' => true,
					'IsAccepted' => true,
					'IsParked' => true,
					'LicenseNumber' => 'string',
					'Links' => [
						[
							'Href' => 'string',
							'Method' => 'string',
							'Rel' => 'string',
						],
					],
					'ManifestID' => 'string',
					'Name' => 'string',
					'Phone' => 'string',
					'Received' => true,
					'SessionTime' => 0,
					'State' => 'string',
					'Stop' => [
						[
							'ApproximateArrival' => '2024-01-31T10:00:00.000Z',
							'ApproximateDeparture' => '2024-01-31T10:00:00.000Z',
							'ApproximateRoute' => 'string',
							'City' => 'string',
							'DriverArrived' => true,
							'DriverArrivedTime' => 'string',
							'ID' => 0,
							'Invoice' => [
								'Accepted' => true,
								'BuyerLocationLicense' => 'string',
								'Deleted' => true,
								'Inventory' => [
									[
										'Amount' => 0,
										'Deleted' => true,
										'ID' => 0,
										'InventoryID' => 'string',
										'InvoiceID' => 'string',
										'Price' => 0,
										'TransactionID' => 0,
									],
								],
								'InvoiceID' => 'string',
								'LocationLicense' => 'string',
								'Payment' => [
									[
										'Accepted' => true,
										'AcceptedLocationID' => 'string',
										'AcceptedOn' => 'string',
										'Amount' => 0,
										'BuyerLocationLicense' => 'string',
										'BuyerUserID' => 0,
										'CreatedOn' => 'string',
										'Deleted' => true,
										'ID' => 0,
										'InvoiceID' => 'string',
										'Rejected' => true,
										'RejectedLocationLicense' => 'string',
										'RejectedOn' => 'string',
										'RejectedReason' => 'string',
										'TransactionID' => 0,
										'UpdatedOn' => 'string',
									],
								],
								'Refund' => true,
								'SessionTime' => 0,
								'TransactionID' => 0,
							],
							'InvoiceID' => 'string',
							'Item' => [
								[
									'Deleted' => true,
									'Description' => 'string',
									'ID' => 0,
									'InventoryID' => 'string',
									'ManifestID' => 'string',
									'Quantity' => 0,
									'QuantityReceived' => 0,
									'SessionTime' => 0,
									'StopNumber' => 0,
									'TransactionID' => 0,
								],
							],
							'ItemsCount' => 0,
							'Links' => [
								[
									'Href' => 'string',
									'Method' => 'string',
									'Rel' => 'string',
								],
							],
							'LocationLicense' => 'string',
							'ManifestID' => 'string',
							'Name' => 'string',
							'ParkedTime' => 'string',
							'Phone' => 'string',
							'ResumedDirections' => 'string',
							'ResumedEstimatedArrival' => 'string',
							'ResumedEstimatedDeparture' => 'string',
							'ResumedTime' => 'string',
							'State' => 'string',
							'StopNumber' => 0,
							'TransporterParked' => true,
							'TransporterResumed' => true,
							'ZipCode' => 'string',
						],
					],
					'StopCount' => 0,
					'Street' => 'string',
					'ThirdPartyTransporter' => [
						'LicenseNumber' => 'string',
						'Name' => 'string',
					],
					'TotalItemCount' => 0,
					'TransactionID' => 0,
					'Type' => 'string',
					'UpdatedOn' => 'string',
					'Vehicle' => [
						'Description' => 'string',
						'ID' => 'string',
					],
					'Zip' => 'string',
				],
				'Sessiontime' => 0,
				'TransactionID' => 0,
			]
			);
		});
		$a->put('/v1/manifest/pickup/{id}', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				'Inventory' => [
					[
						'ActiveSampleInventoryID' => 'string',
						'Deleted' => true,
						'Destroyed' => true,
						'Dried' => true,
						'ExpirationDate' => 'string',
						'ExternalID' => 'string',
						'ID' => 'string',
						'Initial' => true,
						'InventoryParentID' => [
							'string',
						],
						'InventoryType' => 0,
						'IsSample' => true,
						'LabSample' => [
							[
								'Amount' => 0,
								'AmountUsed' => 0,
								'CertOfAnalysisHyperlink' => 'string',
								'Deleted' => true,
								'ID' => 0,
								'InventoryID' => 'string',
								'InventoryType' => 0,
								'LabLicense' => 'string',
								'LocationLicense' => 'string',
								'Medical' => true,
								'MedicalGrade' => true,
								'ParentID' => 'string',
								'QualityControlDataHyperlink' => 'string',
								'Result' => 'string',
								'RnD' => true,
								'SampleUse' => 'string',
								'SessionTime' => 0,
								'TestingData' => [
									[
										'LabAnalysisTime' => '2024-01-31T10:00:00.000Z',
										'SamplePreparationTime' => '2024-01-31T10:00:00.000Z',
										'TestID' => 0,
										'TestResult' => [
											[
												'LabProvided' => true,
												'TestPanel' => 'string',
												'TestPass' => true,
												'TestValue' => 0,
												'TransactionID' => 0,
											],
										],
									],
								],
								'TransactionID' => 0,
							],
						],
						'LocationLicense' => 'string',
						'MedUsableWeight' => 0,
						'Medicated' => true,
						'NetPackageWeight' => 0,
						'PackageDate' => 'string',
						'ProductName' => 'string',
						'ProductionBatchID' => 0,
						'QAStatus' => 'string',
						'RecUsableWeight' => 0,
						'RemainingAmount' => 0,
						'Remediated' => true,
						'RemediationCount' => 0,
						'RemediationEligible' => true,
						'Restocked' => true,
						'Rework' => true,
						'RoomID' => 0,
						'Seized' => true,
						'SessionTime' => 0,
						'SourcePlantID' => 'string',
						'StateProductIdentifier' => 'string',
						'Status' => 'string',
						'Strain' => 'string',
						'TransactionID' => 0,
						'UOM' => 'string',
						'UnitBased' => true,
						'UsableWeight' => 0,
					],
				],
				'Manifest' => [
					'City' => 'string',
					'Completed' => true,
					'CompletionDate' => 'string',
					'CreatedOn' => 'string',
					'Deleted' => true,
					'Driver' => [
						[
							'DateofBirth' => 'string',
							'ID' => 0,
							'Name' => 'string',
						],
					],
					'DriverArrived' => true,
					'InTransit' => true,
					'IsAccepted' => true,
					'IsParked' => true,
					'LicenseNumber' => 'string',
					'Links' => [
						[
							'Href' => 'string',
							'Method' => 'string',
							'Rel' => 'string',
						],
					],
					'ManifestID' => 'string',
					'Name' => 'string',
					'Phone' => 'string',
					'Received' => true,
					'SessionTime' => 0,
					'State' => 'string',
					'Stop' => [
						[
							'ApproximateArrival' => '2024-01-31T10:00:00.000Z',
							'ApproximateDeparture' => '2024-01-31T10:00:00.000Z',
							'ApproximateRoute' => 'string',
							'City' => 'string',
							'DriverArrived' => true,
							'DriverArrivedTime' => 'string',
							'ID' => 0,
							'Invoice' => [
								'Accepted' => true,
								'BuyerLocationLicense' => 'string',
								'Deleted' => true,
								'Inventory' => [
									[
										'Amount' => 0,
										'Deleted' => true,
										'ID' => 0,
										'InventoryID' => 'string',
										'InvoiceID' => 'string',
										'Price' => 0,
										'TransactionID' => 0,
									],
								],
								'InvoiceID' => 'string',
								'LocationLicense' => 'string',
								'Payment' => [
									[
										'Accepted' => true,
										'AcceptedLocationID' => 'string',
										'AcceptedOn' => 'string',
										'Amount' => 0,
										'BuyerLocationLicense' => 'string',
										'BuyerUserID' => 0,
										'CreatedOn' => 'string',
										'Deleted' => true,
										'ID' => 0,
										'InvoiceID' => 'string',
										'Rejected' => true,
										'RejectedLocationLicense' => 'string',
										'RejectedOn' => 'string',
										'RejectedReason' => 'string',
										'TransactionID' => 0,
										'UpdatedOn' => 'string',
									],
								],
								'Refund' => true,
								'SessionTime' => 0,
								'TransactionID' => 0,
							],
							'InvoiceID' => 'string',
							'Item' => [
								[
									'Deleted' => true,
									'Description' => 'string',
									'ID' => 0,
									'InventoryID' => 'string',
									'ManifestID' => 'string',
									'Quantity' => 0,
									'QuantityReceived' => 0,
									'SessionTime' => 0,
									'StopNumber' => 0,
									'TransactionID' => 0,
								],
							],
							'ItemsCount' => 0,
							'Links' => [
								[
									'Href' => 'string',
									'Method' => 'string',
									'Rel' => 'string',
								],
							],
							'LocationLicense' => 'string',
							'ManifestID' => 'string',
							'Name' => 'string',
							'ParkedTime' => 'string',
							'Phone' => 'string',
							'ResumedDirections' => 'string',
							'ResumedEstimatedArrival' => 'string',
							'ResumedEstimatedDeparture' => 'string',
							'ResumedTime' => 'string',
							'State' => 'string',
							'StopNumber' => 0,
							'TransporterParked' => true,
							'TransporterResumed' => true,
							'ZipCode' => 'string',
						],
					],
					'StopCount' => 0,
					'Street' => 'string',
					'ThirdPartyTransporter' => [
						'LicenseNumber' => 'string',
						'Name' => 'string',
					],
					'TotalItemCount' => 0,
					'TransactionID' => 0,
					'Type' => 'string',
					'UpdatedOn' => 'string',
					'Vehicle' => [
						'Description' => 'string',
						'ID' => 'string',
					],
					'Zip' => 'string',
				],
				'Sessiontime' => 0,
				'TransactionID' => 0,
			]
			);
		});
		$a->put('/v1/manifest/pickup/{id}/modify', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				'Inventory' => [
					[
						'ActiveSampleInventoryID' => 'string',
						'Deleted' => true,
						'Destroyed' => true,
						'Dried' => true,
						'ExpirationDate' => 'string',
						'ExternalID' => 'string',
						'ID' => 'string',
						'Initial' => true,
						'InventoryParentID' => [
							'string',
						],
						'InventoryType' => 0,
						'IsSample' => true,
						'LabSample' => [
							[
								'Amount' => 0,
								'AmountUsed' => 0,
								'CertOfAnalysisHyperlink' => 'string',
								'Deleted' => true,
								'ID' => 0,
								'InventoryID' => 'string',
								'InventoryType' => 0,
								'LabLicense' => 'string',
								'LocationLicense' => 'string',
								'Medical' => true,
								'MedicalGrade' => true,
								'ParentID' => 'string',
								'QualityControlDataHyperlink' => 'string',
								'Result' => 'string',
								'RnD' => true,
								'SampleUse' => 'string',
								'SessionTime' => 0,
								'TestingData' => [
									[
										'LabAnalysisTime' => '2024-01-31T10:00:00.000Z',
										'SamplePreparationTime' => '2024-01-31T10:00:00.000Z',
										'TestID' => 0,
										'TestResult' => [
											[
												'LabProvided' => true,
												'TestPanel' => 'string',
												'TestPass' => true,
												'TestValue' => 0,
												'TransactionID' => 0,
											],
										],
									],
								],
								'TransactionID' => 0,
							],
						],
						'LocationLicense' => 'string',
						'MedUsableWeight' => 0,
						'Medicated' => true,
						'NetPackageWeight' => 0,
						'PackageDate' => 'string',
						'ProductName' => 'string',
						'ProductionBatchID' => 0,
						'QAStatus' => 'string',
						'RecUsableWeight' => 0,
						'RemainingAmount' => 0,
						'Remediated' => true,
						'RemediationCount' => 0,
						'RemediationEligible' => true,
						'Restocked' => true,
						'Rework' => true,
						'RoomID' => 0,
						'Seized' => true,
						'SessionTime' => 0,
						'SourcePlantID' => 'string',
						'StateProductIdentifier' => 'string',
						'Status' => 'string',
						'Strain' => 'string',
						'TransactionID' => 0,
						'UOM' => 'string',
						'UnitBased' => true,
						'UsableWeight' => 0,
					],
				],
				'Manifest' => [
					'City' => 'string',
					'Completed' => true,
					'CompletionDate' => 'string',
					'CreatedOn' => 'string',
					'Deleted' => true,
					'Driver' => [
						[
							'DateofBirth' => 'string',
							'ID' => 0,
							'Name' => 'string',
						],
					],
					'DriverArrived' => true,
					'InTransit' => true,
					'IsAccepted' => true,
					'IsParked' => true,
					'LicenseNumber' => 'string',
					'Links' => [
						[
							'Href' => 'string',
							'Method' => 'string',
							'Rel' => 'string',
						],
					],
					'ManifestID' => 'string',
					'Name' => 'string',
					'Phone' => 'string',
					'Received' => true,
					'SessionTime' => 0,
					'State' => 'string',
					'Stop' => [
						[
							'ApproximateArrival' => '2024-01-31T10:00:00.000Z',
							'ApproximateDeparture' => '2024-01-31T10:00:00.000Z',
							'ApproximateRoute' => 'string',
							'City' => 'string',
							'DriverArrived' => true,
							'DriverArrivedTime' => 'string',
							'ID' => 0,
							'Invoice' => [
								'Accepted' => true,
								'BuyerLocationLicense' => 'string',
								'Deleted' => true,
								'Inventory' => [
									[
										'Amount' => 0,
										'Deleted' => true,
										'ID' => 0,
										'InventoryID' => 'string',
										'InvoiceID' => 'string',
										'Price' => 0,
										'TransactionID' => 0,
									],
								],
								'InvoiceID' => 'string',
								'LocationLicense' => 'string',
								'Payment' => [
									[
										'Accepted' => true,
										'AcceptedLocationID' => 'string',
										'AcceptedOn' => 'string',
										'Amount' => 0,
										'BuyerLocationLicense' => 'string',
										'BuyerUserID' => 0,
										'CreatedOn' => 'string',
										'Deleted' => true,
										'ID' => 0,
										'InvoiceID' => 'string',
										'Rejected' => true,
										'RejectedLocationLicense' => 'string',
										'RejectedOn' => 'string',
										'RejectedReason' => 'string',
										'TransactionID' => 0,
										'UpdatedOn' => 'string',
									],
								],
								'Refund' => true,
								'SessionTime' => 0,
								'TransactionID' => 0,
							],
							'InvoiceID' => 'string',
							'Item' => [
								[
									'Deleted' => true,
									'Description' => 'string',
									'ID' => 0,
									'InventoryID' => 'string',
									'ManifestID' => 'string',
									'Quantity' => 0,
									'QuantityReceived' => 0,
									'SessionTime' => 0,
									'StopNumber' => 0,
									'TransactionID' => 0,
								],
							],
							'ItemsCount' => 0,
							'Links' => [
								[
									'Href' => 'string',
									'Method' => 'string',
									'Rel' => 'string',
								],
							],
							'LocationLicense' => 'string',
							'ManifestID' => 'string',
							'Name' => 'string',
							'ParkedTime' => 'string',
							'Phone' => 'string',
							'ResumedDirections' => 'string',
							'ResumedEstimatedArrival' => 'string',
							'ResumedEstimatedDeparture' => 'string',
							'ResumedTime' => 'string',
							'State' => 'string',
							'StopNumber' => 0,
							'TransporterParked' => true,
							'TransporterResumed' => true,
							'ZipCode' => 'string',
						],
					],
					'StopCount' => 0,
					'Street' => 'string',
					'ThirdPartyTransporter' => [
						'LicenseNumber' => 'string',
						'Name' => 'string',
					],
					'TotalItemCount' => 0,
					'TransactionID' => 0,
					'Type' => 'string',
					'UpdatedOn' => 'string',
					'Vehicle' => [
						'Description' => 'string',
						'ID' => 'string',
					],
					'Zip' => 'string',
				],
				'Sessiontime' => 0,
				'TransactionID' => 0,
			]
			);
		});
		$a->get('/v1/manifest/thirdparty', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				'Manifest' => [
					[
						'City' => 'string',
						'Completed' => true,
						'CompletionDate' => 'string',
						'CreatedOn' => 'string',
						'Deleted' => true,
						'Driver' => [
							[
								'DateofBirth' => 'string',
								'ID' => 0,
								'Name' => 'string',
							],
						],
						'DriverArrived' => true,
						'InTransit' => true,
						'IsAccepted' => true,
						'IsParked' => true,
						'LicenseNumber' => 'string',
						'Links' => [
							[
								'Href' => 'string',
								'Method' => 'string',
								'Rel' => 'string',
							],
						],
						'ManifestID' => 'string',
						'Name' => 'string',
						'Phone' => 'string',
						'Received' => true,
						'SessionTime' => 0,
						'State' => 'string',
						'Stop' => [
							[
								'ApproximateArrival' => '2024-01-31T10:00:00.000Z',
								'ApproximateDeparture' => '2024-01-31T10:00:00.000Z',
								'ApproximateRoute' => 'string',
								'City' => 'string',
								'DriverArrived' => true,
								'DriverArrivedTime' => 'string',
								'ID' => 0,
								'Invoice' => [
									'Accepted' => true,
									'BuyerLocationLicense' => 'string',
									'Deleted' => true,
									'Inventory' => [
										[
											'Amount' => 0,
											'Deleted' => true,
											'ID' => 0,
											'InventoryID' => 'string',
											'InvoiceID' => 'string',
											'Price' => 0,
											'TransactionID' => 0,
										],
									],
									'InvoiceID' => 'string',
									'LocationLicense' => 'string',
									'Payment' => [
										[
											'Accepted' => true,
											'AcceptedLocationID' => 'string',
											'AcceptedOn' => 'string',
											'Amount' => 0,
											'BuyerLocationLicense' => 'string',
											'BuyerUserID' => 0,
											'CreatedOn' => 'string',
											'Deleted' => true,
											'ID' => 0,
											'InvoiceID' => 'string',
											'Rejected' => true,
											'RejectedLocationLicense' => 'string',
											'RejectedOn' => 'string',
											'RejectedReason' => 'string',
											'TransactionID' => 0,
											'UpdatedOn' => 'string',
										],
									],
									'Refund' => true,
									'SessionTime' => 0,
									'TransactionID' => 0,
								],
								'InvoiceID' => 'string',
								'Item' => [
									[
										'Deleted' => true,
										'Description' => 'string',
										'ID' => 0,
										'InventoryID' => 'string',
										'ManifestID' => 'string',
										'Quantity' => 0,
										'QuantityReceived' => 0,
										'SessionTime' => 0,
										'StopNumber' => 0,
										'TransactionID' => 0,
									],
								],
								'ItemsCount' => 0,
								'Links' => [
									[
										'Href' => 'string',
										'Method' => 'string',
										'Rel' => 'string',
									],
								],
								'LocationLicense' => 'string',
								'ManifestID' => 'string',
								'Name' => 'string',
								'ParkedTime' => 'string',
								'Phone' => 'string',
								'ResumedDirections' => 'string',
								'ResumedEstimatedArrival' => 'string',
								'ResumedEstimatedDeparture' => 'string',
								'ResumedTime' => 'string',
								'State' => 'string',
								'StopNumber' => 0,
								'TransporterParked' => true,
								'TransporterResumed' => true,
								'ZipCode' => 'string',
							],
						],
						'StopCount' => 0,
						'Street' => 'string',
						'ThirdPartyTransporter' => [
							'LicenseNumber' => 'string',
							'Name' => 'string',
						],
						'TotalItemCount' => 0,
						'TransactionID' => 0,
						'Type' => 'string',
						'UpdatedOn' => 'string',
						'Vehicle' => [
							'Description' => 'string',
							'ID' => 'string',
						],
						'Zip' => 'string',
					],
				],
				'NextCursor' => 0,
				'NextTransactionID' => 0,
			]
			);
		});
		$a->post('/v1/manifest/thirdparty', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				'Inventory' => [
					[
						'ActiveSampleInventoryID' => 'string',
						'Deleted' => true,
						'Destroyed' => true,
						'Dried' => true,
						'ExpirationDate' => 'string',
						'ExternalID' => 'string',
						'ID' => 'string',
						'Initial' => true,
						'InventoryParentID' => [
							'string',
						],
						'InventoryType' => 0,
						'IsSample' => true,
						'LabSample' => [
							[
								'Amount' => 0,
								'AmountUsed' => 0,
								'CertOfAnalysisHyperlink' => 'string',
								'Deleted' => true,
								'ID' => 0,
								'InventoryID' => 'string',
								'InventoryType' => 0,
								'LabLicense' => 'string',
								'LocationLicense' => 'string',
								'Medical' => true,
								'MedicalGrade' => true,
								'ParentID' => 'string',
								'QualityControlDataHyperlink' => 'string',
								'Result' => 'string',
								'RnD' => true,
								'SampleUse' => 'string',
								'SessionTime' => 0,
								'TestingData' => [
									[
										'LabAnalysisTime' => '2024-01-31T10:00:00.000Z',
										'SamplePreparationTime' => '2024-01-31T10:00:00.000Z',
										'TestID' => 0,
										'TestResult' => [
											[
												'LabProvided' => true,
												'TestPanel' => 'string',
												'TestPass' => true,
												'TestValue' => 0,
												'TransactionID' => 0,
											],
										],
									],
								],
								'TransactionID' => 0,
							],
						],
						'LocationLicense' => 'string',
						'MedUsableWeight' => 0,
						'Medicated' => true,
						'NetPackageWeight' => 0,
						'PackageDate' => 'string',
						'ProductName' => 'string',
						'ProductionBatchID' => 0,
						'QAStatus' => 'string',
						'RecUsableWeight' => 0,
						'RemainingAmount' => 0,
						'Remediated' => true,
						'RemediationCount' => 0,
						'RemediationEligible' => true,
						'Restocked' => true,
						'Rework' => true,
						'RoomID' => 0,
						'Seized' => true,
						'SessionTime' => 0,
						'SourcePlantID' => 'string',
						'StateProductIdentifier' => 'string',
						'Status' => 'string',
						'Strain' => 'string',
						'TransactionID' => 0,
						'UOM' => 'string',
						'UnitBased' => true,
						'UsableWeight' => 0,
					],
				],
				'Manifest' => [
					'City' => 'string',
					'Completed' => true,
					'CompletionDate' => 'string',
					'CreatedOn' => 'string',
					'Deleted' => true,
					'Driver' => [
						[
							'DateofBirth' => 'string',
							'ID' => 0,
							'Name' => 'string',
						],
					],
					'DriverArrived' => true,
					'InTransit' => true,
					'IsAccepted' => true,
					'IsParked' => true,
					'LicenseNumber' => 'string',
					'Links' => [
						[
							'Href' => 'string',
							'Method' => 'string',
							'Rel' => 'string',
						],
					],
					'ManifestID' => 'string',
					'Name' => 'string',
					'Phone' => 'string',
					'Received' => true,
					'SessionTime' => 0,
					'State' => 'string',
					'Stop' => [
						[
							'ApproximateArrival' => '2024-01-31T10:00:00.000Z',
							'ApproximateDeparture' => '2024-01-31T10:00:00.000Z',
							'ApproximateRoute' => 'string',
							'City' => 'string',
							'DriverArrived' => true,
							'DriverArrivedTime' => 'string',
							'ID' => 0,
							'Invoice' => [
								'Accepted' => true,
								'BuyerLocationLicense' => 'string',
								'Deleted' => true,
								'Inventory' => [
									[
										'Amount' => 0,
										'Deleted' => true,
										'ID' => 0,
										'InventoryID' => 'string',
										'InvoiceID' => 'string',
										'Price' => 0,
										'TransactionID' => 0,
									],
								],
								'InvoiceID' => 'string',
								'LocationLicense' => 'string',
								'Payment' => [
									[
										'Accepted' => true,
										'AcceptedLocationID' => 'string',
										'AcceptedOn' => 'string',
										'Amount' => 0,
										'BuyerLocationLicense' => 'string',
										'BuyerUserID' => 0,
										'CreatedOn' => 'string',
										'Deleted' => true,
										'ID' => 0,
										'InvoiceID' => 'string',
										'Rejected' => true,
										'RejectedLocationLicense' => 'string',
										'RejectedOn' => 'string',
										'RejectedReason' => 'string',
										'TransactionID' => 0,
										'UpdatedOn' => 'string',
									],
								],
								'Refund' => true,
								'SessionTime' => 0,
								'TransactionID' => 0,
							],
							'InvoiceID' => 'string',
							'Item' => [
								[
									'Deleted' => true,
									'Description' => 'string',
									'ID' => 0,
									'InventoryID' => 'string',
									'ManifestID' => 'string',
									'Quantity' => 0,
									'QuantityReceived' => 0,
									'SessionTime' => 0,
									'StopNumber' => 0,
									'TransactionID' => 0,
								],
							],
							'ItemsCount' => 0,
							'Links' => [
								[
									'Href' => 'string',
									'Method' => 'string',
									'Rel' => 'string',
								],
							],
							'LocationLicense' => 'string',
							'ManifestID' => 'string',
							'Name' => 'string',
							'ParkedTime' => 'string',
							'Phone' => 'string',
							'ResumedDirections' => 'string',
							'ResumedEstimatedArrival' => 'string',
							'ResumedEstimatedDeparture' => 'string',
							'ResumedTime' => 'string',
							'State' => 'string',
							'StopNumber' => 0,
							'TransporterParked' => true,
							'TransporterResumed' => true,
							'ZipCode' => 'string',
						],
					],
					'StopCount' => 0,
					'Street' => 'string',
					'ThirdPartyTransporter' => [
						'LicenseNumber' => 'string',
						'Name' => 'string',
					],
					'TotalItemCount' => 0,
					'TransactionID' => 0,
					'Type' => 'string',
					'UpdatedOn' => 'string',
					'Vehicle' => [
						'Description' => 'string',
						'ID' => 'string',
					],
					'Zip' => 'string',
				],
				'Sessiontime' => 0,
				'TransactionID' => 0,
			]
			);
		});
		$a->get('/v1/manifest/thirdparty/{id}', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				'Inventory' => [
					[
						'ActiveSampleInventoryID' => 'string',
						'Deleted' => true,
						'Destroyed' => true,
						'Dried' => true,
						'ExpirationDate' => 'string',
						'ExternalID' => 'string',
						'ID' => 'string',
						'Initial' => true,
						'InventoryParentID' => [
							'string',
						],
						'InventoryType' => 0,
						'IsSample' => true,
						'LabSample' => [
							[
								'Amount' => 0,
								'AmountUsed' => 0,
								'CertOfAnalysisHyperlink' => 'string',
								'Deleted' => true,
								'ID' => 0,
								'InventoryID' => 'string',
								'InventoryType' => 0,
								'LabLicense' => 'string',
								'LocationLicense' => 'string',
								'Medical' => true,
								'MedicalGrade' => true,
								'ParentID' => 'string',
								'QualityControlDataHyperlink' => 'string',
								'Result' => 'string',
								'RnD' => true,
								'SampleUse' => 'string',
								'SessionTime' => 0,
								'TestingData' => [
									[
										'LabAnalysisTime' => '2024-01-31T10:00:00.000Z',
										'SamplePreparationTime' => '2024-01-31T10:00:00.000Z',
										'TestID' => 0,
										'TestResult' => [
											[
												'LabProvided' => true,
												'TestPanel' => 'string',
												'TestPass' => true,
												'TestValue' => 0,
												'TransactionID' => 0,
											],
										],
									],
								],
								'TransactionID' => 0,
							],
						],
						'LocationLicense' => 'string',
						'MedUsableWeight' => 0,
						'Medicated' => true,
						'NetPackageWeight' => 0,
						'PackageDate' => 'string',
						'ProductName' => 'string',
						'ProductionBatchID' => 0,
						'QAStatus' => 'string',
						'RecUsableWeight' => 0,
						'RemainingAmount' => 0,
						'Remediated' => true,
						'RemediationCount' => 0,
						'RemediationEligible' => true,
						'Restocked' => true,
						'Rework' => true,
						'RoomID' => 0,
						'Seized' => true,
						'SessionTime' => 0,
						'SourcePlantID' => 'string',
						'StateProductIdentifier' => 'string',
						'Status' => 'string',
						'Strain' => 'string',
						'TransactionID' => 0,
						'UOM' => 'string',
						'UnitBased' => true,
						'UsableWeight' => 0,
					],
				],
				'Manifest' => [
					'City' => 'string',
					'Completed' => true,
					'CompletionDate' => 'string',
					'CreatedOn' => 'string',
					'Deleted' => true,
					'Driver' => [
						[
							'DateofBirth' => 'string',
							'ID' => 0,
							'Name' => 'string',
						],
					],
					'DriverArrived' => true,
					'InTransit' => true,
					'IsAccepted' => true,
					'IsParked' => true,
					'LicenseNumber' => 'string',
					'Links' => [
						[
							'Href' => 'string',
							'Method' => 'string',
							'Rel' => 'string',
						],
					],
					'ManifestID' => 'string',
					'Name' => 'string',
					'Phone' => 'string',
					'Received' => true,
					'SessionTime' => 0,
					'State' => 'string',
					'Stop' => [
						[
							'ApproximateArrival' => '2024-01-31T10:00:00.000Z',
							'ApproximateDeparture' => '2024-01-31T10:00:00.000Z',
							'ApproximateRoute' => 'string',
							'City' => 'string',
							'DriverArrived' => true,
							'DriverArrivedTime' => 'string',
							'ID' => 0,
							'Invoice' => [
								'Accepted' => true,
								'BuyerLocationLicense' => 'string',
								'Deleted' => true,
								'Inventory' => [
									[
										'Amount' => 0,
										'Deleted' => true,
										'ID' => 0,
										'InventoryID' => 'string',
										'InvoiceID' => 'string',
										'Price' => 0,
										'TransactionID' => 0,
									],
								],
								'InvoiceID' => 'string',
								'LocationLicense' => 'string',
								'Payment' => [
									[
										'Accepted' => true,
										'AcceptedLocationID' => 'string',
										'AcceptedOn' => 'string',
										'Amount' => 0,
										'BuyerLocationLicense' => 'string',
										'BuyerUserID' => 0,
										'CreatedOn' => 'string',
										'Deleted' => true,
										'ID' => 0,
										'InvoiceID' => 'string',
										'Rejected' => true,
										'RejectedLocationLicense' => 'string',
										'RejectedOn' => 'string',
										'RejectedReason' => 'string',
										'TransactionID' => 0,
										'UpdatedOn' => 'string',
									],
								],
								'Refund' => true,
								'SessionTime' => 0,
								'TransactionID' => 0,
							],
							'InvoiceID' => 'string',
							'Item' => [
								[
									'Deleted' => true,
									'Description' => 'string',
									'ID' => 0,
									'InventoryID' => 'string',
									'ManifestID' => 'string',
									'Quantity' => 0,
									'QuantityReceived' => 0,
									'SessionTime' => 0,
									'StopNumber' => 0,
									'TransactionID' => 0,
								],
							],
							'ItemsCount' => 0,
							'Links' => [
								[
									'Href' => 'string',
									'Method' => 'string',
									'Rel' => 'string',
								],
							],
							'LocationLicense' => 'string',
							'ManifestID' => 'string',
							'Name' => 'string',
							'ParkedTime' => 'string',
							'Phone' => 'string',
							'ResumedDirections' => 'string',
							'ResumedEstimatedArrival' => 'string',
							'ResumedEstimatedDeparture' => 'string',
							'ResumedTime' => 'string',
							'State' => 'string',
							'StopNumber' => 0,
							'TransporterParked' => true,
							'TransporterResumed' => true,
							'ZipCode' => 'string',
						],
					],
					'StopCount' => 0,
					'Street' => 'string',
					'ThirdPartyTransporter' => [
						'LicenseNumber' => 'string',
						'Name' => 'string',
					],
					'TotalItemCount' => 0,
					'TransactionID' => 0,
					'Type' => 'string',
					'UpdatedOn' => 'string',
					'Vehicle' => [
						'Description' => 'string',
						'ID' => 'string',
					],
					'Zip' => 'string',
				],
				'Sessiontime' => 0,
				'TransactionID' => 0,
			]
			);
		});
		$a->patch('/v1/manifest/thirdparty/{id}', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				'Inventory' => [
					[
						'ActiveSampleInventoryID' => 'string',
						'Deleted' => true,
						'Destroyed' => true,
						'Dried' => true,
						'ExpirationDate' => 'string',
						'ExternalID' => 'string',
						'ID' => 'string',
						'Initial' => true,
						'InventoryParentID' => [
							'string',
						],
						'InventoryType' => 0,
						'IsSample' => true,
						'LabSample' => [
							[
								'Amount' => 0,
								'AmountUsed' => 0,
								'CertOfAnalysisHyperlink' => 'string',
								'Deleted' => true,
								'ID' => 0,
								'InventoryID' => 'string',
								'InventoryType' => 0,
								'LabLicense' => 'string',
								'LocationLicense' => 'string',
								'Medical' => true,
								'MedicalGrade' => true,
								'ParentID' => 'string',
								'QualityControlDataHyperlink' => 'string',
								'Result' => 'string',
								'RnD' => true,
								'SampleUse' => 'string',
								'SessionTime' => 0,
								'TestingData' => [
									[
										'LabAnalysisTime' => '2024-01-31T10:00:00.000Z',
										'SamplePreparationTime' => '2024-01-31T10:00:00.000Z',
										'TestID' => 0,
										'TestResult' => [
											[
												'LabProvided' => true,
												'TestPanel' => 'string',
												'TestPass' => true,
												'TestValue' => 0,
												'TransactionID' => 0,
											],
										],
									],
								],
								'TransactionID' => 0,
							],
						],
						'LocationLicense' => 'string',
						'MedUsableWeight' => 0,
						'Medicated' => true,
						'NetPackageWeight' => 0,
						'PackageDate' => 'string',
						'ProductName' => 'string',
						'ProductionBatchID' => 0,
						'QAStatus' => 'string',
						'RecUsableWeight' => 0,
						'RemainingAmount' => 0,
						'Remediated' => true,
						'RemediationCount' => 0,
						'RemediationEligible' => true,
						'Restocked' => true,
						'Rework' => true,
						'RoomID' => 0,
						'Seized' => true,
						'SessionTime' => 0,
						'SourcePlantID' => 'string',
						'StateProductIdentifier' => 'string',
						'Status' => 'string',
						'Strain' => 'string',
						'TransactionID' => 0,
						'UOM' => 'string',
						'UnitBased' => true,
						'UsableWeight' => 0,
					],
				],
				'Manifest' => [
					'City' => 'string',
					'Completed' => true,
					'CompletionDate' => 'string',
					'CreatedOn' => 'string',
					'Deleted' => true,
					'Driver' => [
						[
							'DateofBirth' => 'string',
							'ID' => 0,
							'Name' => 'string',
						],
					],
					'DriverArrived' => true,
					'InTransit' => true,
					'IsAccepted' => true,
					'IsParked' => true,
					'LicenseNumber' => 'string',
					'Links' => [
						[
							'Href' => 'string',
							'Method' => 'string',
							'Rel' => 'string',
						],
					],
					'ManifestID' => 'string',
					'Name' => 'string',
					'Phone' => 'string',
					'Received' => true,
					'SessionTime' => 0,
					'State' => 'string',
					'Stop' => [
						[
							'ApproximateArrival' => '2024-01-31T10:00:00.000Z',
							'ApproximateDeparture' => '2024-01-31T10:00:00.000Z',
							'ApproximateRoute' => 'string',
							'City' => 'string',
							'DriverArrived' => true,
							'DriverArrivedTime' => 'string',
							'ID' => 0,
							'Invoice' => [
								'Accepted' => true,
								'BuyerLocationLicense' => 'string',
								'Deleted' => true,
								'Inventory' => [
									[
										'Amount' => 0,
										'Deleted' => true,
										'ID' => 0,
										'InventoryID' => 'string',
										'InvoiceID' => 'string',
										'Price' => 0,
										'TransactionID' => 0,
									],
								],
								'InvoiceID' => 'string',
								'LocationLicense' => 'string',
								'Payment' => [
									[
										'Accepted' => true,
										'AcceptedLocationID' => 'string',
										'AcceptedOn' => 'string',
										'Amount' => 0,
										'BuyerLocationLicense' => 'string',
										'BuyerUserID' => 0,
										'CreatedOn' => 'string',
										'Deleted' => true,
										'ID' => 0,
										'InvoiceID' => 'string',
										'Rejected' => true,
										'RejectedLocationLicense' => 'string',
										'RejectedOn' => 'string',
										'RejectedReason' => 'string',
										'TransactionID' => 0,
										'UpdatedOn' => 'string',
									],
								],
								'Refund' => true,
								'SessionTime' => 0,
								'TransactionID' => 0,
							],
							'InvoiceID' => 'string',
							'Item' => [
								[
									'Deleted' => true,
									'Description' => 'string',
									'ID' => 0,
									'InventoryID' => 'string',
									'ManifestID' => 'string',
									'Quantity' => 0,
									'QuantityReceived' => 0,
									'SessionTime' => 0,
									'StopNumber' => 0,
									'TransactionID' => 0,
								],
							],
							'ItemsCount' => 0,
							'Links' => [
								[
									'Href' => 'string',
									'Method' => 'string',
									'Rel' => 'string',
								],
							],
							'LocationLicense' => 'string',
							'ManifestID' => 'string',
							'Name' => 'string',
							'ParkedTime' => 'string',
							'Phone' => 'string',
							'ResumedDirections' => 'string',
							'ResumedEstimatedArrival' => 'string',
							'ResumedEstimatedDeparture' => 'string',
							'ResumedTime' => 'string',
							'State' => 'string',
							'StopNumber' => 0,
							'TransporterParked' => true,
							'TransporterResumed' => true,
							'ZipCode' => 'string',
						],
					],
					'StopCount' => 0,
					'Street' => 'string',
					'ThirdPartyTransporter' => [
						'LicenseNumber' => 'string',
						'Name' => 'string',
					],
					'TotalItemCount' => 0,
					'TransactionID' => 0,
					'Type' => 'string',
					'UpdatedOn' => 'string',
					'Vehicle' => [
						'Description' => 'string',
						'ID' => 'string',
					],
					'Zip' => 'string',
				],
				'Sessiontime' => 0,
				'TransactionID' => 0,
			]

			);
		});
		$a->put('/v1/manifest/thirdparty/{id}', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				'Inventory' => [
					[
						'ActiveSampleInventoryID' => 'string',
						'Deleted' => true,
						'Destroyed' => true,
						'Dried' => true,
						'ExpirationDate' => 'string',
						'ExternalID' => 'string',
						'ID' => 'string',
						'Initial' => true,
						'InventoryParentID' => [
							'string',
						],
						'InventoryType' => 0,
						'IsSample' => true,
						'LabSample' => [
							[
								'Amount' => 0,
								'AmountUsed' => 0,
								'CertOfAnalysisHyperlink' => 'string',
								'Deleted' => true,
								'ID' => 0,
								'InventoryID' => 'string',
								'InventoryType' => 0,
								'LabLicense' => 'string',
								'LocationLicense' => 'string',
								'Medical' => true,
								'MedicalGrade' => true,
								'ParentID' => 'string',
								'QualityControlDataHyperlink' => 'string',
								'Result' => 'string',
								'RnD' => true,
								'SampleUse' => 'string',
								'SessionTime' => 0,
								'TestingData' => [
									[
										'LabAnalysisTime' => '2024-01-31T10:00:00.000Z',
										'SamplePreparationTime' => '2024-01-31T10:00:00.000Z',
										'TestID' => 0,
										'TestResult' => [
											[
												'LabProvided' => true,
												'TestPanel' => 'string',
												'TestPass' => true,
												'TestValue' => 0,
												'TransactionID' => 0,
											],
										],
									],
								],
								'TransactionID' => 0,
							],
						],
						'LocationLicense' => 'string',
						'MedUsableWeight' => 0,
						'Medicated' => true,
						'NetPackageWeight' => 0,
						'PackageDate' => 'string',
						'ProductName' => 'string',
						'ProductionBatchID' => 0,
						'QAStatus' => 'string',
						'RecUsableWeight' => 0,
						'RemainingAmount' => 0,
						'Remediated' => true,
						'RemediationCount' => 0,
						'RemediationEligible' => true,
						'Restocked' => true,
						'Rework' => true,
						'RoomID' => 0,
						'Seized' => true,
						'SessionTime' => 0,
						'SourcePlantID' => 'string',
						'StateProductIdentifier' => 'string',
						'Status' => 'string',
						'Strain' => 'string',
						'TransactionID' => 0,
						'UOM' => 'string',
						'UnitBased' => true,
						'UsableWeight' => 0,
					],
				],
				'Manifest' => [
					'City' => 'string',
					'Completed' => true,
					'CompletionDate' => 'string',
					'CreatedOn' => 'string',
					'Deleted' => true,
					'Driver' => [
						[
							'DateofBirth' => 'string',
							'ID' => 0,
							'Name' => 'string',
						],
					],
					'DriverArrived' => true,
					'InTransit' => true,
					'IsAccepted' => true,
					'IsParked' => true,
					'LicenseNumber' => 'string',
					'Links' => [
						[
							'Href' => 'string',
							'Method' => 'string',
							'Rel' => 'string',
						],
					],
					'ManifestID' => 'string',
					'Name' => 'string',
					'Phone' => 'string',
					'Received' => true,
					'SessionTime' => 0,
					'State' => 'string',
					'Stop' => [
						[
							'ApproximateArrival' => '2024-01-31T10:00:00.000Z',
							'ApproximateDeparture' => '2024-01-31T10:00:00.000Z',
							'ApproximateRoute' => 'string',
							'City' => 'string',
							'DriverArrived' => true,
							'DriverArrivedTime' => 'string',
							'ID' => 0,
							'Invoice' => [
								'Accepted' => true,
								'BuyerLocationLicense' => 'string',
								'Deleted' => true,
								'Inventory' => [
									[
										'Amount' => 0,
										'Deleted' => true,
										'ID' => 0,
										'InventoryID' => 'string',
										'InvoiceID' => 'string',
										'Price' => 0,
										'TransactionID' => 0,
									],
								],
								'InvoiceID' => 'string',
								'LocationLicense' => 'string',
								'Payment' => [
									[
										'Accepted' => true,
										'AcceptedLocationID' => 'string',
										'AcceptedOn' => 'string',
										'Amount' => 0,
										'BuyerLocationLicense' => 'string',
										'BuyerUserID' => 0,
										'CreatedOn' => 'string',
										'Deleted' => true,
										'ID' => 0,
										'InvoiceID' => 'string',
										'Rejected' => true,
										'RejectedLocationLicense' => 'string',
										'RejectedOn' => 'string',
										'RejectedReason' => 'string',
										'TransactionID' => 0,
										'UpdatedOn' => 'string',
									],
								],
								'Refund' => true,
								'SessionTime' => 0,
								'TransactionID' => 0,
							],
							'InvoiceID' => 'string',
							'Item' => [
								[
									'Deleted' => true,
									'Description' => 'string',
									'ID' => 0,
									'InventoryID' => 'string',
									'ManifestID' => 'string',
									'Quantity' => 0,
									'QuantityReceived' => 0,
									'SessionTime' => 0,
									'StopNumber' => 0,
									'TransactionID' => 0,
								],
							],
							'ItemsCount' => 0,
							'Links' => [
								[
									'Href' => 'string',
									'Method' => 'string',
									'Rel' => 'string',
								],
							],
							'LocationLicense' => 'string',
							'ManifestID' => 'string',
							'Name' => 'string',
							'ParkedTime' => 'string',
							'Phone' => 'string',
							'ResumedDirections' => 'string',
							'ResumedEstimatedArrival' => 'string',
							'ResumedEstimatedDeparture' => 'string',
							'ResumedTime' => 'string',
							'State' => 'string',
							'StopNumber' => 0,
							'TransporterParked' => true,
							'TransporterResumed' => true,
							'ZipCode' => 'string',
						],
					],
					'StopCount' => 0,
					'Street' => 'string',
					'ThirdPartyTransporter' => [
						'LicenseNumber' => 'string',
						'Name' => 'string',
					],
					'TotalItemCount' => 0,
					'TransactionID' => 0,
					'Type' => 'string',
					'UpdatedOn' => 'string',
					'Vehicle' => [
						'Description' => 'string',
						'ID' => 'string',
					],
					'Zip' => 'string',
				],
				'Sessiontime' => 0,
				'TransactionID' => 0,
			]
			);
		});
		$a->put('/v1/manifest/thirdparty/{id}/accept', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				'Manifest' => [
					'City' => 'string',
					'Completed' => true,
					'CompletionDate' => 'string',
					'CreatedOn' => 'string',
					'Deleted' => true,
					'Driver' => [
						[
							'DateofBirth' => 'string',
							'ID' => 0,
							'Name' => 'string',
						],
					],
					'DriverArrived' => true,
					'InTransit' => true,
					'IsAccepted' => true,
					'IsParked' => true,
					'LicenseNumber' => 'string',
					'Links' => [
						[
							'Href' => 'string',
							'Method' => 'string',
							'Rel' => 'string',
						],
					],
					'ManifestID' => 'string',
					'Name' => 'string',
					'Phone' => 'string',
					'Received' => true,
					'SessionTime' => 0,
					'State' => 'string',
					'Stop' => [
						[
							'ApproximateArrival' => '2024-01-31T10:00:00.000Z',
							'ApproximateDeparture' => '2024-01-31T10:00:00.000Z',
							'ApproximateRoute' => 'string',
							'City' => 'string',
							'DriverArrived' => true,
							'DriverArrivedTime' => 'string',
							'ID' => 0,
							'Invoice' => [
								'Accepted' => true,
								'BuyerLocationLicense' => 'string',
								'Deleted' => true,
								'Inventory' => [
									[
										'Amount' => 0,
										'Deleted' => true,
										'ID' => 0,
										'InventoryID' => 'string',
										'InvoiceID' => 'string',
										'Price' => 0,
										'TransactionID' => 0,
									],
								],
								'InvoiceID' => 'string',
								'LocationLicense' => 'string',
								'Payment' => [
									[
										'Accepted' => true,
										'AcceptedLocationID' => 'string',
										'AcceptedOn' => 'string',
										'Amount' => 0,
										'BuyerLocationLicense' => 'string',
										'BuyerUserID' => 0,
										'CreatedOn' => 'string',
										'Deleted' => true,
										'ID' => 0,
										'InvoiceID' => 'string',
										'Rejected' => true,
										'RejectedLocationLicense' => 'string',
										'RejectedOn' => 'string',
										'RejectedReason' => 'string',
										'TransactionID' => 0,
										'UpdatedOn' => 'string',
									],
								],
								'Refund' => true,
								'SessionTime' => 0,
								'TransactionID' => 0,
							],
							'InvoiceID' => 'string',
							'Item' => [
								[
									'Deleted' => true,
									'Description' => 'string',
									'ID' => 0,
									'InventoryID' => 'string',
									'ManifestID' => 'string',
									'Quantity' => 0,
									'QuantityReceived' => 0,
									'SessionTime' => 0,
									'StopNumber' => 0,
									'TransactionID' => 0,
								],
							],
							'ItemsCount' => 0,
							'Links' => [
								[
									'Href' => 'string',
									'Method' => 'string',
									'Rel' => 'string',
								],
							],
							'LocationLicense' => 'string',
							'ManifestID' => 'string',
							'Name' => 'string',
							'ParkedTime' => 'string',
							'Phone' => 'string',
							'ResumedDirections' => 'string',
							'ResumedEstimatedArrival' => 'string',
							'ResumedEstimatedDeparture' => 'string',
							'ResumedTime' => 'string',
							'State' => 'string',
							'StopNumber' => 0,
							'TransporterParked' => true,
							'TransporterResumed' => true,
							'ZipCode' => 'string',
						],
					],
					'StopCount' => 0,
					'Street' => 'string',
					'ThirdPartyTransporter' => [
						'LicenseNumber' => 'string',
						'Name' => 'string',
					],
					'TotalItemCount' => 0,
					'TransactionID' => 0,
					'Type' => 'string',
					'UpdatedOn' => 'string',
					'Vehicle' => [
						'Description' => 'string',
						'ID' => 'string',
					],
					'Zip' => 'string',
				],
				'Sessiontime' => 0,
				'TransactionID' => 0,
			]
			);
		});
		$a->put('/v1/manifest/thirdparty/{id}/reject', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				'Inventory' => [
					[
						'ActiveSampleInventoryID' => 'string',
						'Deleted' => true,
						'Destroyed' => true,
						'Dried' => true,
						'ExpirationDate' => 'string',
						'ExternalID' => 'string',
						'ID' => 'string',
						'Initial' => true,
						'InventoryParentID' => [
							'string',
						],
						'InventoryType' => 0,
						'IsSample' => true,
						'LabSample' => [
							[
								'Amount' => 0,
								'AmountUsed' => 0,
								'CertOfAnalysisHyperlink' => 'string',
								'Deleted' => true,
								'ID' => 0,
								'InventoryID' => 'string',
								'InventoryType' => 0,
								'LabLicense' => 'string',
								'LocationLicense' => 'string',
								'Medical' => true,
								'MedicalGrade' => true,
								'ParentID' => 'string',
								'QualityControlDataHyperlink' => 'string',
								'Result' => 'string',
								'RnD' => true,
								'SampleUse' => 'string',
								'SessionTime' => 0,
								'TestingData' => [
									[
										'LabAnalysisTime' => '2024-01-31T10:00:00.000Z',
										'SamplePreparationTime' => '2024-01-31T10:00:00.000Z',
										'TestID' => 0,
										'TestResult' => [
											[
												'LabProvided' => true,
												'TestPanel' => 'string',
												'TestPass' => true,
												'TestValue' => 0,
												'TransactionID' => 0,
											],
										],
									],
								],
								'TransactionID' => 0,
							],
						],
						'LocationLicense' => 'string',
						'MedUsableWeight' => 0,
						'Medicated' => true,
						'NetPackageWeight' => 0,
						'PackageDate' => 'string',
						'ProductName' => 'string',
						'ProductionBatchID' => 0,
						'QAStatus' => 'string',
						'RecUsableWeight' => 0,
						'RemainingAmount' => 0,
						'Remediated' => true,
						'RemediationCount' => 0,
						'RemediationEligible' => true,
						'Restocked' => true,
						'Rework' => true,
						'RoomID' => 0,
						'Seized' => true,
						'SessionTime' => 0,
						'SourcePlantID' => 'string',
						'StateProductIdentifier' => 'string',
						'Status' => 'string',
						'Strain' => 'string',
						'TransactionID' => 0,
						'UOM' => 'string',
						'UnitBased' => true,
						'UsableWeight' => 0,
					],
				],
				'Manifest' => [
					'City' => 'string',
					'Completed' => true,
					'CompletionDate' => 'string',
					'CreatedOn' => 'string',
					'Deleted' => true,
					'Driver' => [
						[
							'DateofBirth' => 'string',
							'ID' => 0,
							'Name' => 'string',
						],
					],
					'DriverArrived' => true,
					'InTransit' => true,
					'IsAccepted' => true,
					'IsParked' => true,
					'LicenseNumber' => 'string',
					'Links' => [
						[
							'Href' => 'string',
							'Method' => 'string',
							'Rel' => 'string',
						],
					],
					'ManifestID' => 'string',
					'Name' => 'string',
					'Phone' => 'string',
					'Received' => true,
					'SessionTime' => 0,
					'State' => 'string',
					'Stop' => [
						[
							'ApproximateArrival' => '2024-01-31T10:00:00.000Z',
							'ApproximateDeparture' => '2024-01-31T10:00:00.000Z',
							'ApproximateRoute' => 'string',
							'City' => 'string',
							'DriverArrived' => true,
							'DriverArrivedTime' => 'string',
							'ID' => 0,
							'Invoice' => [
								'Accepted' => true,
								'BuyerLocationLicense' => 'string',
								'Deleted' => true,
								'Inventory' => [
									[
										'Amount' => 0,
										'Deleted' => true,
										'ID' => 0,
										'InventoryID' => 'string',
										'InvoiceID' => 'string',
										'Price' => 0,
										'TransactionID' => 0,
									],
								],
								'InvoiceID' => 'string',
								'LocationLicense' => 'string',
								'Payment' => [
									[
										'Accepted' => true,
										'AcceptedLocationID' => 'string',
										'AcceptedOn' => 'string',
										'Amount' => 0,
										'BuyerLocationLicense' => 'string',
										'BuyerUserID' => 0,
										'CreatedOn' => 'string',
										'Deleted' => true,
										'ID' => 0,
										'InvoiceID' => 'string',
										'Rejected' => true,
										'RejectedLocationLicense' => 'string',
										'RejectedOn' => 'string',
										'RejectedReason' => 'string',
										'TransactionID' => 0,
										'UpdatedOn' => 'string',
									],
								],
								'Refund' => true,
								'SessionTime' => 0,
								'TransactionID' => 0,
							],
							'InvoiceID' => 'string',
							'Item' => [
								[
									'Deleted' => true,
									'Description' => 'string',
									'ID' => 0,
									'InventoryID' => 'string',
									'ManifestID' => 'string',
									'Quantity' => 0,
									'QuantityReceived' => 0,
									'SessionTime' => 0,
									'StopNumber' => 0,
									'TransactionID' => 0,
								],
							],
							'ItemsCount' => 0,
							'Links' => [
								[
									'Href' => 'string',
									'Method' => 'string',
									'Rel' => 'string',
								],
							],
							'LocationLicense' => 'string',
							'ManifestID' => 'string',
							'Name' => 'string',
							'ParkedTime' => 'string',
							'Phone' => 'string',
							'ResumedDirections' => 'string',
							'ResumedEstimatedArrival' => 'string',
							'ResumedEstimatedDeparture' => 'string',
							'ResumedTime' => 'string',
							'State' => 'string',
							'StopNumber' => 0,
							'TransporterParked' => true,
							'TransporterResumed' => true,
							'ZipCode' => 'string',
						],
					],
					'StopCount' => 0,
					'Street' => 'string',
					'ThirdPartyTransporter' => [
						'LicenseNumber' => 'string',
						'Name' => 'string',
					],
					'TotalItemCount' => 0,
					'TransactionID' => 0,
					'Type' => 'string',
					'UpdatedOn' => 'string',
					'Vehicle' => [
						'Description' => 'string',
						'ID' => 'string',
					],
					'Zip' => 'string',
				],
				'Sessiontime' => 0,
				'TransactionID' => 0,
			]
			);
		});
		$a->put('/v1/manifest/thirdparty/{id}/stop/{stopnumber}/arrive', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				'Manifest' => [
					'City' => 'string',
					'Completed' => true,
					'CompletionDate' => 'string',
					'CreatedOn' => 'string',
					'Deleted' => true,
					'Driver' => [
						[
							'DateofBirth' => 'string',
							'ID' => 0,
							'Name' => 'string',
						],
					],
					'DriverArrived' => true,
					'InTransit' => true,
					'IsAccepted' => true,
					'IsParked' => true,
					'LicenseNumber' => 'string',
					'Links' => [
						[
							'Href' => 'string',
							'Method' => 'string',
							'Rel' => 'string',
						],
					],
					'ManifestID' => 'string',
					'Name' => 'string',
					'Phone' => 'string',
					'Received' => true,
					'SessionTime' => 0,
					'State' => 'string',
					'Stop' => [
						[
							'ApproximateArrival' => '2024-01-31T10:00:00.000Z',
							'ApproximateDeparture' => '2024-01-31T10:00:00.000Z',
							'ApproximateRoute' => 'string',
							'City' => 'string',
							'DriverArrived' => true,
							'DriverArrivedTime' => 'string',
							'ID' => 0,
							'Invoice' => [
								'Accepted' => true,
								'BuyerLocationLicense' => 'string',
								'Deleted' => true,
								'Inventory' => [
									[
										'Amount' => 0,
										'Deleted' => true,
										'ID' => 0,
										'InventoryID' => 'string',
										'InvoiceID' => 'string',
										'Price' => 0,
										'TransactionID' => 0,
									],
								],
								'InvoiceID' => 'string',
								'LocationLicense' => 'string',
								'Payment' => [
									[
										'Accepted' => true,
										'AcceptedLocationID' => 'string',
										'AcceptedOn' => 'string',
										'Amount' => 0,
										'BuyerLocationLicense' => 'string',
										'BuyerUserID' => 0,
										'CreatedOn' => 'string',
										'Deleted' => true,
										'ID' => 0,
										'InvoiceID' => 'string',
										'Rejected' => true,
										'RejectedLocationLicense' => 'string',
										'RejectedOn' => 'string',
										'RejectedReason' => 'string',
										'TransactionID' => 0,
										'UpdatedOn' => 'string',
									],
								],
								'Refund' => true,
								'SessionTime' => 0,
								'TransactionID' => 0,
							],
							'InvoiceID' => 'string',
							'Item' => [
								[
									'Deleted' => true,
									'Description' => 'string',
									'ID' => 0,
									'InventoryID' => 'string',
									'ManifestID' => 'string',
									'Quantity' => 0,
									'QuantityReceived' => 0,
									'SessionTime' => 0,
									'StopNumber' => 0,
									'TransactionID' => 0,
								],
							],
							'ItemsCount' => 0,
							'Links' => [
								[
									'Href' => 'string',
									'Method' => 'string',
									'Rel' => 'string',
								],
							],
							'LocationLicense' => 'string',
							'ManifestID' => 'string',
							'Name' => 'string',
							'ParkedTime' => 'string',
							'Phone' => 'string',
							'ResumedDirections' => 'string',
							'ResumedEstimatedArrival' => 'string',
							'ResumedEstimatedDeparture' => 'string',
							'ResumedTime' => 'string',
							'State' => 'string',
							'StopNumber' => 0,
							'TransporterParked' => true,
							'TransporterResumed' => true,
							'ZipCode' => 'string',
						],
					],
					'StopCount' => 0,
					'Street' => 'string',
					'ThirdPartyTransporter' => [
						'LicenseNumber' => 'string',
						'Name' => 'string',
					],
					'TotalItemCount' => 0,
					'TransactionID' => 0,
					'Type' => 'string',
					'UpdatedOn' => 'string',
					'Vehicle' => [
						'Description' => 'string',
						'ID' => 'string',
					],
					'Zip' => 'string',
				],
				'Sessiontime' => 0,
				'TransactionID' => 0,
			]

			);
		});
		$a->get('/v1/manifest/{id}', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				'Inventory' => [
					[
						'ActiveSampleInventoryID' => 'string',
						'Deleted' => true,
						'Destroyed' => true,
						'Dried' => true,
						'ExpirationDate' => 'string',
						'ExternalID' => 'string',
						'ID' => 'string',
						'Initial' => true,
						'InventoryParentID' => [
							'string',
						],
						'InventoryType' => 0,
						'IsSample' => true,
						'LabSample' => [
							[
								'Amount' => 0,
								'AmountUsed' => 0,
								'CertOfAnalysisHyperlink' => 'string',
								'Deleted' => true,
								'ID' => 0,
								'InventoryID' => 'string',
								'InventoryType' => 0,
								'LabLicense' => 'string',
								'LocationLicense' => 'string',
								'Medical' => true,
								'MedicalGrade' => true,
								'ParentID' => 'string',
								'QualityControlDataHyperlink' => 'string',
								'Result' => 'string',
								'RnD' => true,
								'SampleUse' => 'string',
								'SessionTime' => 0,
								'TestingData' => [
									[
										'LabAnalysisTime' => '2024-01-31T10:00:00.000Z',
										'SamplePreparationTime' => '2024-01-31T10:00:00.000Z',
										'TestID' => 0,
										'TestResult' => [
											[
												'LabProvided' => true,
												'TestPanel' => 'string',
												'TestPass' => true,
												'TestValue' => 0,
												'TransactionID' => 0,
											],
										],
									],
								],
								'TransactionID' => 0,
							],
						],
						'LocationLicense' => 'string',
						'MedUsableWeight' => 0,
						'Medicated' => true,
						'NetPackageWeight' => 0,
						'PackageDate' => 'string',
						'ProductName' => 'string',
						'ProductionBatchID' => 0,
						'QAStatus' => 'string',
						'RecUsableWeight' => 0,
						'RemainingAmount' => 0,
						'Remediated' => true,
						'RemediationCount' => 0,
						'RemediationEligible' => true,
						'Restocked' => true,
						'Rework' => true,
						'RoomID' => 0,
						'Seized' => true,
						'SessionTime' => 0,
						'SourcePlantID' => 'string',
						'StateProductIdentifier' => 'string',
						'Status' => 'string',
						'Strain' => 'string',
						'TransactionID' => 0,
						'UOM' => 'string',
						'UnitBased' => true,
						'UsableWeight' => 0,
					],
				],
				'Manifest' => [
					'City' => 'string',
					'Completed' => true,
					'CompletionDate' => 'string',
					'CreatedOn' => 'string',
					'Deleted' => true,
					'Driver' => [
						[
							'DateofBirth' => 'string',
							'ID' => 0,
							'Name' => 'string',
						],
					],
					'DriverArrived' => true,
					'InTransit' => true,
					'IsAccepted' => true,
					'IsParked' => true,
					'LicenseNumber' => 'string',
					'Links' => [
						[
							'Href' => 'string',
							'Method' => 'string',
							'Rel' => 'string',
						],
					],
					'ManifestID' => 'string',
					'Name' => 'string',
					'Phone' => 'string',
					'Received' => true,
					'SessionTime' => 0,
					'State' => 'string',
					'Stop' => [
						[
							'ApproximateArrival' => '2024-01-31T10:00:00.000Z',
							'ApproximateDeparture' => '2024-01-31T10:00:00.000Z',
							'ApproximateRoute' => 'string',
							'City' => 'string',
							'DriverArrived' => true,
							'DriverArrivedTime' => 'string',
							'ID' => 0,
							'Invoice' => [
								'Accepted' => true,
								'BuyerLocationLicense' => 'string',
								'Deleted' => true,
								'Inventory' => [
									[
										'Amount' => 0,
										'Deleted' => true,
										'ID' => 0,
										'InventoryID' => 'string',
										'InvoiceID' => 'string',
										'Price' => 0,
										'TransactionID' => 0,
									],
								],
								'InvoiceID' => 'string',
								'LocationLicense' => 'string',
								'Payment' => [
									[
										'Accepted' => true,
										'AcceptedLocationID' => 'string',
										'AcceptedOn' => 'string',
										'Amount' => 0,
										'BuyerLocationLicense' => 'string',
										'BuyerUserID' => 0,
										'CreatedOn' => 'string',
										'Deleted' => true,
										'ID' => 0,
										'InvoiceID' => 'string',
										'Rejected' => true,
										'RejectedLocationLicense' => 'string',
										'RejectedOn' => 'string',
										'RejectedReason' => 'string',
										'TransactionID' => 0,
										'UpdatedOn' => 'string',
									],
								],
								'Refund' => true,
								'SessionTime' => 0,
								'TransactionID' => 0,
							],
							'InvoiceID' => 'string',
							'Item' => [
								[
									'Deleted' => true,
									'Description' => 'string',
									'ID' => 0,
									'InventoryID' => 'string',
									'ManifestID' => 'string',
									'Quantity' => 0,
									'QuantityReceived' => 0,
									'SessionTime' => 0,
									'StopNumber' => 0,
									'TransactionID' => 0,
								],
							],
							'ItemsCount' => 0,
							'Links' => [
								[
									'Href' => 'string',
									'Method' => 'string',
									'Rel' => 'string',
								],
							],
							'LocationLicense' => 'string',
							'ManifestID' => 'string',
							'Name' => 'string',
							'ParkedTime' => 'string',
							'Phone' => 'string',
							'ResumedDirections' => 'string',
							'ResumedEstimatedArrival' => 'string',
							'ResumedEstimatedDeparture' => 'string',
							'ResumedTime' => 'string',
							'State' => 'string',
							'StopNumber' => 0,
							'TransporterParked' => true,
							'TransporterResumed' => true,
							'ZipCode' => 'string',
						],
					],
					'StopCount' => 0,
					'Street' => 'string',
					'ThirdPartyTransporter' => [
						'LicenseNumber' => 'string',
						'Name' => 'string',
					],
					'TotalItemCount' => 0,
					'TransactionID' => 0,
					'Type' => 'string',
					'UpdatedOn' => 'string',
					'Vehicle' => [
						'Description' => 'string',
						'ID' => 'string',
					],
					'Zip' => 'string',
				],
				'Sessiontime' => 0,
				'TransactionID' => 0,
			]
			);
		});
		$a->put('/v1/manifest/{id}', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				'Inventory' => [
					[
						'ActiveSampleInventoryID' => 'string',
						'Deleted' => true,
						'Destroyed' => true,
						'Dried' => true,
						'ExpirationDate' => 'string',
						'ExternalID' => 'string',
						'ID' => 'string',
						'Initial' => true,
						'InventoryParentID' => [
							'string',
						],
						'InventoryType' => 0,
						'IsSample' => true,
						'LabSample' => [
							[
								'Amount' => 0,
								'AmountUsed' => 0,
								'CertOfAnalysisHyperlink' => 'string',
								'Deleted' => true,
								'ID' => 0,
								'InventoryID' => 'string',
								'InventoryType' => 0,
								'LabLicense' => 'string',
								'LocationLicense' => 'string',
								'Medical' => true,
								'MedicalGrade' => true,
								'ParentID' => 'string',
								'QualityControlDataHyperlink' => 'string',
								'Result' => 'string',
								'RnD' => true,
								'SampleUse' => 'string',
								'SessionTime' => 0,
								'TestingData' => [
									[
										'LabAnalysisTime' => '2024-01-31T10:00:00.000Z',
										'SamplePreparationTime' => '2024-01-31T10:00:00.000Z',
										'TestID' => 0,
										'TestResult' => [
											[
												'LabProvided' => true,
												'TestPanel' => 'string',
												'TestPass' => true,
												'TestValue' => 0,
												'TransactionID' => 0,
											],
										],
									],
								],
								'TransactionID' => 0,
							],
						],
						'LocationLicense' => 'string',
						'MedUsableWeight' => 0,
						'Medicated' => true,
						'NetPackageWeight' => 0,
						'PackageDate' => 'string',
						'ProductName' => 'string',
						'ProductionBatchID' => 0,
						'QAStatus' => 'string',
						'RecUsableWeight' => 0,
						'RemainingAmount' => 0,
						'Remediated' => true,
						'RemediationCount' => 0,
						'RemediationEligible' => true,
						'Restocked' => true,
						'Rework' => true,
						'RoomID' => 0,
						'Seized' => true,
						'SessionTime' => 0,
						'SourcePlantID' => 'string',
						'StateProductIdentifier' => 'string',
						'Status' => 'string',
						'Strain' => 'string',
						'TransactionID' => 0,
						'UOM' => 'string',
						'UnitBased' => true,
						'UsableWeight' => 0,
					],
				],
				'Manifest' => [
					'City' => 'string',
					'Completed' => true,
					'CompletionDate' => 'string',
					'CreatedOn' => 'string',
					'Deleted' => true,
					'Driver' => [
						[
							'DateofBirth' => 'string',
							'ID' => 0,
							'Name' => 'string',
						],
					],
					'DriverArrived' => true,
					'InTransit' => true,
					'IsAccepted' => true,
					'IsParked' => true,
					'LicenseNumber' => 'string',
					'Links' => [
						[
							'Href' => 'string',
							'Method' => 'string',
							'Rel' => 'string',
						],
					],
					'ManifestID' => 'string',
					'Name' => 'string',
					'Phone' => 'string',
					'Received' => true,
					'SessionTime' => 0,
					'State' => 'string',
					'Stop' => [
						[
							'ApproximateArrival' => '2024-01-31T10:00:00.000Z',
							'ApproximateDeparture' => '2024-01-31T10:00:00.000Z',
							'ApproximateRoute' => 'string',
							'City' => 'string',
							'DriverArrived' => true,
							'DriverArrivedTime' => 'string',
							'ID' => 0,
							'Invoice' => [
								'Accepted' => true,
								'BuyerLocationLicense' => 'string',
								'Deleted' => true,
								'Inventory' => [
									[
										'Amount' => 0,
										'Deleted' => true,
										'ID' => 0,
										'InventoryID' => 'string',
										'InvoiceID' => 'string',
										'Price' => 0,
										'TransactionID' => 0,
									],
								],
								'InvoiceID' => 'string',
								'LocationLicense' => 'string',
								'Payment' => [
									[
										'Accepted' => true,
										'AcceptedLocationID' => 'string',
										'AcceptedOn' => 'string',
										'Amount' => 0,
										'BuyerLocationLicense' => 'string',
										'BuyerUserID' => 0,
										'CreatedOn' => 'string',
										'Deleted' => true,
										'ID' => 0,
										'InvoiceID' => 'string',
										'Rejected' => true,
										'RejectedLocationLicense' => 'string',
										'RejectedOn' => 'string',
										'RejectedReason' => 'string',
										'TransactionID' => 0,
										'UpdatedOn' => 'string',
									],
								],
								'Refund' => true,
								'SessionTime' => 0,
								'TransactionID' => 0,
							],
							'InvoiceID' => 'string',
							'Item' => [
								[
									'Deleted' => true,
									'Description' => 'string',
									'ID' => 0,
									'InventoryID' => 'string',
									'ManifestID' => 'string',
									'Quantity' => 0,
									'QuantityReceived' => 0,
									'SessionTime' => 0,
									'StopNumber' => 0,
									'TransactionID' => 0,
								],
							],
							'ItemsCount' => 0,
							'Links' => [
								[
									'Href' => 'string',
									'Method' => 'string',
									'Rel' => 'string',
								],
							],
							'LocationLicense' => 'string',
							'ManifestID' => 'string',
							'Name' => 'string',
							'ParkedTime' => 'string',
							'Phone' => 'string',
							'ResumedDirections' => 'string',
							'ResumedEstimatedArrival' => 'string',
							'ResumedEstimatedDeparture' => 'string',
							'ResumedTime' => 'string',
							'State' => 'string',
							'StopNumber' => 0,
							'TransporterParked' => true,
							'TransporterResumed' => true,
							'ZipCode' => 'string',
						],
					],
					'StopCount' => 0,
					'Street' => 'string',
					'ThirdPartyTransporter' => [
						'LicenseNumber' => 'string',
						'Name' => 'string',
					],
					'TotalItemCount' => 0,
					'TransactionID' => 0,
					'Type' => 'string',
					'UpdatedOn' => 'string',
					'Vehicle' => [
						'Description' => 'string',
						'ID' => 'string',
					],
					'Zip' => 'string',
				],
				'Sessiontime' => 0,
				'TransactionID' => 0,
			]
			);
		});
		$a->put('/v1/manifest/{id}/stop/{stopnumber}/arrive', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				'Manifest' => [
					'City' => 'string',
					'Completed' => true,
					'CompletionDate' => 'string',
					'CreatedOn' => 'string',
					'Deleted' => true,
					'Driver' => [
						[
							'DateofBirth' => 'string',
							'ID' => 0,
							'Name' => 'string',
						],
					],
					'DriverArrived' => true,
					'InTransit' => true,
					'IsAccepted' => true,
					'IsParked' => true,
					'LicenseNumber' => 'string',
					'Links' => [
						[
							'Href' => 'string',
							'Method' => 'string',
							'Rel' => 'string',
						],
					],
					'ManifestID' => 'string',
					'Name' => 'string',
					'Phone' => 'string',
					'Received' => true,
					'SessionTime' => 0,
					'State' => 'string',
					'Stop' => [
						[
							'ApproximateArrival' => '2024-01-31T10:00:00.000Z',
							'ApproximateDeparture' => '2024-01-31T10:00:00.000Z',
							'ApproximateRoute' => 'string',
							'City' => 'string',
							'DriverArrived' => true,
							'DriverArrivedTime' => 'string',
							'ID' => 0,
							'Invoice' => [
								'Accepted' => true,
								'BuyerLocationLicense' => 'string',
								'Deleted' => true,
								'Inventory' => [
									[
										'Amount' => 0,
										'Deleted' => true,
										'ID' => 0,
										'InventoryID' => 'string',
										'InvoiceID' => 'string',
										'Price' => 0,
										'TransactionID' => 0,
									],
								],
								'InvoiceID' => 'string',
								'LocationLicense' => 'string',
								'Payment' => [
									[
										'Accepted' => true,
										'AcceptedLocationID' => 'string',
										'AcceptedOn' => 'string',
										'Amount' => 0,
										'BuyerLocationLicense' => 'string',
										'BuyerUserID' => 0,
										'CreatedOn' => 'string',
										'Deleted' => true,
										'ID' => 0,
										'InvoiceID' => 'string',
										'Rejected' => true,
										'RejectedLocationLicense' => 'string',
										'RejectedOn' => 'string',
										'RejectedReason' => 'string',
										'TransactionID' => 0,
										'UpdatedOn' => 'string',
									],
								],
								'Refund' => true,
								'SessionTime' => 0,
								'TransactionID' => 0,
							],
							'InvoiceID' => 'string',
							'Item' => [
								[
									'Deleted' => true,
									'Description' => 'string',
									'ID' => 0,
									'InventoryID' => 'string',
									'ManifestID' => 'string',
									'Quantity' => 0,
									'QuantityReceived' => 0,
									'SessionTime' => 0,
									'StopNumber' => 0,
									'TransactionID' => 0,
								],
							],
							'ItemsCount' => 0,
							'Links' => [
								[
									'Href' => 'string',
									'Method' => 'string',
									'Rel' => 'string',
								],
							],
							'LocationLicense' => 'string',
							'ManifestID' => 'string',
							'Name' => 'string',
							'ParkedTime' => 'string',
							'Phone' => 'string',
							'ResumedDirections' => 'string',
							'ResumedEstimatedArrival' => 'string',
							'ResumedEstimatedDeparture' => 'string',
							'ResumedTime' => 'string',
							'State' => 'string',
							'StopNumber' => 0,
							'TransporterParked' => true,
							'TransporterResumed' => true,
							'ZipCode' => 'string',
						],
					],
					'StopCount' => 0,
					'Street' => 'string',
					'ThirdPartyTransporter' => [
						'LicenseNumber' => 'string',
						'Name' => 'string',
					],
					'TotalItemCount' => 0,
					'TransactionID' => 0,
					'Type' => 'string',
					'UpdatedOn' => 'string',
					'Vehicle' => [
						'Description' => 'string',
						'ID' => 'string',
					],
					'Zip' => 'string',
				],
			]
			);
		});
		$a->put('/v1/manifest/{id}/stop/{stopnumber}/arrive/undo', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				'Manifest' => [
					'City' => 'string',
					'Completed' => true,
					'CompletionDate' => 'string',
					'CreatedOn' => 'string',
					'Deleted' => true,
					'Driver' => [
						[
							'DateofBirth' => 'string',
							'ID' => 0,
							'Name' => 'string',
						],
					],
					'DriverArrived' => true,
					'InTransit' => true,
					'IsAccepted' => true,
					'IsParked' => true,
					'LicenseNumber' => 'string',
					'Links' => [
						[
							'Href' => 'string',
							'Method' => 'string',
							'Rel' => 'string',
						],
					],
					'ManifestID' => 'string',
					'Name' => 'string',
					'Phone' => 'string',
					'Received' => true,
					'SessionTime' => 0,
					'State' => 'string',
					'Stop' => [
						[
							'ApproximateArrival' => '2024-01-31T10:00:00.000Z',
							'ApproximateDeparture' => '2024-01-31T10:00:00.000Z',
							'ApproximateRoute' => 'string',
							'City' => 'string',
							'DriverArrived' => true,
							'DriverArrivedTime' => 'string',
							'ID' => 0,
							'Invoice' => [
								'Accepted' => true,
								'BuyerLocationLicense' => 'string',
								'Deleted' => true,
								'Inventory' => [
									[
										'Amount' => 0,
										'Deleted' => true,
										'ID' => 0,
										'InventoryID' => 'string',
										'InvoiceID' => 'string',
										'Price' => 0,
										'TransactionID' => 0,
									],
								],
								'InvoiceID' => 'string',
								'LocationLicense' => 'string',
								'Payment' => [
									[
										'Accepted' => true,
										'AcceptedLocationID' => 'string',
										'AcceptedOn' => 'string',
										'Amount' => 0,
										'BuyerLocationLicense' => 'string',
										'BuyerUserID' => 0,
										'CreatedOn' => 'string',
										'Deleted' => true,
										'ID' => 0,
										'InvoiceID' => 'string',
										'Rejected' => true,
										'RejectedLocationLicense' => 'string',
										'RejectedOn' => 'string',
										'RejectedReason' => 'string',
										'TransactionID' => 0,
										'UpdatedOn' => 'string',
									],
								],
								'Refund' => true,
								'SessionTime' => 0,
								'TransactionID' => 0,
							],
							'InvoiceID' => 'string',
							'Item' => [
								[
									'Deleted' => true,
									'Description' => 'string',
									'ID' => 0,
									'InventoryID' => 'string',
									'ManifestID' => 'string',
									'Quantity' => 0,
									'QuantityReceived' => 0,
									'SessionTime' => 0,
									'StopNumber' => 0,
									'TransactionID' => 0,
								],
							],
							'ItemsCount' => 0,
							'Links' => [
								[
									'Href' => 'string',
									'Method' => 'string',
									'Rel' => 'string',
								],
							],
							'LocationLicense' => 'string',
							'ManifestID' => 'string',
							'Name' => 'string',
							'ParkedTime' => 'string',
							'Phone' => 'string',
							'ResumedDirections' => 'string',
							'ResumedEstimatedArrival' => 'string',
							'ResumedEstimatedDeparture' => 'string',
							'ResumedTime' => 'string',
							'State' => 'string',
							'StopNumber' => 0,
							'TransporterParked' => true,
							'TransporterResumed' => true,
							'ZipCode' => 'string',
						],
					],
					'StopCount' => 0,
					'Street' => 'string',
					'ThirdPartyTransporter' => [
						'LicenseNumber' => 'string',
						'Name' => 'string',
					],
					'TotalItemCount' => 0,
					'TransactionID' => 0,
					'Type' => 'string',
					'UpdatedOn' => 'string',
					'Vehicle' => [
						'Description' => 'string',
						'ID' => 'string',
					],
					'Zip' => 'string',
				],
			]
			);
		});
		$a->put('/v1/manifest/{id}/void', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				'Inventory' => [
					[
						'ActiveSampleInventoryID' => 'string',
						'Deleted' => true,
						'Destroyed' => true,
						'Dried' => true,
						'ExpirationDate' => 'string',
						'ExternalID' => 'string',
						'ID' => 'string',
						'Initial' => true,
						'InventoryParentID' => [
							'string',
						],
						'InventoryType' => 0,
						'IsSample' => true,
						'LabSample' => [
							[
								'Amount' => 0,
								'AmountUsed' => 0,
								'CertOfAnalysisHyperlink' => 'string',
								'Deleted' => true,
								'ID' => 0,
								'InventoryID' => 'string',
								'InventoryType' => 0,
								'LabLicense' => 'string',
								'LocationLicense' => 'string',
								'Medical' => true,
								'MedicalGrade' => true,
								'ParentID' => 'string',
								'QualityControlDataHyperlink' => 'string',
								'Result' => 'string',
								'RnD' => true,
								'SampleUse' => 'string',
								'SessionTime' => 0,
								'TestingData' => [
									[
										'LabAnalysisTime' => '2024-01-31T10:00:00.000Z',
										'SamplePreparationTime' => '2024-01-31T10:00:00.000Z',
										'TestID' => 0,
										'TestResult' => [
											[
												'LabProvided' => true,
												'TestPanel' => 'string',
												'TestPass' => true,
												'TestValue' => 0,
												'TransactionID' => 0,
											],
										],
									],
								],
								'TransactionID' => 0,
							],
						],
						'LocationLicense' => 'string',
						'MedUsableWeight' => 0,
						'Medicated' => true,
						'NetPackageWeight' => 0,
						'PackageDate' => 'string',
						'ProductName' => 'string',
						'ProductionBatchID' => 0,
						'QAStatus' => 'string',
						'RecUsableWeight' => 0,
						'RemainingAmount' => 0,
						'Remediated' => true,
						'RemediationCount' => 0,
						'RemediationEligible' => true,
						'Restocked' => true,
						'Rework' => true,
						'RoomID' => 0,
						'Seized' => true,
						'SessionTime' => 0,
						'SourcePlantID' => 'string',
						'StateProductIdentifier' => 'string',
						'Status' => 'string',
						'Strain' => 'string',
						'TransactionID' => 0,
						'UOM' => 'string',
						'UnitBased' => true,
						'UsableWeight' => 0,
					],
				],
				'Manifest' => [
					'City' => 'string',
					'Completed' => true,
					'CompletionDate' => 'string',
					'CreatedOn' => 'string',
					'Deleted' => true,
					'Driver' => [
						[
							'DateofBirth' => 'string',
							'ID' => 0,
							'Name' => 'string',
						],
					],
					'DriverArrived' => true,
					'InTransit' => true,
					'IsAccepted' => true,
					'IsParked' => true,
					'LicenseNumber' => 'string',
					'Links' => [
						[
							'Href' => 'string',
							'Method' => 'string',
							'Rel' => 'string',
						],
					],
					'ManifestID' => 'string',
					'Name' => 'string',
					'Phone' => 'string',
					'Received' => true,
					'SessionTime' => 0,
					'State' => 'string',
					'Stop' => [
						[
							'ApproximateArrival' => '2024-01-31T10:00:00.000Z',
							'ApproximateDeparture' => '2024-01-31T10:00:00.000Z',
							'ApproximateRoute' => 'string',
							'City' => 'string',
							'DriverArrived' => true,
							'DriverArrivedTime' => 'string',
							'ID' => 0,
							'Invoice' => [
								'Accepted' => true,
								'BuyerLocationLicense' => 'string',
								'Deleted' => true,
								'Inventory' => [
									[
										'Amount' => 0,
										'Deleted' => true,
										'ID' => 0,
										'InventoryID' => 'string',
										'InvoiceID' => 'string',
										'Price' => 0,
										'TransactionID' => 0,
									],
								],
								'InvoiceID' => 'string',
								'LocationLicense' => 'string',
								'Payment' => [
									[
										'Accepted' => true,
										'AcceptedLocationID' => 'string',
										'AcceptedOn' => 'string',
										'Amount' => 0,
										'BuyerLocationLicense' => 'string',
										'BuyerUserID' => 0,
										'CreatedOn' => 'string',
										'Deleted' => true,
										'ID' => 0,
										'InvoiceID' => 'string',
										'Rejected' => true,
										'RejectedLocationLicense' => 'string',
										'RejectedOn' => 'string',
										'RejectedReason' => 'string',
										'TransactionID' => 0,
										'UpdatedOn' => 'string',
									],
								],
								'Refund' => true,
								'SessionTime' => 0,
								'TransactionID' => 0,
							],
							'InvoiceID' => 'string',
							'Item' => [
								[
									'Deleted' => true,
									'Description' => 'string',
									'ID' => 0,
									'InventoryID' => 'string',
									'ManifestID' => 'string',
									'Quantity' => 0,
									'QuantityReceived' => 0,
									'SessionTime' => 0,
									'StopNumber' => 0,
									'TransactionID' => 0,
								],
							],
							'ItemsCount' => 0,
							'Links' => [
								[
									'Href' => 'string',
									'Method' => 'string',
									'Rel' => 'string',
								],
							],
							'LocationLicense' => 'string',
							'ManifestID' => 'string',
							'Name' => 'string',
							'ParkedTime' => 'string',
							'Phone' => 'string',
							'ResumedDirections' => 'string',
							'ResumedEstimatedArrival' => 'string',
							'ResumedEstimatedDeparture' => 'string',
							'ResumedTime' => 'string',
							'State' => 'string',
							'StopNumber' => 0,
							'TransporterParked' => true,
							'TransporterResumed' => true,
							'ZipCode' => 'string',
						],
					],
					'StopCount' => 0,
					'Street' => 'string',
					'ThirdPartyTransporter' => [
						'LicenseNumber' => 'string',
						'Name' => 'string',
					],
					'TotalItemCount' => 0,
					'TransactionID' => 0,
					'Type' => 'string',
					'UpdatedOn' => 'string',
					'Vehicle' => [
						'Description' => 'string',
						'ID' => 'string',
					],
					'Zip' => 'string',
				],
				'Sessiontime' => 0,
				'TransactionID' => 0,
			]
			);
		});

		// Inventory Transfer
		$a->get('/v1/inventory/transfer', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				'InventoryTransfer' => [
					[
						'Deleted' => true,
						'ID' => 0,
						'InboundLicense' => 'string',
						'Invoice' => [
							'Accepted' => true,
							'BuyerLocationLicense' => 'string',
							'Deleted' => true,
							'Inventory' => [
								[
									'Amount' => 0,
									'Deleted' => true,
									'ID' => 0,
									'InventoryID' => 'string',
									'InvoiceID' => 'string',
									'Price' => 0,
									'TransactionID' => 0,
								],
							],
							'InvoiceID' => 'string',
							'LocationLicense' => 'string',
							'Payment' => [
								[
									'Accepted' => true,
									'AcceptedLocationID' => 'string',
									'AcceptedOn' => 'string',
									'Amount' => 0,
									'BuyerLocationLicense' => 'string',
									'BuyerUserID' => 0,
									'CreatedOn' => 'string',
									'Deleted' => true,
									'ID' => 0,
									'InvoiceID' => 'string',
									'Rejected' => true,
									'RejectedLocationLicense' => 'string',
									'RejectedOn' => 'string',
									'RejectedReason' => 'string',
									'TransactionID' => 0,
									'UpdatedOn' => 'string',
								],
							],
							'Refund' => true,
							'SessionTime' => 0,
							'TransactionID' => 0,
						],
						'InvoiceID' => 'string',
						'IsRejected' => true,
						'Item' => [
							[
								'Amount' => 0,
								'Deleted' => true,
								'Description' => 'string',
								'ID' => 0,
								'Inventory' => [
									'ActiveSampleInventoryID' => 'string',
									'Deleted' => true,
									'Destroyed' => true,
									'Dried' => true,
									'ExpirationDate' => 'string',
									'ExternalID' => 'string',
									'ID' => 'string',
									'Initial' => true,
									'InventoryParentID' => [
										'string',
									],
									'InventoryType' => 0,
									'IsSample' => true,
									'LabSample' => [
										[
											'Amount' => 0,
											'AmountUsed' => 0,
											'CertOfAnalysisHyperlink' => 'string',
											'Deleted' => true,
											'ID' => 0,
											'InventoryID' => 'string',
											'InventoryType' => 0,
											'LabLicense' => 'string',
											'LocationLicense' => 'string',
											'Medical' => true,
											'MedicalGrade' => true,
											'ParentID' => 'string',
											'QualityControlDataHyperlink' => 'string',
											'Result' => 'string',
											'RnD' => true,
											'SampleUse' => 'string',
											'SessionTime' => 0,
											'TestingData' => [
												[
													'LabAnalysisTime' => '2024-01-31T10:00:00.000Z',
													'SamplePreparationTime' => '2024-01-31T10:00:00.000Z',
													'TestID' => 0,
													'TestResult' => [
														[
															'LabProvided' => true,
															'TestPanel' => 'string',
															'TestPass' => true,
															'TestValue' => 0,
															'TransactionID' => 0,
														],
													],
												],
											],
											'TransactionID' => 0,
										],
									],
									'LocationLicense' => 'string',
									'MedUsableWeight' => 0,
									'Medicated' => true,
									'NetPackageWeight' => 0,
									'PackageDate' => 'string',
									'ProductName' => 'string',
									'ProductionBatchID' => 0,
									'QAStatus' => 'string',
									'RecUsableWeight' => 0,
									'RemainingAmount' => 0,
									'Remediated' => true,
									'RemediationCount' => 0,
									'RemediationEligible' => true,
									'Restocked' => true,
									'Rework' => true,
									'RoomID' => 0,
									'Seized' => true,
									'SessionTime' => 0,
									'SourcePlantID' => 'string',
									'StateProductIdentifier' => 'string',
									'Status' => 'string',
									'Strain' => 'string',
									'TransactionID' => 0,
									'UOM' => 'string',
									'UnitBased' => true,
									'UsableWeight' => 0,
								],
								'InventoryID' => 'string',
								'InventoryTransferID' => 0,
								'IsRejected' => true,
								'IsReturn' => true,
								'ManifestID' => 'string',
								'Received' => true,
								'ReceivedAmount' => 0,
								'ReceivedTime' => 'string',
								'TransactionID' => 0,
							],
						],
						'ManifestID' => 'string',
						'ManifestStopNumber' => 0,
						'OutboundLicense' => 'string',
						'Received' => true,
						'ReceivedTime' => 'string',
						'SessionTime' => 0,
						'TransactionID' => 0,
						'TransferType' => 'string',
					],
				],
				'NextCursor' => 0,
				'NextTransactionID' => 0,
			]
			);
		});
		$a->post('/v1/inventory/transfer', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				'Inventory' => [
					[
						'ActiveSampleInventoryID' => 'string',
						'Deleted' => true,
						'Destroyed' => true,
						'Dried' => true,
						'ExpirationDate' => 'string',
						'ExternalID' => 'string',
						'ID' => 'string',
						'Initial' => true,
						'InventoryParentID' => [
							'string',
						],
						'InventoryType' => 0,
						'IsSample' => true,
						'LabSample' => [
							[
								'Amount' => 0,
								'AmountUsed' => 0,
								'CertOfAnalysisHyperlink' => 'string',
								'Deleted' => true,
								'ID' => 0,
								'InventoryID' => 'string',
								'InventoryType' => 0,
								'LabLicense' => 'string',
								'LocationLicense' => 'string',
								'Medical' => true,
								'MedicalGrade' => true,
								'ParentID' => 'string',
								'QualityControlDataHyperlink' => 'string',
								'Result' => 'string',
								'RnD' => true,
								'SampleUse' => 'string',
								'SessionTime' => 0,
								'TestingData' => [
									[
										'LabAnalysisTime' => '2024-01-31T10:00:00.000Z',
										'SamplePreparationTime' => '2024-01-31T10:00:00.000Z',
										'TestID' => 0,
										'TestResult' => [
											[
												'LabProvided' => true,
												'TestPanel' => 'string',
												'TestPass' => true,
												'TestValue' => 0,
												'TransactionID' => 0,
											],
										],
									],
								],
								'TransactionID' => 0,
							],
						],
						'LocationLicense' => 'string',
						'MedUsableWeight' => 0,
						'Medicated' => true,
						'NetPackageWeight' => 0,
						'PackageDate' => 'string',
						'ProductName' => 'string',
						'ProductionBatchID' => 0,
						'QAStatus' => 'string',
						'RecUsableWeight' => 0,
						'RemainingAmount' => 0,
						'Remediated' => true,
						'RemediationCount' => 0,
						'RemediationEligible' => true,
						'Restocked' => true,
						'Rework' => true,
						'RoomID' => 0,
						'Seized' => true,
						'SessionTime' => 0,
						'SourcePlantID' => 'string',
						'StateProductIdentifier' => 'string',
						'Status' => 'string',
						'Strain' => 'string',
						'TransactionID' => 0,
						'UOM' => 'string',
						'UnitBased' => true,
						'UsableWeight' => 0,
					],
				],
				'InventoryTransfer' => [
					[
						'Deleted' => true,
						'ID' => 0,
						'InboundLicense' => 'string',
						'Invoice' => [
							'Accepted' => true,
							'BuyerLocationLicense' => 'string',
							'Deleted' => true,
							'Inventory' => [
								[
									'Amount' => 0,
									'Deleted' => true,
									'ID' => 0,
									'InventoryID' => 'string',
									'InvoiceID' => 'string',
									'Price' => 0,
									'TransactionID' => 0,
								],
							],
							'InvoiceID' => 'string',
							'LocationLicense' => 'string',
							'Payment' => [
								[
									'Accepted' => true,
									'AcceptedLocationID' => 'string',
									'AcceptedOn' => 'string',
									'Amount' => 0,
									'BuyerLocationLicense' => 'string',
									'BuyerUserID' => 0,
									'CreatedOn' => 'string',
									'Deleted' => true,
									'ID' => 0,
									'InvoiceID' => 'string',
									'Rejected' => true,
									'RejectedLocationLicense' => 'string',
									'RejectedOn' => 'string',
									'RejectedReason' => 'string',
									'TransactionID' => 0,
									'UpdatedOn' => 'string',
								],
							],
							'Refund' => true,
							'SessionTime' => 0,
							'TransactionID' => 0,
						],
						'InvoiceID' => 'string',
						'IsRejected' => true,
						'Item' => [
							[
								'Amount' => 0,
								'Deleted' => true,
								'Description' => 'string',
								'ID' => 0,
								'Inventory' => [
									'ActiveSampleInventoryID' => 'string',
									'Deleted' => true,
									'Destroyed' => true,
									'Dried' => true,
									'ExpirationDate' => 'string',
									'ExternalID' => 'string',
									'ID' => 'string',
									'Initial' => true,
									'InventoryParentID' => [
										'string',
									],
									'InventoryType' => 0,
									'IsSample' => true,
									'LabSample' => [
										[
											'Amount' => 0,
											'AmountUsed' => 0,
											'CertOfAnalysisHyperlink' => 'string',
											'Deleted' => true,
											'ID' => 0,
											'InventoryID' => 'string',
											'InventoryType' => 0,
											'LabLicense' => 'string',
											'LocationLicense' => 'string',
											'Medical' => true,
											'MedicalGrade' => true,
											'ParentID' => 'string',
											'QualityControlDataHyperlink' => 'string',
											'Result' => 'string',
											'RnD' => true,
											'SampleUse' => 'string',
											'SessionTime' => 0,
											'TestingData' => [
												[
													'LabAnalysisTime' => '2024-01-31T10:00:00.000Z',
													'SamplePreparationTime' => '2024-01-31T10:00:00.000Z',
													'TestID' => 0,
													'TestResult' => [
														[
															'LabProvided' => true,
															'TestPanel' => 'string',
															'TestPass' => true,
															'TestValue' => 0,
															'TransactionID' => 0,
														],
													],
												],
											],
											'TransactionID' => 0,
										],
									],
									'LocationLicense' => 'string',
									'MedUsableWeight' => 0,
									'Medicated' => true,
									'NetPackageWeight' => 0,
									'PackageDate' => 'string',
									'ProductName' => 'string',
									'ProductionBatchID' => 0,
									'QAStatus' => 'string',
									'RecUsableWeight' => 0,
									'RemainingAmount' => 0,
									'Remediated' => true,
									'RemediationCount' => 0,
									'RemediationEligible' => true,
									'Restocked' => true,
									'Rework' => true,
									'RoomID' => 0,
									'Seized' => true,
									'SessionTime' => 0,
									'SourcePlantID' => 'string',
									'StateProductIdentifier' => 'string',
									'Status' => 'string',
									'Strain' => 'string',
									'TransactionID' => 0,
									'UOM' => 'string',
									'UnitBased' => true,
									'UsableWeight' => 0,
								],
								'InventoryID' => 'string',
								'InventoryTransferID' => 0,
								'IsRejected' => true,
								'IsReturn' => true,
								'ManifestID' => 'string',
								'Received' => true,
								'ReceivedAmount' => 0,
								'ReceivedTime' => 'string',
								'TransactionID' => 0,
							],
						],
						'ManifestID' => 'string',
						'ManifestStopNumber' => 0,
						'OutboundLicense' => 'string',
						'Received' => true,
						'ReceivedTime' => 'string',
						'SessionTime' => 0,
						'TransactionID' => 0,
						'TransferType' => 'string',
					],
				],
				'Manifest' => [
					'City' => 'string',
					'Completed' => true,
					'CompletionDate' => 'string',
					'CreatedOn' => 'string',
					'Deleted' => true,
					'Driver' => [
						[
							'DateofBirth' => 'string',
							'ID' => 0,
							'Name' => 'string',
						],
					],
					'DriverArrived' => true,
					'InTransit' => true,
					'IsAccepted' => true,
					'IsParked' => true,
					'LicenseNumber' => 'string',
					'Links' => [
						[
							'Href' => 'string',
							'Method' => 'string',
							'Rel' => 'string',
						],
					],
					'ManifestID' => 'string',
					'Name' => 'string',
					'Phone' => 'string',
					'Received' => true,
					'SessionTime' => 0,
					'State' => 'string',
					'Stop' => [
						[
							'ApproximateArrival' => '2024-01-31T10:00:00.000Z',
							'ApproximateDeparture' => '2024-01-31T10:00:00.000Z',
							'ApproximateRoute' => 'string',
							'City' => 'string',
							'DriverArrived' => true,
							'DriverArrivedTime' => 'string',
							'ID' => 0,
							'Invoice' => [
								'Accepted' => true,
								'BuyerLocationLicense' => 'string',
								'Deleted' => true,
								'Inventory' => [
									[
										'Amount' => 0,
										'Deleted' => true,
										'ID' => 0,
										'InventoryID' => 'string',
										'InvoiceID' => 'string',
										'Price' => 0,
										'TransactionID' => 0,
									],
								],
								'InvoiceID' => 'string',
								'LocationLicense' => 'string',
								'Payment' => [
									[
										'Accepted' => true,
										'AcceptedLocationID' => 'string',
										'AcceptedOn' => 'string',
										'Amount' => 0,
										'BuyerLocationLicense' => 'string',
										'BuyerUserID' => 0,
										'CreatedOn' => 'string',
										'Deleted' => true,
										'ID' => 0,
										'InvoiceID' => 'string',
										'Rejected' => true,
										'RejectedLocationLicense' => 'string',
										'RejectedOn' => 'string',
										'RejectedReason' => 'string',
										'TransactionID' => 0,
										'UpdatedOn' => 'string',
									],
								],
								'Refund' => true,
								'SessionTime' => 0,
								'TransactionID' => 0,
							],
							'InvoiceID' => 'string',
							'Item' => [
								[
									'Deleted' => true,
									'Description' => 'string',
									'ID' => 0,
									'InventoryID' => 'string',
									'ManifestID' => 'string',
									'Quantity' => 0,
									'QuantityReceived' => 0,
									'SessionTime' => 0,
									'StopNumber' => 0,
									'TransactionID' => 0,
								],
							],
							'ItemsCount' => 0,
							'Links' => [
								[
									'Href' => 'string',
									'Method' => 'string',
									'Rel' => 'string',
								],
							],
							'LocationLicense' => 'string',
							'ManifestID' => 'string',
							'Name' => 'string',
							'ParkedTime' => 'string',
							'Phone' => 'string',
							'ResumedDirections' => 'string',
							'ResumedEstimatedArrival' => 'string',
							'ResumedEstimatedDeparture' => 'string',
							'ResumedTime' => 'string',
							'State' => 'string',
							'StopNumber' => 0,
							'TransporterParked' => true,
							'TransporterResumed' => true,
							'ZipCode' => 'string',
						],
					],
					'StopCount' => 0,
					'Street' => 'string',
					'ThirdPartyTransporter' => [
						'LicenseNumber' => 'string',
						'Name' => 'string',
					],
					'TotalItemCount' => 0,
					'TransactionID' => 0,
					'Type' => 'string',
					'UpdatedOn' => 'string',
					'Vehicle' => [
						'Description' => 'string',
						'ID' => 'string',
					],
					'Zip' => 'string',
				],
				'SessionTime' => 0,
				'TransactionID' => 0,
			]
			);
		});
		$a->get('/v1/inventory/transfer/inbound', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				'InventoryTransfer' => [
					[
						'Deleted' => true,
						'ID' => 0,
						'InboundLicense' => 'string',
						'Invoice' => [
							'Accepted' => true,
							'BuyerLocationLicense' => 'string',
							'Deleted' => true,
							'Inventory' => [
								[
									'Amount' => 0,
									'Deleted' => true,
									'ID' => 0,
									'InventoryID' => 'string',
									'InvoiceID' => 'string',
									'Price' => 0,
									'TransactionID' => 0,
								],
							],
							'InvoiceID' => 'string',
							'LocationLicense' => 'string',
							'Payment' => [
								[
									'Accepted' => true,
									'AcceptedLocationID' => 'string',
									'AcceptedOn' => 'string',
									'Amount' => 0,
									'BuyerLocationLicense' => 'string',
									'BuyerUserID' => 0,
									'CreatedOn' => 'string',
									'Deleted' => true,
									'ID' => 0,
									'InvoiceID' => 'string',
									'Rejected' => true,
									'RejectedLocationLicense' => 'string',
									'RejectedOn' => 'string',
									'RejectedReason' => 'string',
									'TransactionID' => 0,
									'UpdatedOn' => 'string',
								],
							],
							'Refund' => true,
							'SessionTime' => 0,
							'TransactionID' => 0,
						],
						'InvoiceID' => 'string',
						'IsRejected' => true,
						'Item' => [
							[
								'Amount' => 0,
								'Deleted' => true,
								'Description' => 'string',
								'ID' => 0,
								'Inventory' => [
									'ActiveSampleInventoryID' => 'string',
									'Deleted' => true,
									'Destroyed' => true,
									'Dried' => true,
									'ExpirationDate' => 'string',
									'ExternalID' => 'string',
									'ID' => 'string',
									'Initial' => true,
									'InventoryParentID' => [
										'string',
									],
									'InventoryType' => 0,
									'IsSample' => true,
									'LabSample' => [
										[
											'Amount' => 0,
											'AmountUsed' => 0,
											'CertOfAnalysisHyperlink' => 'string',
											'Deleted' => true,
											'ID' => 0,
											'InventoryID' => 'string',
											'InventoryType' => 0,
											'LabLicense' => 'string',
											'LocationLicense' => 'string',
											'Medical' => true,
											'MedicalGrade' => true,
											'ParentID' => 'string',
											'QualityControlDataHyperlink' => 'string',
											'Result' => 'string',
											'RnD' => true,
											'SampleUse' => 'string',
											'SessionTime' => 0,
											'TestingData' => [
												[
													'LabAnalysisTime' => '2024-01-31T10:00:00.000Z',
													'SamplePreparationTime' => '2024-01-31T10:00:00.000Z',
													'TestID' => 0,
													'TestResult' => [
														[
															'LabProvided' => true,
															'TestPanel' => 'string',
															'TestPass' => true,
															'TestValue' => 0,
															'TransactionID' => 0,
														],
													],
												],
											],
											'TransactionID' => 0,
										],
									],
									'LocationLicense' => 'string',
									'MedUsableWeight' => 0,
									'Medicated' => true,
									'NetPackageWeight' => 0,
									'PackageDate' => 'string',
									'ProductName' => 'string',
									'ProductionBatchID' => 0,
									'QAStatus' => 'string',
									'RecUsableWeight' => 0,
									'RemainingAmount' => 0,
									'Remediated' => true,
									'RemediationCount' => 0,
									'RemediationEligible' => true,
									'Restocked' => true,
									'Rework' => true,
									'RoomID' => 0,
									'Seized' => true,
									'SessionTime' => 0,
									'SourcePlantID' => 'string',
									'StateProductIdentifier' => 'string',
									'Status' => 'string',
									'Strain' => 'string',
									'TransactionID' => 0,
									'UOM' => 'string',
									'UnitBased' => true,
									'UsableWeight' => 0,
								],
								'InventoryID' => 'string',
								'InventoryTransferID' => 0,
								'IsRejected' => true,
								'IsReturn' => true,
								'ManifestID' => 'string',
								'Received' => true,
								'ReceivedAmount' => 0,
								'ReceivedTime' => 'string',
								'TransactionID' => 0,
							],
						],
						'ManifestID' => 'string',
						'ManifestStopNumber' => 0,
						'OutboundLicense' => 'string',
						'Received' => true,
						'ReceivedTime' => 'string',
						'SessionTime' => 0,
						'TransactionID' => 0,
						'TransferType' => 'string',
					],
				],
				'NextCursor' => 0,
				'NextTransactionID' => 0,
				'SessionTime' => 0,
			]
			);
		});
		$a->get('/v1/inventory/transfer/inbound/{id}', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				'InventoryTransfer' => [
					'Deleted' => true,
					'ID' => 0,
					'InboundLicense' => 'string',
					'Invoice' => [
						'Accepted' => true,
						'BuyerLocationLicense' => 'string',
						'Deleted' => true,
						'Inventory' => [
							[
								'Amount' => 0,
								'Deleted' => true,
								'ID' => 0,
								'InventoryID' => 'string',
								'InvoiceID' => 'string',
								'Price' => 0,
								'TransactionID' => 0,
							],
						],
						'InvoiceID' => 'string',
						'LocationLicense' => 'string',
						'Payment' => [
							[
								'Accepted' => true,
								'AcceptedLocationID' => 'string',
								'AcceptedOn' => 'string',
								'Amount' => 0,
								'BuyerLocationLicense' => 'string',
								'BuyerUserID' => 0,
								'CreatedOn' => 'string',
								'Deleted' => true,
								'ID' => 0,
								'InvoiceID' => 'string',
								'Rejected' => true,
								'RejectedLocationLicense' => 'string',
								'RejectedOn' => 'string',
								'RejectedReason' => 'string',
								'TransactionID' => 0,
								'UpdatedOn' => 'string',
							],
						],
						'Refund' => true,
						'SessionTime' => 0,
						'TransactionID' => 0,
					],
					'InvoiceID' => 'string',
					'IsRejected' => true,
					'Item' => [
						[
							'Amount' => 0,
							'Deleted' => true,
							'Description' => 'string',
							'ID' => 0,
							'Inventory' => [
								'ActiveSampleInventoryID' => 'string',
								'Deleted' => true,
								'Destroyed' => true,
								'Dried' => true,
								'ExpirationDate' => 'string',
								'ExternalID' => 'string',
								'ID' => 'string',
								'Initial' => true,
								'InventoryParentID' => [
									'string',
								],
								'InventoryType' => 0,
								'IsSample' => true,
								'LabSample' => [
									[
										'Amount' => 0,
										'AmountUsed' => 0,
										'CertOfAnalysisHyperlink' => 'string',
										'Deleted' => true,
										'ID' => 0,
										'InventoryID' => 'string',
										'InventoryType' => 0,
										'LabLicense' => 'string',
										'LocationLicense' => 'string',
										'Medical' => true,
										'MedicalGrade' => true,
										'ParentID' => 'string',
										'QualityControlDataHyperlink' => 'string',
										'Result' => 'string',
										'RnD' => true,
										'SampleUse' => 'string',
										'SessionTime' => 0,
										'TestingData' => [
											[
												'LabAnalysisTime' => '2024-01-31T10:00:00.000Z',
												'SamplePreparationTime' => '2024-01-31T10:00:00.000Z',
												'TestID' => 0,
												'TestResult' => [
													[
														'LabProvided' => true,
														'TestPanel' => 'string',
														'TestPass' => true,
														'TestValue' => 0,
														'TransactionID' => 0,
													],
												],
											],
										],
										'TransactionID' => 0,
									],
								],
								'LocationLicense' => 'string',
								'MedUsableWeight' => 0,
								'Medicated' => true,
								'NetPackageWeight' => 0,
								'PackageDate' => 'string',
								'ProductName' => 'string',
								'ProductionBatchID' => 0,
								'QAStatus' => 'string',
								'RecUsableWeight' => 0,
								'RemainingAmount' => 0,
								'Remediated' => true,
								'RemediationCount' => 0,
								'RemediationEligible' => true,
								'Restocked' => true,
								'Rework' => true,
								'RoomID' => 0,
								'Seized' => true,
								'SessionTime' => 0,
								'SourcePlantID' => 'string',
								'StateProductIdentifier' => 'string',
								'Status' => 'string',
								'Strain' => 'string',
								'TransactionID' => 0,
								'UOM' => 'string',
								'UnitBased' => true,
								'UsableWeight' => 0,
							],
							'InventoryID' => 'string',
							'InventoryTransferID' => 0,
							'IsRejected' => true,
							'IsReturn' => true,
							'ManifestID' => 'string',
							'Received' => true,
							'ReceivedAmount' => 0,
							'ReceivedTime' => 'string',
							'TransactionID' => 0,
						],
					],
					'ManifestID' => 'string',
					'ManifestStopNumber' => 0,
					'OutboundLicense' => 'string',
					'Received' => true,
					'ReceivedTime' => 'string',
					'SessionTime' => 0,
					'TransactionID' => 0,
					'TransferType' => 'string',
				],
			]
			);
		});
		$a->get('/v1/inventory/transfer/rejected', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				'InventoryTransfer' => [
					[
						'Deleted' => true,
						'ID' => 0,
						'InboundLicense' => 'string',
						'Invoice' => [
							'Accepted' => true,
							'BuyerLocationLicense' => 'string',
							'Deleted' => true,
							'Inventory' => [
								[
									'Amount' => 0,
									'Deleted' => true,
									'ID' => 0,
									'InventoryID' => 'string',
									'InvoiceID' => 'string',
									'Price' => 0,
									'TransactionID' => 0,
								],
							],
							'InvoiceID' => 'string',
							'LocationLicense' => 'string',
							'Payment' => [
								[
									'Accepted' => true,
									'AcceptedLocationID' => 'string',
									'AcceptedOn' => 'string',
									'Amount' => 0,
									'BuyerLocationLicense' => 'string',
									'BuyerUserID' => 0,
									'CreatedOn' => 'string',
									'Deleted' => true,
									'ID' => 0,
									'InvoiceID' => 'string',
									'Rejected' => true,
									'RejectedLocationLicense' => 'string',
									'RejectedOn' => 'string',
									'RejectedReason' => 'string',
									'TransactionID' => 0,
									'UpdatedOn' => 'string',
								],
							],
							'Refund' => true,
							'SessionTime' => 0,
							'TransactionID' => 0,
						],
						'InvoiceID' => 'string',
						'IsRejected' => true,
						'Item' => [
							[
								'Amount' => 0,
								'Deleted' => true,
								'Description' => 'string',
								'ID' => 0,
								'Inventory' => [
									'ActiveSampleInventoryID' => 'string',
									'Deleted' => true,
									'Destroyed' => true,
									'Dried' => true,
									'ExpirationDate' => 'string',
									'ExternalID' => 'string',
									'ID' => 'string',
									'Initial' => true,
									'InventoryParentID' => [
										'string',
									],
									'InventoryType' => 0,
									'IsSample' => true,
									'LabSample' => [
										[
											'Amount' => 0,
											'AmountUsed' => 0,
											'CertOfAnalysisHyperlink' => 'string',
											'Deleted' => true,
											'ID' => 0,
											'InventoryID' => 'string',
											'InventoryType' => 0,
											'LabLicense' => 'string',
											'LocationLicense' => 'string',
											'Medical' => true,
											'MedicalGrade' => true,
											'ParentID' => 'string',
											'QualityControlDataHyperlink' => 'string',
											'Result' => 'string',
											'RnD' => true,
											'SampleUse' => 'string',
											'SessionTime' => 0,
											'TestingData' => [
												[
													'LabAnalysisTime' => '2024-01-31T10:00:00.000Z',
													'SamplePreparationTime' => '2024-01-31T10:00:00.000Z',
													'TestID' => 0,
													'TestResult' => [
														[
															'LabProvided' => true,
															'TestPanel' => 'string',
															'TestPass' => true,
															'TestValue' => 0,
															'TransactionID' => 0,
														],
													],
												],
											],
											'TransactionID' => 0,
										],
									],
									'LocationLicense' => 'string',
									'MedUsableWeight' => 0,
									'Medicated' => true,
									'NetPackageWeight' => 0,
									'PackageDate' => 'string',
									'ProductName' => 'string',
									'ProductionBatchID' => 0,
									'QAStatus' => 'string',
									'RecUsableWeight' => 0,
									'RemainingAmount' => 0,
									'Remediated' => true,
									'RemediationCount' => 0,
									'RemediationEligible' => true,
									'Restocked' => true,
									'Rework' => true,
									'RoomID' => 0,
									'Seized' => true,
									'SessionTime' => 0,
									'SourcePlantID' => 'string',
									'StateProductIdentifier' => 'string',
									'Status' => 'string',
									'Strain' => 'string',
									'TransactionID' => 0,
									'UOM' => 'string',
									'UnitBased' => true,
									'UsableWeight' => 0,
								],
								'InventoryID' => 'string',
								'InventoryTransferID' => 0,
								'IsRejected' => true,
								'IsReturn' => true,
								'ManifestID' => 'string',
								'Received' => true,
								'ReceivedAmount' => 0,
								'ReceivedTime' => 'string',
								'TransactionID' => 0,
							],
						],
						'ManifestID' => 'string',
						'ManifestStopNumber' => 0,
						'OutboundLicense' => 'string',
						'Received' => true,
						'ReceivedTime' => 'string',
						'SessionTime' => 0,
						'TransactionID' => 0,
						'TransferType' => 'string',
					],
				],
				'NextCursor' => 0,
				'NextTransactionID' => 0,
				'SessionTime' => 0,
			]
			);
		});
		$a->get('/v1/inventory/transfer/rules', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				'TransferRule' => [
					[
						'Deleted' => true,
						'DestinationIsLab' => true,
						'DestinationLocationType' => 0,
						'ID' => 0,
						'InventoryType' => 0,
						'QAPassRequired' => true,
						'RnDSampleAllowed' => true,
						'SourceLocationType' => 0,
						'TransportLicenseeTypeID' => 0,
					],
				],
				'NextCursor' => 0,
			]
			);
		});
		$a->get('/v1/inventory/transfer/{id}', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				'InventoryTransfer' => [
					'Deleted' => true,
					'ID' => 0,
					'InboundLicense' => 'string',
					'Invoice' => [
						'Accepted' => true,
						'BuyerLocationLicense' => 'string',
						'Deleted' => true,
						'Inventory' => [
							[
								'Amount' => 0,
								'Deleted' => true,
								'ID' => 0,
								'InventoryID' => 'string',
								'InvoiceID' => 'string',
								'Price' => 0,
								'TransactionID' => 0,
							],
						],
						'InvoiceID' => 'string',
						'LocationLicense' => 'string',
						'Payment' => [
							[
								'Accepted' => true,
								'AcceptedLocationID' => 'string',
								'AcceptedOn' => 'string',
								'Amount' => 0,
								'BuyerLocationLicense' => 'string',
								'BuyerUserID' => 0,
								'CreatedOn' => 'string',
								'Deleted' => true,
								'ID' => 0,
								'InvoiceID' => 'string',
								'Rejected' => true,
								'RejectedLocationLicense' => 'string',
								'RejectedOn' => 'string',
								'RejectedReason' => 'string',
								'TransactionID' => 0,
								'UpdatedOn' => 'string',
							],
						],
						'Refund' => true,
						'SessionTime' => 0,
						'TransactionID' => 0,
					],
					'InvoiceID' => 'string',
					'IsRejected' => true,
					'Item' => [
						[
							'Amount' => 0,
							'Deleted' => true,
							'Description' => 'string',
							'ID' => 0,
							'Inventory' => [
								'ActiveSampleInventoryID' => 'string',
								'Deleted' => true,
								'Destroyed' => true,
								'Dried' => true,
								'ExpirationDate' => 'string',
								'ExternalID' => 'string',
								'ID' => 'string',
								'Initial' => true,
								'InventoryParentID' => [
									'string',
								],
								'InventoryType' => 0,
								'IsSample' => true,
								'LabSample' => [
									[
										'Amount' => 0,
										'AmountUsed' => 0,
										'CertOfAnalysisHyperlink' => 'string',
										'Deleted' => true,
										'ID' => 0,
										'InventoryID' => 'string',
										'InventoryType' => 0,
										'LabLicense' => 'string',
										'LocationLicense' => 'string',
										'Medical' => true,
										'MedicalGrade' => true,
										'ParentID' => 'string',
										'QualityControlDataHyperlink' => 'string',
										'Result' => 'string',
										'RnD' => true,
										'SampleUse' => 'string',
										'SessionTime' => 0,
										'TestingData' => [
											[
												'LabAnalysisTime' => '2024-01-31T10:00:00.000Z',
												'SamplePreparationTime' => '2024-01-31T10:00:00.000Z',
												'TestID' => 0,
												'TestResult' => [
													[
														'LabProvided' => true,
														'TestPanel' => 'string',
														'TestPass' => true,
														'TestValue' => 0,
														'TransactionID' => 0,
													],
												],
											],
										],
										'TransactionID' => 0,
									],
								],
								'LocationLicense' => 'string',
								'MedUsableWeight' => 0,
								'Medicated' => true,
								'NetPackageWeight' => 0,
								'PackageDate' => 'string',
								'ProductName' => 'string',
								'ProductionBatchID' => 0,
								'QAStatus' => 'string',
								'RecUsableWeight' => 0,
								'RemainingAmount' => 0,
								'Remediated' => true,
								'RemediationCount' => 0,
								'RemediationEligible' => true,
								'Restocked' => true,
								'Rework' => true,
								'RoomID' => 0,
								'Seized' => true,
								'SessionTime' => 0,
								'SourcePlantID' => 'string',
								'StateProductIdentifier' => 'string',
								'Status' => 'string',
								'Strain' => 'string',
								'TransactionID' => 0,
								'UOM' => 'string',
								'UnitBased' => true,
								'UsableWeight' => 0,
							],
							'InventoryID' => 'string',
							'InventoryTransferID' => 0,
							'IsRejected' => true,
							'IsReturn' => true,
							'ManifestID' => 'string',
							'Received' => true,
							'ReceivedAmount' => 0,
							'ReceivedTime' => 'string',
							'TransactionID' => 0,
						],
					],
					'ManifestID' => 'string',
					'ManifestStopNumber' => 0,
					'OutboundLicense' => 'string',
					'Received' => true,
					'ReceivedTime' => 'string',
					'SessionTime' => 0,
					'TransactionID' => 0,
					'TransferType' => 'string',
				],
			]
			);
		});
		$a->put('/v1/inventory/transfer/{id}/receive', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				"Inventory" => [
				[
				"ActiveSampleInventoryID" => "string",
				"Deleted" => true,
				"Destroyed" => true,
				"Dried" => true,
				"ExpirationDate" => "string",
				"ExternalID" => "string",
				"ID" => "string",
				"Initial" => true,
				"InventoryParentID" => [
				"string"
				],
				"InventoryType" => 0,
				"IsSample" => true,
				"LabSample" => [
				[
				"Amount" => 0,
				"AmountUsed" => 0,
				"CertOfAnalysisHyperlink" => "string",
				"Deleted" => true,
				"ID" => 0,
				"InventoryID" => "string",
				"InventoryType" => 0,
				"LabLicense" => "string",
				"LocationLicense" => "string",
				"Medical" => true,
				"MedicalGrade" => true,
				"ParentID" => "string",
				"QualityControlDataHyperlink" => "string",
				"Result" => "string",
				"RnD" => true,
				"SampleUse" => "string",
				"SessionTime" => 0,
				"TestingData" => [
				[
				"LabAnalysisTime" => "2024-01-31T10:00:00.000Z",
				"SamplePreparationTime" => "2024-01-31T10:00:00.000Z",
				"TestID" => 0,
				"TestResult" => [
				[
				"LabProvided" => true,
				"TestPanel" => "string",
				"TestPass" => true,
				"TestValue" => 0,
				"TransactionID" => 0
				]
				]
				]
				],
				"TransactionID" => 0
				]
				],
				"LocationLicense" => "string",
				"MedUsableWeight" => 0,
				"Medicated" => true,
				"NetPackageWeight" => 0,
				"PackageDate" => "string",
				"ProductName" => "string",
				"ProductionBatchID" => 0,
				"QAStatus" => "string",
				"RecUsableWeight" => 0,
				"RemainingAmount" => 0,
				"Remediated" => true,
				"RemediationCount" => 0,
				"RemediationEligible" => true,
				"Restocked" => true,
				"Rework" => true,
				"RoomID" => 0,
				"Seized" => true,
				"SessionTime" => 0,
				"SourcePlantID" => "string",
				"StateProductIdentifier" => "string",
				"Status" => "string",
				"Strain" => "string",
				"TransactionID" => 0,
				"UOM" => "string",
				"UnitBased" => true,
				"UsableWeight" => 0
				]
				],
				"InventoryTransfer" => [
				"Deleted" => true,
				"ID" => 0,
				"InboundLicense" => "string",
				"Invoice" => [
				"Accepted" => true,
				"BuyerLocationLicense" => "string",
				"Deleted" => true,
				"Inventory" => [
				[
				"Amount" => 0,
				"Deleted" => true,
				"ID" => 0,
				"InventoryID" => "string",
				"InvoiceID" => "string",
				"Price" => 0,
				"TransactionID" => 0
				]
				],
				"InvoiceID" => "string",
				"LocationLicense" => "string",
				"Payment" => [
				[
				"Accepted" => true,
				"AcceptedLocationID" => "string",
				"AcceptedOn" => "string",
				"Amount" => 0,
				"BuyerLocationLicense" => "string",
				"BuyerUserID" => 0,
				"CreatedOn" => "string",
				"Deleted" => true,
				"ID" => 0,
				"InvoiceID" => "string",
				"Rejected" => true,
				"RejectedLocationLicense" => "string",
				"RejectedOn" => "string",
				"RejectedReason" => "string",
				"TransactionID" => 0,
				"UpdatedOn" => "string"
				]
				],
				"Refund" => true,
				"SessionTime" => 0,
				"TransactionID" => 0
				],
				"InvoiceID" => "string",
				"IsRejected" => true,
				"Item" => [
				[
				"Amount" => 0,
				"Deleted" => true,
				"Description" => "string",
				"ID" => 0,
				"Inventory" => [
				"ActiveSampleInventoryID" => "string",
				"Deleted" => true,
				"Destroyed" => true,
				"Dried" => true,
				"ExpirationDate" => "string",
				"ExternalID" => "string",
				"ID" => "string",
				"Initial" => true,
				"InventoryParentID" => [
				"string"
				],
				"InventoryType" => 0,
				"IsSample" => true,
				"LabSample" => [
				[
				"Amount" => 0,
				"AmountUsed" => 0,
				"CertOfAnalysisHyperlink" => "string",
				"Deleted" => true,
				"ID" => 0,
				"InventoryID" => "string",
				"InventoryType" => 0,
				"LabLicense" => "string",
				"LocationLicense" => "string",
				"Medical" => true,
				"MedicalGrade" => true,
				"ParentID" => "string",
				"QualityControlDataHyperlink" => "string",
				"Result" => "string",
				"RnD" => true,
				"SampleUse" => "string",
				"SessionTime" => 0,
				"TestingData" => [
				[
				"LabAnalysisTime" => "2024-01-31T10:00:00.000Z",
				"SamplePreparationTime" => "2024-01-31T10:00:00.000Z",
				"TestID" => 0,
				"TestResult" => [
				[
				"LabProvided" => true,
				"TestPanel" => "string",
				"TestPass" => true,
				"TestValue" => 0,
				"TransactionID" => 0
				]
				]
				]
				],
				"TransactionID" => 0
				]
				],
				"LocationLicense" => "string",
				"MedUsableWeight" => 0,
				"Medicated" => true,
				"NetPackageWeight" => 0,
				"PackageDate" => "string",
				"ProductName" => "string",
				"ProductionBatchID" => 0,
				"QAStatus" => "string",
				"RecUsableWeight" => 0,
				"RemainingAmount" => 0,
				"Remediated" => true,
				"RemediationCount" => 0,
				"RemediationEligible" => true,
				"Restocked" => true,
				"Rework" => true,
				"RoomID" => 0,
				"Seized" => true,
				"SessionTime" => 0,
				"SourcePlantID" => "string",
				"StateProductIdentifier" => "string",
				"Status" => "string",
				"Strain" => "string",
				"TransactionID" => 0,
				"UOM" => "string",
				"UnitBased" => true,
				"UsableWeight" => 0
				],
				"InventoryID" => "string",
				"InventoryTransferID" => 0,
				"IsRejected" => true,
				"IsReturn" => true,
				"ManifestID" => "string",
				"Received" => true,
				"ReceivedAmount" => 0,
				"ReceivedTime" => "string",
				"TransactionID" => 0
				]
				],
				"ManifestID" => "string",
				"ManifestStopNumber" => 0,
				"OutboundLicense" => "string",
				"Received" => true,
				"ReceivedTime" => "string",
				"SessionTime" => 0,
				"TransactionID" => 0,
				"TransferType" => "string"
				],
				"Invoice" => [
				"Accepted" => true,
				"BuyerLocationLicense" => "string",
				"Deleted" => true,
				"Inventory" => [
				[
				"Amount" => 0,
				"Deleted" => true,
				"ID" => 0,
				"InventoryID" => "string",
				"InvoiceID" => "string",
				"Price" => 0,
				"TransactionID" => 0
				]
				],
				"InvoiceID" => "string",
				"LocationLicense" => "string",
				"Payment" => [
				[
				"Accepted" => true,
				"AcceptedLocationID" => "string",
				"AcceptedOn" => "string",
				"Amount" => 0,
				"BuyerLocationLicense" => "string",
				"BuyerUserID" => 0,
				"CreatedOn" => "string",
				"Deleted" => true,
				"ID" => 0,
				"InvoiceID" => "string",
				"Rejected" => true,
				"RejectedLocationLicense" => "string",
				"RejectedOn" => "string",
				"RejectedReason" => "string",
				"TransactionID" => 0,
				"UpdatedOn" => "string"
				]
				],
				"Refund" => true,
				"SessionTime" => 0,
				"TransactionID" => 0
				],
				"RejectedData" => [
				"Inventory" => [
				[
				"ActiveSampleInventoryID" => "string",
				"Deleted" => true,
				"Destroyed" => true,
				"Dried" => true,
				"ExpirationDate" => "string",
				"ExternalID" => "string",
				"ID" => "string",
				"Initial" => true,
				"InventoryParentID" => [
				"string"
				],
				"InventoryType" => 0,
				"IsSample" => true,
				"LabSample" => [
				[
				"Amount" => 0,
				"AmountUsed" => 0,
				"CertOfAnalysisHyperlink" => "string",
				"Deleted" => true,
				"ID" => 0,
				"InventoryID" => "string",
				"InventoryType" => 0,
				"LabLicense" => "string",
				"LocationLicense" => "string",
				"Medical" => true,
				"MedicalGrade" => true,
				"ParentID" => "string",
				"QualityControlDataHyperlink" => "string",
				"Result" => "string",
				"RnD" => true,
				"SampleUse" => "string",
				"SessionTime" => 0,
				"TestingData" => [
				[
				"LabAnalysisTime" => "2024-01-31T10:00:00.000Z",
				"SamplePreparationTime" => "2024-01-31T10:00:00.000Z",
				"TestID" => 0,
				"TestResult" => [
				[
				"LabProvided" => true,
				"TestPanel" => "string",
				"TestPass" => true,
				"TestValue" => 0,
				"TransactionID" => 0
				]
				]
				]
				],
				"TransactionID" => 0
				]
				],
				"LocationLicense" => "string",
				"MedUsableWeight" => 0,
				"Medicated" => true,
				"NetPackageWeight" => 0,
				"PackageDate" => "string",
				"ProductName" => "string",
				"ProductionBatchID" => 0,
				"QAStatus" => "string",
				"RecUsableWeight" => 0,
				"RemainingAmount" => 0,
				"Remediated" => true,
				"RemediationCount" => 0,
				"RemediationEligible" => true,
				"Restocked" => true,
				"Rework" => true,
				"RoomID" => 0,
				"Seized" => true,
				"SessionTime" => 0,
				"SourcePlantID" => "string",
				"StateProductIdentifier" => "string",
				"Status" => "string",
				"Strain" => "string",
				"TransactionID" => 0,
				"UOM" => "string",
				"UnitBased" => true,
				"UsableWeight" => 0
				]
				],
				"InventoryTransfer" => [
				"Deleted" => true,
				"ID" => 0,
				"InboundLicense" => "string",
				"Invoice" => [
				"Accepted" => true,
				"BuyerLocationLicense" => "string",
				"Deleted" => true,
				"Inventory" => [
				[
				"Amount" => 0,
				"Deleted" => true,
				"ID" => 0,
				"InventoryID" => "string",
				"InvoiceID" => "string",
				"Price" => 0,
				"TransactionID" => 0
				]
				],
				"InvoiceID" => "string",
				"LocationLicense" => "string",
				"Payment" => [
				[
				"Accepted" => true,
				"AcceptedLocationID" => "string",
				"AcceptedOn" => "string",
				"Amount" => 0,
				"BuyerLocationLicense" => "string",
				"BuyerUserID" => 0,
				"CreatedOn" => "string",
				"Deleted" => true,
				"ID" => 0,
				"InvoiceID" => "string",
				"Rejected" => true,
				"RejectedLocationLicense" => "string",
				"RejectedOn" => "string",
				"RejectedReason" => "string",
				"TransactionID" => 0,
				"UpdatedOn" => "string"
				]
				],
				"Refund" => true,
				"SessionTime" => 0,
				"TransactionID" => 0
				],
				"InvoiceID" => "string",
				"IsRejected" => true,
				"Item" => [
				[
				"Amount" => 0,
				"Deleted" => true,
				"Description" => "string",
				"ID" => 0,
				"Inventory" => [
				"ActiveSampleInventoryID" => "string",
				"Deleted" => true,
				"Destroyed" => true,
				"Dried" => true,
				"ExpirationDate" => "string",
				"ExternalID" => "string",
				"ID" => "string",
				"Initial" => true,
				"InventoryParentID" => [
				"string"
				],
				"InventoryType" => 0,
				"IsSample" => true,
				"LabSample" => [
				[
				"Amount" => 0,
				"AmountUsed" => 0,
				"CertOfAnalysisHyperlink" => "string",
				"Deleted" => true,
				"ID" => 0,
				"InventoryID" => "string",
				"InventoryType" => 0,
				"LabLicense" => "string",
				"LocationLicense" => "string",
				"Medical" => true,
				"MedicalGrade" => true,
				"ParentID" => "string",
				"QualityControlDataHyperlink" => "string",
				"Result" => "string",
				"RnD" => true,
				"SampleUse" => "string",
				"SessionTime" => 0,
				"TestingData" => [
				[
				"LabAnalysisTime" => "2024-01-31T10:00:00.000Z",
				"SamplePreparationTime" => "2024-01-31T10:00:00.000Z",
				"TestID" => 0,
				"TestResult" => [
				[
				"LabProvided" => true,
				"TestPanel" => "string",
				"TestPass" => true,
				"TestValue" => 0,
				"TransactionID" => 0
				]
				]
				]
				],
				"TransactionID" => 0
				]
				],
				"LocationLicense" => "string",
				"MedUsableWeight" => 0,
				"Medicated" => true,
				"NetPackageWeight" => 0,
				"PackageDate" => "string",
				"ProductName" => "string",
				"ProductionBatchID" => 0,
				"QAStatus" => "string",
				"RecUsableWeight" => 0,
				"RemainingAmount" => 0,
				"Remediated" => true,
				"RemediationCount" => 0,
				"RemediationEligible" => true,
				"Restocked" => true,
				"Rework" => true,
				"RoomID" => 0,
				"Seized" => true,
				"SessionTime" => 0,
				"SourcePlantID" => "string",
				"StateProductIdentifier" => "string",
				"Status" => "string",
				"Strain" => "string",
				"TransactionID" => 0,
				"UOM" => "string",
				"UnitBased" => true,
				"UsableWeight" => 0
				],
				"InventoryID" => "string",
				"InventoryTransferID" => 0,
				"IsRejected" => true,
				"IsReturn" => true,
				"ManifestID" => "string",
				"Received" => true,
				"ReceivedAmount" => 0,
				"ReceivedTime" => "string",
				"TransactionID" => 0
				]
				],
				"ManifestID" => "string",
				"ManifestStopNumber" => 0,
				"OutboundLicense" => "string",
				"Received" => true,
				"ReceivedTime" => "string",
				"SessionTime" => 0,
				"TransactionID" => 0,
				"TransferType" => "string"
				],
				"Manifest" => [
				"City" => "string",
				"Completed" => true,
				"CompletionDate" => "string",
				"CreatedOn" => "string",
				"Deleted" => true,
				"Driver" => [
				[
				"DateofBirth" => "string",
				"ID" => 0,
				"Name" => "string"
				]
				],
				"DriverArrived" => true,
				"InTransit" => true,
				"IsAccepted" => true,
				"IsParked" => true,
				"LicenseNumber" => "string",
				"Links" => [
				[
				"Href" => "string",
				"Method" => "string",
				"Rel" => "string"
				]
				],
				"ManifestID" => "string",
				"Name" => "string",
				"Phone" => "string",
				"Received" => true,
				"SessionTime" => 0,
				"State" => "string",
				"Stop" => [
				[
				"ApproximateArrival" => "2024-01-31T10:00:00.000Z",
				"ApproximateDeparture" => "2024-01-31T10:00:00.000Z",
				"ApproximateRoute" => "string",
				"City" => "string",
				"DriverArrived" => true,
				"DriverArrivedTime" => "string",
				"ID" => 0,
				"Invoice" => [
				"Accepted" => true,
				"BuyerLocationLicense" => "string",
				"Deleted" => true,
				"Inventory" => [
				[
				"Amount" => 0,
				"Deleted" => true,
				"ID" => 0,
				"InventoryID" => "string",
				"InvoiceID" => "string",
				"Price" => 0,
				"TransactionID" => 0
				]
				],
				"InvoiceID" => "string",
				"LocationLicense" => "string",
				"Payment" => [
				[
				"Accepted" => true,
				"AcceptedLocationID" => "string",
				"AcceptedOn" => "string",
				"Amount" => 0,
				"BuyerLocationLicense" => "string",
				"BuyerUserID" => 0,
				"CreatedOn" => "string",
				"Deleted" => true,
				"ID" => 0,
				"InvoiceID" => "string",
				"Rejected" => true,
				"RejectedLocationLicense" => "string",
				"RejectedOn" => "string",
				"RejectedReason" => "string",
				"TransactionID" => 0,
				"UpdatedOn" => "string"
				]
				],
				"Refund" => true,
				"SessionTime" => 0,
				"TransactionID" => 0
				],
				"InvoiceID" => "string",
				"Item" => [
				[
				"Deleted" => true,
				"Description" => "string",
				"ID" => 0,
				"InventoryID" => "string",
				"ManifestID" => "string",
				"Quantity" => 0,
				"QuantityReceived" => 0,
				"SessionTime" => 0,
				"StopNumber" => 0,
				"TransactionID" => 0
				]
				],
				"ItemsCount" => 0,
				"Links" => [
				[
				"Href" => "string",
				"Method" => "string",
				"Rel" => "string"
				]
				],
				"LocationLicense" => "string",
				"ManifestID" => "string",
				"Name" => "string",
				"ParkedTime" => "string",
				"Phone" => "string",
				"ResumedDirections" => "string",
				"ResumedEstimatedArrival" => "string",
				"ResumedEstimatedDeparture" => "string",
				"ResumedTime" => "string",
				"State" => "string",
				"StopNumber" => 0,
				"TransporterParked" => true,
				"TransporterResumed" => true,
				"ZipCode" => "string"
				]
				],
				"StopCount" => 0,
				"Street" => "string",
				"ThirdPartyTransporter" => [
				"LicenseNumber" => "string",
				"Name" => "string"
				],
				"TotalItemCount" => 0,
				"TransactionID" => 0,
				"Type" => "string",
				"UpdatedOn" => "string",
				"Vehicle" => [
				"Description" => "string",
				"ID" => "string"
				],
				"Zip" => "string"
				]
				],
				"SessionTime" => 0,
				"TransactionID" => 0
				]);
		});
		$a->put('/v1/inventory/transfer/{id}/void', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				"Inventory" => [
				   [
					  "ActiveSampleInventoryID" => "string",
					  "Deleted" => true,
					  "Destroyed" => true,
					  "Dried" => true,
					  "ExpirationDate" => "string",
					  "ExternalID" => "string",
					  "ID" => "string",
					  "Initial" => true,
					  "InventoryParentID" => [
						 "string"
					  ],
					  "InventoryType" => 0,
					  "IsSample" => true,
					  "LabSample" => [
							[
							   "Amount" => 0,
							   "AmountUsed" => 0,
							   "CertOfAnalysisHyperlink" => "string",
							   "Deleted" => true,
							   "ID" => 0,
							   "InventoryID" => "string",
							   "InventoryType" => 0,
							   "LabLicense" => "string",
							   "LocationLicense" => "string",
							   "Medical" => true,
							   "MedicalGrade" => true,
							   "ParentID" => "string",
							   "QualityControlDataHyperlink" => "string",
							   "Result" => "string",
							   "RnD" => true,
							   "SampleUse" => "string",
							   "SessionTime" => 0,
							   "TestingData" => [
								  [
									 "LabAnalysisTime" => "2024-01-31T10:00:00.000Z",
									 "SamplePreparationTime" => "2024-01-31T10:00:00.000Z",
									 "TestID" => 0,
									 "TestResult" => [
										[
										   "LabProvided" => true,
										   "TestPanel" => "string",
										   "TestPass" => true,
										   "TestValue" => 0,
										   "TransactionID" => 0
										]
									 ]
								  ]
							   ],
							   "TransactionID" => 0
							]
						 ],
					  "LocationLicense" => "string",
					  "MedUsableWeight" => 0,
					  "Medicated" => true,
					  "NetPackageWeight" => 0,
					  "PackageDate" => "string",
					  "ProductName" => "string",
					  "ProductionBatchID" => 0,
					  "QAStatus" => "string",
					  "RecUsableWeight" => 0,
					  "RemainingAmount" => 0,
					  "Remediated" => true,
					  "RemediationCount" => 0,
					  "RemediationEligible" => true,
					  "Restocked" => true,
					  "Rework" => true,
					  "RoomID" => 0,
					  "Seized" => true,
					  "SessionTime" => 0,
					  "SourcePlantID" => "string",
					  "StateProductIdentifier" => "string",
					  "Status" => "string",
					  "Strain" => "string",
					  "TransactionID" => 0,
					  "UOM" => "string",
					  "UnitBased" => true,
					  "UsableWeight" => 0
				   ]
				],
				"InventoryTransfer" => [
				   "Deleted" => true,
				   "ID" => 0,
				   "InboundLicense" => "string",
				   "Invoice" => [
					  "Accepted" => true,
					  "BuyerLocationLicense" => "string",
					  "Deleted" => true,
					  "Inventory" => [
						 [
							"Amount" => 0,
							"Deleted" => true,
							"ID" => 0,
							"InventoryID" => "string",
							"InvoiceID" => "string",
							"Price" => 0,
							"TransactionID" => 0
						 ]
					  ],
					  "InvoiceID" => "string",
					  "LocationLicense" => "string",
					  "Payment" => [
							   [
								  "Accepted" => true,
								  "AcceptedLocationID" => "string",
								  "AcceptedOn" => "string",
								  "Amount" => 0,
								  "BuyerLocationLicense" => "string",
								  "BuyerUserID" => 0,
								  "CreatedOn" => "string",
								  "Deleted" => true,
								  "ID" => 0,
								  "InvoiceID" => "string",
								  "Rejected" => true,
								  "RejectedLocationLicense" => "string",
								  "RejectedOn" => "string",
								  "RejectedReason" => "string",
								  "TransactionID" => 0,
								  "UpdatedOn" => "string"
							   ]
							],
					  "Refund" => true,
					  "SessionTime" => 0,
					  "TransactionID" => 0
				   ],
				   "InvoiceID" => "string",
				   "IsRejected" => true,
				   "Item" => [
					  [
						 "Amount" => 0,
						 "Deleted" => true,
						 "Description" => "string",
						 "ID" => 0,
						 "Inventory" => [
							"ActiveSampleInventoryID" => "string",
							"Deleted" => true,
							"Destroyed" => true,
							"Dried" => true,
							"ExpirationDate" => "string",
							"ExternalID" => "string",
							"ID" => "string",
							"Initial" => true,
							"InventoryParentID" => [
							   "string"
							],
							"InventoryType" => 0,
							"IsSample" => true,
							"LabSample" => [
							   [
								  "Amount" => 0,
								  "AmountUsed" => 0,
								  "CertOfAnalysisHyperlink" => "string",
								  "Deleted" => true,
								  "ID" => 0,
								  "InventoryID" => "string",
								  "InventoryType" => 0,
								  "LabLicense" => "string",
								  "LocationLicense" => "string",
								  "Medical" => true,
								  "MedicalGrade" => true,
								  "ParentID" => "string",
								  "QualityControlDataHyperlink" => "string",
								  "Result" => "string",
								  "RnD" => true,
								  "SampleUse" => "string",
								  "SessionTime" => 0,
								  "TestingData" => [
									 [
										"LabAnalysisTime" => "2024-01-31T10:00:00.000Z",
										"SamplePreparationTime" => "2024-01-31T10:00:00.000Z",
										"TestID" => 0,
										"TestResult" => [
										   [
											  "LabProvided" => true,
											  "TestPanel" => "string",
											  "TestPass" => true,
											  "TestValue" => 0,
											  "TransactionID" => 0
										   ]
										]
									 ]
								  ],
								  "TransactionID" => 0
							   ]
							],
							"LocationLicense" => "string",
							"MedUsableWeight" => 0,
							"Medicated" => true,
							"NetPackageWeight" => 0,
							"PackageDate" => "string",
							"ProductName" => "string",
							"ProductionBatchID" => 0,
							"QAStatus" => "string",
							"RecUsableWeight" => 0,
							"RemainingAmount" => 0,
							"Remediated" => true,
							"RemediationCount" => 0,
							"RemediationEligible" => true,
							"Restocked" => true,
							"Rework" => true,
							"RoomID" => 0,
							"Seized" => true,
							"SessionTime" => 0,
							"SourcePlantID" => "string",
							"StateProductIdentifier" => "string",
							"Status" => "string",
							"Strain" => "string",
							"TransactionID" => 0,
							"UOM" => "string",
							"UnitBased" => true,
							"UsableWeight" => 0
						 ],
						 "InventoryID" => "string",
						 "InventoryTransferID" => 0,
						 "IsRejected" => true,
						 "IsReturn" => true,
						 "ManifestID" => "string",
						 "Received" => true,
						 "ReceivedAmount" => 0,
						 "ReceivedTime" => "string",
						 "TransactionID" => 0
					  ]
				   ],
				   "ManifestID" => "string",
				   "ManifestStopNumber" => 0,
				   "OutboundLicense" => "string",
				   "Received" => true,
				   "ReceivedTime" => "string",
				   "SessionTime" => 0,
				   "TransactionID" => 0,
				   "TransferType" => "string"
				],
				"Manifest" => [
				   "City" => "string",
				   "Completed" => true,
				   "CompletionDate" => "string",
				   "CreatedOn" => "string",
				   "Deleted" => true,
				   "Driver" => [
					  [
						 "DateofBirth" => "string",
						 "ID" => 0,
						 "Name" => "string"
					  ]
				   ],
				   "DriverArrived" => true,
				   "InTransit" => true,
				   "IsAccepted" => true,
				   "IsParked" => true,
				   "LicenseNumber" => "string",
				   "Links" => [
							[
							   "Href" => "string",
							   "Method" => "string",
							   "Rel" => "string"
							]
						 ],
				   "ManifestID" => "string",
				   "Name" => "string",
				   "Phone" => "string",
				   "Received" => true,
				   "SessionTime" => 0,
				   "State" => "string",
				   "Stop" => [
								  [
									 "ApproximateArrival" => "2024-01-31T10:00:00.000Z",
									 "ApproximateDeparture" => "2024-01-31T10:00:00.000Z",
									 "ApproximateRoute" => "string",
									 "City" => "string",
									 "DriverArrived" => true,
									 "DriverArrivedTime" => "string",
									 "ID" => 0,
									 "Invoice" => [
										"Accepted" => true,
										"BuyerLocationLicense" => "string",
										"Deleted" => true,
										"Inventory" => [
										   [
											  "Amount" => 0,
											  "Deleted" => true,
											  "ID" => 0,
											  "InventoryID" => "string",
											  "InvoiceID" => "string",
											  "Price" => 0,
											  "TransactionID" => 0
										   ]
										],
										"InvoiceID" => "string",
										"LocationLicense" => "string",
										"Payment" => [
												 [
													"Accepted" => true,
													"AcceptedLocationID" => "string",
													"AcceptedOn" => "string",
													"Amount" => 0,
													"BuyerLocationLicense" => "string",
													"BuyerUserID" => 0,
													"CreatedOn" => "string",
													"Deleted" => true,
													"ID" => 0,
													"InvoiceID" => "string",
													"Rejected" => true,
													"RejectedLocationLicense" => "string",
													"RejectedOn" => "string",
													"RejectedReason" => "string",
													"TransactionID" => 0,
													"UpdatedOn" => "string"
												 ]
											  ],
										"Refund" => true,
										"SessionTime" => 0,
										"TransactionID" => 0
									 ],
									 "InvoiceID" => "string",
									 "Item" => [
													   [
														  "Deleted" => true,
														  "Description" => "string",
														  "ID" => 0,
														  "InventoryID" => "string",
														  "ManifestID" => "string",
														  "Quantity" => 0,
														  "QuantityReceived" => 0,
														  "SessionTime" => 0,
														  "StopNumber" => 0,
														  "TransactionID" => 0
													   ]
													],
									 "ItemsCount" => 0,
									 "Links" => [
															 [
																"Href" => "string",
																"Method" => "string",
																"Rel" => "string"
															 ]
														  ],
									 "LocationLicense" => "string",
									 "ManifestID" => "string",
									 "Name" => "string",
									 "ParkedTime" => "string",
									 "Phone" => "string",
									 "ResumedDirections" => "string",
									 "ResumedEstimatedArrival" => "string",
									 "ResumedEstimatedDeparture" => "string",
									 "ResumedTime" => "string",
									 "State" => "string",
									 "StopNumber" => 0,
									 "TransporterParked" => true,
									 "TransporterResumed" => true,
									 "ZipCode" => "string"
								  ]
							   ],
				   "StopCount" => 0,
				   "Street" => "string",
				   "ThirdPartyTransporter" => [
						 "LicenseNumber" => "string",
						 "Name" => "string"
					 ],
				   "TotalItemCount" => 0,
				   "TransactionID" => 0,
				   "Type" => "string",
				   "UpdatedOn" => "string",
				   "Vehicle" => [
						 "Description" => "string",
						 "ID" => "string"
					 ],
				   "Zip" => "string"
				],
				"SessionTime" => 0,
				"TransactionID" => 0
			 ]);
		});

		// Sale
		$a->get('/v1/sale', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				"NextCursor" => 0,
				"NextTransactionID" => 0,
				"Sale" => [
					[
						"CardID" => "string",
						"CreatedByUserID" => 0,
						"CreatedOn" => "string",
						"Deleted" => true,
						"ExternalID" => "string",
						"ID" => 0,
						"Item" => [
							[
								"Barcode" => "string",
								"ExternalID" => "string",
								"FormID" => 0,
								"ItemNumber" => 0,
								"OrderTypeID" => 0,
								"Price" => 0,
								"Quantity" => 0,
								"TaxCollected" => [
									"Excise" => 0,
									"Other" => 0
								],
								"TransactionID" => 0,
								"VoidReason" => "string"
							]
						],
						"Location" => 0,
						"OrderingPhysician" => "string",
						"RequestID" => "string",
						"TransactionID" => 0,
						"Type" => "string",
						"UpdatedOn" => "string"
					]
				]
			]);
		});
		$a->post('/v1/sale', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				"Inventory" => [
					[
						"ActiveSampleInventoryID" => "string",
						"Deleted" => true,
						"Destroyed" => true,
						"Dried" => true,
						"ExpirationDate" => "string",
						"ExternalID" => "string",
						"ID" => "string",
						"Initial" => true,
						"InventoryParentID" => [
							"string"
						],
						"InventoryType" => 0,
						"IsSample" => true,
						"LabSample" => [
							[
								"Amount" => 0,
								"AmountUsed" => 0,
								"CertOfAnalysisHyperlink" => "string",
								"Deleted" => true,
								"ID" => 0,
								"InventoryID" => "string",
								"InventoryType" => 0,
								"LabLicense" => "string",
								"LocationLicense" => "string",
								"Medical" => true,
								"MedicalGrade" => true,
								"ParentID" => "string",
								"QualityControlDataHyperlink" => "string",
								"Result" => "string",
								"RnD" => true,
								"SampleUse" => "string",
								"SessionTime" => 0,
								"TestingData" => [
									[
										"LabAnalysisTime" => "2024-01-31T10:00:00.000Z",
										"SamplePreparationTime" => "2024-01-31T10:00:00.000Z",
										"TestID" => 0,
										"TestResult" => [
											[
												"LabProvided" => true,
												"TestPanel" => "string",
												"TestPass" => true,
												"TestValue" => 0,
												"TransactionID" => 0
											]
										]
									]
								]
							]
						],
						"LocationLicense" => "string",
						"MedUsableWeight" => 0,
						"Medicated" => true,
						"NetPackageWeight" => 0,
						"PackageDate" => "string",
						"ProductName" => "string",
						"ProductionBatchID" => 0,
						"QAStatus" => "string",
						"RecUsableWeight" => 0,
						"RemainingAmount" => 0,
						"Remediated" => true,
						"RemediationCount" => 0,
						"RemediationEligible" => true,
						"Restocked" => true,
						"Rework" => true,
						"RoomID" => 0,
						"Seized" => true,
						"SessionTime" => 0,
						"SourcePlantID" => "string",
						"StateProductIdentifier" => "string",
						"Status" => "string",
						"Strain" => "string",
						"TransactionID" => 0,
						"UOM" => "string",
						"UnitBased" => true,
						"UsableWeight" => 0
					]
				],
				"Sale" => [
					[
						"CardID" => "string",
						"CreatedByUserID" => 0,
						"CreatedOn" => "string",
						"Deleted" => true,
						"ExternalID" => "string",
						"ID" => 0,
						"Item" => [
							[
								"Barcode" => "string",
								"ExternalID" => "string",
								"FormID" => 0,
								"ItemNumber" => 0,
								"OrderTypeID" => 0,
								"Price" => 0,
								"Quantity" => 0,
								"TaxCollected" => [
									"Excise" => 0,
									"Other" => 0
								],
								"TransactionID" => 0,
								"VoidReason" => "string"
							]
						],
						"Location" => 0,
						"OrderingPhysician" => "string",
						"RequestID" => "string",
						"TransactionID" => 0,
						"Type" => "string",
						"UpdatedOn" => "string"
					]
				],
				"SessionTime" => 0,
				"TransactionID" => 0
			]);
		});
		$a->get('/v1/sale/{id}', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				"Sale" => [
					"CardID" => "string",
					"CreatedByUserID" => 0,
					"CreatedOn" => "string",
					"Deleted" => true,
					"ExternalID" => "string",
					"ID" => 0,
					"Item" => [
						[
							"Barcode" => "string",
							"ExternalID" => "string",
							"FormID" => 0,
							"ItemNumber" => 0,
							"OrderTypeID" => 0,
							"Price" => 0,
							"Quantity" => 0,
							"TaxCollected" => [
								"Excise" => 0,
								"Other" => 0
							],
							"TransactionID" => 0,
							"VoidReason" => "string"
						]
					],
					"Location" => 0,
					"OrderingPhysician" => "string",
					"RequestID" => "string",
					"TransactionID" => 0,
					"Type" => "string",
					"UpdatedOn" => "string"
				]
			]);
		});
		$a->put('/v1/sale/{id}', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				"CardID" => "string",
				"CreatedByUserID" => 0,
				"CreatedOn" => "string",
				"Deleted" => true,
				"ExternalID" => "string",
				"ID" => 0,
				"Item" => [
					[
						"Barcode" => "string",
						"ExternalID" => "string",
						"FormID" => 0,
						"ItemNumber" => 0,
						"OrderTypeID" => 0,
						"Price" => 0,
						"Quantity" => 0,
						"TaxCollected" => [
							"Excise" => 0,
							"Other" => 0
						],
						"TransactionID" => 0,
						"VoidReason" => "string"
					]
				],
				"Location" => 0,
				"OrderingPhysician" => "string",
				"RequestID" => "string",
				"TransactionID" => 0,
				"Type" => "string",
				"UpdatedOn" => "string"
			]);
		});
		$a->post('/v1/sale/{id}/refund', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				"Inventory" => [
					[
						"ActiveSampleInventoryID" => "string",
						"Deleted" => true,
						"Destroyed" => true,
						"Dried" => true,
						"ExpirationDate" => "string",
						"ExternalID" => "string",
						"ID" => "string",
						"Initial" => true,
						"InventoryParentID" => [
							"string"
						],
						"InventoryType" => 0,
						"IsSample" => true,
						"LabSample" => [
							[
								"Amount" => 0,
								"AmountUsed" => 0,
								"CertOfAnalysisHyperlink" => "string",
								"Deleted" => true,
								"ID" => 0,
								"InventoryID" => "string",
								"InventoryType" => 0,
								"LabLicense" => "string",
								"LocationLicense" => "string",
								"Medical" => true,
								"MedicalGrade" => true,
								"ParentID" => "string",
								"QualityControlDataHyperlink" => "string",
								"Result" => "string",
								"RnD" => true,
								"SampleUse" => "string",
								"SessionTime" => 0,
								"TestingData" => [
									[
										"LabAnalysisTime" => "2024-01-31T10:00:00.000Z",
										"SamplePreparationTime" => "2024-01-31T10:00:00.000Z",
										"TestID" => 0,
										"TestResult" => [
											[
												"LabProvided" => true,
												"TestPanel" => "string",
												"TestPass" => true,
												"TestValue" => 0,
												"TransactionID" => 0
											]
										]
									]
								]
							]
						],
						"LocationLicense" => "string",
						"MedUsableWeight" => 0,
						"Medicated" => true,
						"NetPackageWeight" => 0,
						"PackageDate" => "string",
						"ProductName" => "string",
						"ProductionBatchID" => 0,
						"QAStatus" => "string",
						"RecUsableWeight" => 0,
						"RemainingAmount" => 0,
						"Remediated" => true,
						"RemediationCount" => 0,
						"RemediationEligible" => true,
						"Restocked" => true,
						"Rework" => true,
						"RoomID" => 0,
						"Seized" => true,
						"SessionTime" => 0,
						"SourcePlantID" => "string",
						"StateProductIdentifier" => "string",
						"Status" => "string",
						"Strain" => "string",
						"TransactionID" => 0,
						"UOM" => "string",
						"UnitBased" => true,
						"UsableWeight" => 0
					]
				],
				"Refund" => [
					[
						"CardID" => "string",
						"CreatedByUserID" => 0,
						"CreatedOn" => "string",
						"Deleted" => true,
						"ExternalID" => "string",
						"ID" => 0,
						"Item" => [
							[
								"Barcode" => "string",
								"ExternalID" => "string",
								"FormID" => 0,
								"ItemNumber" => 0,
								"OrderTypeID" => 0,
								"Price" => 0,
								"Quantity" => 0,
								"TaxCollected" => [
									"Excise" => 0,
									"Other" => 0
								],
								"TransactionID" => 0,
								"VoidReason" => "string"
							]
						],
						"Location" => 0,
						"OrderingPhysician" => "string",
						"RequestID" => "string",
						"TransactionID" => 0,
						"Type" => "string",
						"UpdatedOn" => "string"
					]
				],
				"Sale" => [
					[
						"CardID" => "string",
						"CreatedByUserID" => 0,
						"CreatedOn" => "string",
						"Deleted" => true,
						"ExternalID" => "string",
						"ID" => 0,
						"Item" => [
							[
								"Barcode" => "string",
								"ExternalID" => "string",
								"FormID" => 0,
								"ItemNumber" => 0,
								"OrderTypeID" => 0,
								"Price" => 0,
								"Quantity" => 0,
								"TaxCollected" => [
									"Excise" => 0,
									"Other" => 0
								],
								"TransactionID" => 0,
								"VoidReason" => "string"
							]
						],
						"Location" => 0,
						"OrderingPhysician" => "string",
						"RequestID" => "string",
						"TransactionID" => 0,
						"Type" => "string",
						"UpdatedOn" => "string"
					]
				],
				"SessionTime" => 0,
				"TransactionID" => 0
			]);
		});
		$a->put('/v1/sale/{id}/void', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				"transactionID" => 0
			]);
		});

		// Patient
		// NYS: Medical Cannabis Data Management System (M.C.D.M.S.)

		// Labs API
		$a->get('/v1/lab/inventory/transfer/inbound', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				"InventoryTransfer" => [
					[
						"Deleted" => true,
						"ID" => 0,
						"InboundLicense" => "string",
						"Invoice" => [
							"Accepted" => true,
							"BuyerLocationLicense" => "string",
							"Deleted" => true,
							"Inventory" => [
								[
									"Amount" => 0,
									"Deleted" => true,
									"ID" => 0,
									"InventoryID" => "string",
									"InvoiceID" => "string",
									"Price" => 0,
									"TransactionID" => 0
								]
							],
							"InvoiceID" => "string",
							"LocationLicense" => "string",
							"Payment" => [
								[
									"Accepted" => true,
									"AcceptedLocationID" => "string",
									"AcceptedOn" => "string",
									"Amount" => 0,
									"BuyerLocationLicense" => "string",
									"BuyerUserID" => 0,
									"CreatedOn" => "string",
									"Deleted" => true,
									"ID" => 0,
									"InvoiceID" => "string",
									"Rejected" => true,
									"RejectedLocationLicense" => "string",
									"RejectedOn" => "string",
									"RejectedReason" => "string",
									"TransactionID" => 0,
									"UpdatedOn" => "string"
								]
							],
							"Refund" => true,
							"SessionTime" => 0,
							"TransactionID" => 0
						],
						"InvoiceID" => "string",
						"IsRejected" => true,
						"Item" => [
							[
								"Amount" => 0,
								"Deleted" => true,
								"Description" => "string",
								"ID" => 0,
								"Inventory" => [
									"ActiveSampleInventoryID" => "string",
									"Deleted" => true,
									"Destroyed" => true,
									"Dried" => true,
									"ExpirationDate" => "string",
									"ExternalID" => "string",
									"ID" => "string",
									"Initial" => true,
									"InventoryParentID" => [
										"string"
									],
									"InventoryType" => 0,
									"IsSample" => true,
									"LabSample" => [
										[
											"Amount" => 0,
											"AmountUsed" => 0,
											"CertOfAnalysisHyperlink" => "string",
											"Deleted" => true,
											"ID" => 0,
											"InventoryID" => "string",
											"InventoryType" => 0,
											"LabLicense" => "string",
											"LocationLicense" => "string",
											"Medical" => true,
											"MedicalGrade" => true,
											"ParentID" => "string",
											"QualityControlDataHyperlink" => "string",
											"Result" => "string",
											"RnD" => true,
											"SampleUse" => "string",
											"SessionTime" => 0,
											"TestingData" => [
												[
													"LabAnalysisTime" => "2024-01-31T10:00:00.000Z",
													"SamplePreparationTime" => "2024-01-31T10:00:00.000Z",
													"TestID" => 0,
													"TestResult" => [
														[
															"LabProvided" => true,
															"TestPanel" => "string",
															"TestPass" => true,
															"TestValue" => 0,
															"TransactionID" => 0
														]
													]
												]
											]
										]
									],
									"LocationLicense" => "string",
									"MedUsableWeight" => 0,
									"Medicated" => true,
									"NetPackageWeight" => 0,
									"PackageDate" => "string",
									"ProductName" => "string",
									"ProductionBatchID" => 0,
									"QAStatus" => "string",
									"RecUsableWeight" => 0,
									"RemainingAmount" => 0,
									"Remediated" => true,
									"RemediationCount" => 0,
									"RemediationEligible" => true,
									"Restocked" => true,
									"Rework" => true,
									"RoomID" => 0,
									"Seized" => true,
									"SessionTime" => 0,
									"SourcePlantID" => "string",
									"StateProductIdentifier" => "string",
									"Status" => "string",
									"Strain" => "string",
									"TransactionID" => 0,
									"UOM" => "string",
									"UnitBased" => true,
									"UsableWeight" => 0
								],
								"InventoryID" => "string",
								"InventoryTransferID" => 0,
								"IsRejected" => true,
								"IsReturn" => true,
								"ManifestID" => "string",
								"Received" => true,
								"ReceivedAmount" => 0,
								"ReceivedTime" => "string",
								"TransactionID" => 0
							]
						],
						"ManifestID" => "string",
						"ManifestStopNumber" => 0,
						"OutboundLicense" => "string",
						"Received" => true,
						"ReceivedTime" => "string",
						"SessionTime" => 0,
						"TransactionID" => 0,
						"TransferType" => "string"
					]
				],
				"NextCursor" => 0,
				"NextTransactionID" => 0,
				"SessionTime" => 0
			]);
		});
		$a->put('/v1/lab/inventory/transfer/{id}/receive', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				"Inventory" => [
					[
						"ActiveSampleInventoryID" => "string",
						"Deleted" => true,
						"Destroyed" => true,
						"Dried" => true,
						"ExpirationDate" => "string",
						"ExternalID" => "string",
						"ID" => "string",
						"Initial" => true,
						"InventoryParentID" => [
							"string"
						],
						"InventoryType" => 0,
						"IsSample" => true,
						"LabSample" => [
							[
								"Amount" => 0,
								"AmountUsed" => 0,
								"CertOfAnalysisHyperlink" => "string",
								"Deleted" => true,
								"ID" => 0,
								"InventoryID" => "string",
								"InventoryType" => 0,
								"LabLicense" => "string",
								"LocationLicense" => "string",
								"Medical" => true,
								"MedicalGrade" => true,
								"ParentID" => "string",
								"QualityControlDataHyperlink" => "string",
								"Result" => "string",
								"RnD" => true,
								"SampleUse" => "string",
								"SessionTime" => 0,
								"TestingData" => [
									[
										"LabAnalysisTime" => "2024-01-31T10:00:00.000Z",
										"SamplePreparationTime" => "2024-01-31T10:00:00.000Z",
										"TestID" => 0,
										"TestResult" => [
											[
												"LabProvided" => true,
												"TestPanel" => "string",
												"TestPass" => true,
												"TestValue" => 0,
												"TransactionID" => 0
											]
										]
									]
								]
							]
						],
						"LocationLicense" => "string",
						"MedUsableWeight" => 0,
						"Medicated" => true,
						"NetPackageWeight" => 0,
						"PackageDate" => "string",
						"ProductName" => "string",
						"ProductionBatchID" => 0,
						"QAStatus" => "string",
						"RecUsableWeight" => 0,
						"RemainingAmount" => 0,
						"Remediated" => true,
						"RemediationCount" => 0,
						"RemediationEligible" => true,
						"Restocked" => true,
						"Rework" => true,
						"RoomID" => 0,
						"Seized" => true,
						"SessionTime" => 0,
						"SourcePlantID" => "string",
						"StateProductIdentifier" => "string",
						"Status" => "string",
						"Strain" => "string",
						"TransactionID" => 0,
						"UOM" => "string",
						"UnitBased" => true,
						"UsableWeight" => 0
					]
				],
				"InventoryTransfer" => [
					[
						"Deleted" => true,
						"ID" => 0,
						"InboundLicense" => "string",
						"Invoice" => [
							"Accepted" => true,
							"BuyerLocationLicense" => "string",
							"Deleted" => true,
							"Inventory" => [
								[
									"Amount" => 0,
									"Deleted" => true,
									"ID" => 0,
									"InventoryID" => "string",
									"InvoiceID" => "string",
									"Price" => 0,
									"TransactionID" => 0
								]
							],
							"InvoiceID" => "string",
							"LocationLicense" => "string",
							"Payment" => [
								[
									"Accepted" => true,
									"AcceptedLocationID" => "string",
									"AcceptedOn" => "string",
									"Amount" => 0,
									"BuyerLocationLicense" => "string",
									"BuyerUserID" => 0,
									"CreatedOn" => "string",
									"Deleted" => true,
									"ID" => 0,
									"InvoiceID" => "string",
									"Rejected" => true,
									"RejectedLocationLicense" => "string",
									"RejectedOn" => "string",
									"RejectedReason" => "string",
									"TransactionID" => 0,
									"UpdatedOn" => "string"
								]
							],
							"Refund" => true,
							"SessionTime" => 0,
							"TransactionID" => 0
						],
						"InvoiceID" => "string",
						"IsRejected" => true,
						"Item" => [
							[
								"Amount" => 0,
								"Deleted" => true,
								"Description" => "string",
								"ID" => 0,
								"Inventory" => [
									"ActiveSampleInventoryID" => "string",
									"Deleted" => true,
									"Destroyed" => true,
									"Dried" => true,
									"ExpirationDate" => "string",
									"ExternalID" => "string",
									"ID" => "string",
									"Initial" => true,
									"InventoryParentID" => [
										"string"
									],
									"InventoryType" => 0,
									"IsSample" => true,
									"LabSample" => [
										[
											"Amount" => 0,
											"AmountUsed" => 0,
											"CertOfAnalysisHyperlink" => "string",
											"Deleted" => true,
											"ID" => 0,
											"InventoryID" => "string",
											"InventoryType" => 0,
											"LabLicense" => "string",
											"LocationLicense" => "string",
											"Medical" => true,
											"MedicalGrade" => true,
											"ParentID" => "string",
											"QualityControlDataHyperlink" => "string",
											"Result" => "string",
											"RnD" => true,
											"SampleUse" => "string",
											"SessionTime" => 0,
											"TestingData" => [
												[
													"LabAnalysisTime" => "2024-01-31T10:00:00.000Z",
													"SamplePreparationTime" => "2024-01-31T10:00:00.000Z",
													"TestID" => 0,
													"TestResult" => [
														[
															"LabProvided" => true,
															"TestPanel" => "string",
															"TestPass" => true,
															"TestValue" => 0,
															"TransactionID" => 0
														]
													]
												]
											]
										]
									],
									"LocationLicense" => "string",
									"MedUsableWeight" => 0,
									"Medicated" => true,
									"NetPackageWeight" => 0,
									"PackageDate" => "string",
									"ProductName" => "string",
									"ProductionBatchID" => 0,
									"QAStatus" => "string",
									"RecUsableWeight" => 0,
									"RemainingAmount" => 0,
									"Remediated" => true,
									"RemediationCount" => 0,
									"RemediationEligible" => true,
									"Restocked" => true,
									"Rework" => true,
									"RoomID" => 0,
									"Seized" => true,
									"SessionTime" => 0,
									"SourcePlantID" => "string",
									"StateProductIdentifier" => "string",
									"Status" => "string",
									"Strain" => "string",
									"TransactionID" => 0,
									"UOM" => "string",
									"UnitBased" => true,
									"UsableWeight" => 0
								],
								"InventoryID" => "string",
								"InventoryTransferID" => 0,
								"IsRejected" => true,
								"IsReturn" => true,
								"ManifestID" => "string",
								"Received" => true,
								"ReceivedAmount" => 0,
								"ReceivedTime" => "string",
								"TransactionID" => 0
							]
						],
						"ManifestID" => "string",
						"ManifestStopNumber" => 0,
						"OutboundLicense" => "string",
						"Received" => true,
						"ReceivedTime" => "string",
            "SessionTime" => 0,
            "TransactionID" => 0,
            "TransferType" => "string"
					]
				],
				"Invoice" => [
					[
						"Accepted" => true,
						"BuyerLocationLicense" => "string",
						"Deleted" => true,
						"Inventory" => [
							[
								"Amount" => 0,
								"Deleted" => true,
								"ID" => 0,
								"InventoryID" => "string",
								"InvoiceID" => "string",
								"Price" => 0,
								"TransactionID" => 0
							]
						],
						"InvoiceID" => "string",
						"LocationLicense" => "string",
						"Payment" => [
							[
								"Accepted" => true,
								"AcceptedLocationID" => "string",
								"AcceptedOn" => "string",
								"Amount" => 0,
								"BuyerLocationLicense" => "string",
								"BuyerUserID" => 0,
								"CreatedOn" => "string",
								"Deleted" => true,
								"ID" => 0,
								"InvoiceID" => "string",
								"Rejected" => true,
								"RejectedLocationLicense" => "string",
								"RejectedOn" => "string",
								"RejectedReason" => "string",
								"TransactionID" => 0,
								"UpdatedOn" => "string"
							]
						],
						"Refund" => true,
						"SessionTime" => 0,
						"TransactionID" => 0
					]
				],
				"RejectedData" => [
					[
						"Inventory" => [
							[
								"ActiveSampleInventoryID" => "string",
								"Deleted" => true,
								"Destroyed" => true,
								"Dried" => true,
								"ExpirationDate" => "string",
								"ExternalID" => "string",
								"ID" => "string",
								"Initial" => true,
								"InventoryParentID" => [
									"string"
								],
								"InventoryType" => 0,
								"IsSample" => true,
								"LabSample" => [
									[
										"Amount" => 0,
										"AmountUsed" => 0,
										"CertOfAnalysisHyperlink" => "string",
										"Deleted" => true,
										"ID" => 0,
										"InventoryID" => "string",
										"InventoryType" => 0,
										"LabLicense" => "string",
										"LocationLicense" => "string",
										"Medical" => true,
										"MedicalGrade" => true,
										"ParentID" => "string",
										"QualityControlDataHyperlink" => "string",
										"Result" => "string",
										"RnD" => true,
										"SampleUse" => "string",
										"SessionTime" => 0,
										"TestingData" => [
											[
												"LabAnalysisTime" => "2024-01-31T10:00:00.000Z",
												"SamplePreparationTime" => "2024-01-31T10:00:00.000Z",
												"TestID" => 0,
												"TestResult" => [
													[
														"LabProvided" => true,
														"TestPanel" => "string",
														"TestPass" => true,
														"TestValue" => 0,
														"TransactionID" => 0
													]
												]
											]
										]
									]
								],
								"LocationLicense" => "string",
								"MedUsableWeight" => 0,
								"Medicated" => true,
								"NetPackageWeight" => 0,
								"PackageDate" => "string",
								"ProductName" => "string",
								"ProductionBatchID" => 0,
								"QAStatus" => "string",
								"RecUsableWeight" => 0,
								"RemainingAmount" => 0,
								"Remediated" => true,
								"RemediationCount" => 0,
								"RemediationEligible" => true,
								"Restocked" => true,
								"Rework" => true,
								"RoomID" => 0,
								"Seized" => true,
								"SessionTime" => 0,
								"SourcePlantID" => "string",
								"StateProductIdentifier" => "string",
								"Status" => "string",
								"Strain" => "string",
								"TransactionID" => 0,
								"UOM" => "string",
								"UnitBased" => true,
								"UsableWeight" => 0
							]
						],
						"InventoryTransfer" => [
							[
								"Deleted" => true,
								"ID" => 0,
								"InboundLicense" => "string",
								"Invoice" => [
									"Accepted" => true,
									"BuyerLocationLicense" => "string",
									"Deleted" => true,
									"Inventory" => [
										[
											"Amount" => 0,
											"Deleted" => true,
											"ID" => 0,
											"InventoryID" => "string",
											"InvoiceID" => "string",
											"Price" => 0,
											"TransactionID" => 0
										]
									],
									"InvoiceID" => "string",
									"LocationLicense" => "string",
									"Payment" => [
										[
											"Accepted" => true,
											"AcceptedLocationID" => "string",
											"AcceptedOn" => "string",
											"Amount" => 0,
											"BuyerLocationLicense" => "string",
											"BuyerUserID" => 0,
											"CreatedOn" => "string",
											"Deleted" => true,
											"ID" => 0,
											"InvoiceID" => "string",
											"Rejected" => true,
											"RejectedLocationLicense" => "string",
											"RejectedOn" => "string",
											"RejectedReason" => "string",
											"TransactionID" => 0,
											"UpdatedOn" => "string"
										]
									],
									"Refund" => true,
									"SessionTime" => 0,
									"TransactionID" => 0
								],
								"InvoiceID" => "string",
								"IsRejected" => true,
								"Item" => [
									[
										"Amount" => 0,
										"Deleted" => true,
										"Description" => "string",
										"ID" => 0,
										"Inventory" => [
											"ActiveSampleInventoryID" => "string",
											"Deleted" => true,
											"Destroyed" => true,
											"Dried" => true,
											"ExpirationDate" => "string",
											"ExternalID" => "string",
											"ID" => "string",
											"Initial" => true,
											"InventoryParentID" => [
												"string"
											],
											"InventoryType" => 0,
											"IsSample" => true,
											"LabSample" => [
												[
													"Amount" => 0,
													"AmountUsed" => 0,
													"CertOfAnalysisHyperlink" => "string",
													"Deleted" => true,
													"ID" => 0,
													"InventoryID" => "string",
													"InventoryType" => 0,
													"LabLicense" => "string",
													"LocationLicense" => "string",
													"Medical" => true,
													"MedicalGrade" => true,
													"ParentID" => "string",
													"QualityControlDataHyperlink" => "string",
													"Result" => "string",
													"RnD" => true,
													"SampleUse" => "string",
													"SessionTime" => 0,
													"TestingData" => [
														[
															"LabAnalysisTime" => "2024-01-31T10:00:00.000Z",
															"SamplePreparationTime" => "2024-01-31T10:00:00.000Z",
															"TestID" => 0,
															"TestResult" => [
																[
																	"LabProvided" => true,
																	"TestPanel" => "string",
																	"TestPass" => true,
																	"TestValue" => 0,
																	"TransactionID" => 0
																]
															]
														]
													],
													"LocationLicense" => "string",
													"MedUsableWeight" => 0,
													"Medicated" => true,
													"NetPackageWeight" => 0,
													"PackageDate" => "string",
													"ProductName" => "string",
													"ProductionBatchID" => 0,
													"QAStatus" => "string",
													"RecUsableWeight" => 0,
													"RemainingAmount" => 0,
													"Remediated" => true,
													"RemediationCount" => 0,
													"RemediationEligible" => true,
													"Restocked" => true,
													"Rework" => true,
													"RoomID" => 0,
													"Seized" => true,
													"SessionTime" => 0,
													"SourcePlantID" => "string",
													"StateProductIdentifier" => "string",
													"Status" => "string",
													"Strain" => "string",
													"TransactionID" => 0,
													"UOM" => "string",
													"UnitBased" => true,
													"UsableWeight" => 0
												],
												"InventoryID" => "string",
												"InventoryTransferID" => 0,
												"IsRejected" => true,
												"IsReturn" => true,
												"ManifestID" => "string",
												"Received" => true,
												"ReceivedAmount" => 0,
												"ReceivedTime" => "string",
												"TransactionID" => 0
											]
										],
										"ManifestID" => "string",
										"ManifestStopNumber" => 0,
										"OutboundLicense" => "string",
										"Received" => true,
										"ReceivedTime" => "string",
										"SessionTime" => 0,
										"TransactionID" => 0,
										"TransferType" => "string"
									]
								],
								"Manifest" => [
									[
										"City" => "string",
										"Completed" => true,
										"CompletionDate" => "string",
										"CreatedOn" => "string",
										"Deleted" => true,
										"Driver" => [
											[
												"DateofBirth" => "string",
												"ID" => 0,
												"Name" => "string"
											]
										],
										"DriverArrived" => true,
										"InTransit" => true,
										"IsAccepted" => true,
										"IsParked" => true,
										"LicenseNumber" => "string",
										"Links" => [
											[
												"Href" => "string",
												"Method" => "string",
												"Rel" => "string"
											]
										],
										"ManifestID" => "string",
										"Name" => "string",
										"Phone" => "string",
										"Received" => true,
										"SessionTime" => 0,
										"State" => "string",
										"Stop" => [
											[
												"ApproximateArrival" => "2024-01-31T10:00:00.000Z",
												"ApproximateDeparture" => "2024-01-31T10:00:00.000Z",
												"ApproximateRoute" => "string",
												"City" => "string",
												"DriverArrived" => true,
												"DriverArrivedTime" => "string",
												"ID" => 0,
												"Invoice" => [
													[
														"Accepted" => true,
														"BuyerLocationLicense" => "string",
														"Deleted" => true,
														"Inventory" => [
															[
																"Amount" => 0,
																"Deleted" => true,
																"ID" => 0,
																"InventoryID" => "string",
																"InvoiceID" => "string",
																"Price" => 0,
																"TransactionID" => 0
															]
														],
														"InvoiceID" => "string",
														"LocationLicense" => "string",
														"Payment" => [
															[
																"Accepted" => true,
																"AcceptedLocationID" => "string",
																"AcceptedOn" => "string",
																"Amount" => 0,
																"BuyerLocationLicense" => "string",
																"BuyerUserID" => 0,
																"CreatedOn" => "string",
																"Deleted" => true,
																"ID" => 0,
																"InvoiceID" => "string",
																"Rejected" => true,
																"RejectedLocationLicense" => "string",
																"RejectedOn" => "string",
																"RejectedReason" => "string",
																"TransactionID" => 0,
																"UpdatedOn" => "string"
															]
														],
														"Refund" => true,
														"SessionTime" => 0,
														"TransactionID" => 0
													]
												],
												"InvoiceID" => "string",
												"Item" => [
													[
														"Deleted" => true,
														"Description" => "string",
														"ID" => 0,
														"InventoryID" => "string",
														"ManifestID" => "string",
														"Quantity" => 0,
														"QuantityReceived" => 0,
														"SessionTime" => 0,
														"StopNumber" => 0,
														"TransactionID" => 0
													]
												],
												"ItemsCount" => 0,
												"Links" => [
													[
														"Href" => "string",
														"Method" => "string",
														"Rel" => "string"
													]
												],
												"LocationLicense" => "string",
												"ManifestID" => "string",
												"Name" => "string",
												"ParkedTime" => "string",
												"Phone" => "string",
												"ResumedDirections" => "string",
												"ResumedEstimatedArrival" => "string",
												"ResumedEstimatedDeparture" => "string",
												"ResumedTime" => "string",
												"State" => "string",
												"StopNumber" => 0,
												"TransporterParked" => true,
												"TransporterResumed" => true,
												"ZipCode" => "string"
											]
										],
										"StopCount" => 0,
										"Street" => "string",
										"ThirdPartyTransporter" => [
											"LicenseNumber" => "string",
											"Name" => "string"
										],
										"TotalItemCount" => 0,
										"TransactionID" => 0,
										"Type" => "string",
										"UpdatedOn" => "string",
										"Vehicle" => [
											"Description" => "string",
											"ID" => "string"
										],
										"Zip" => "string"
									]
								],
								"SessionTime" => 0,
								"TransactionID" => 0
							]
							],
						"SessionTime" => 0,
						"TransactionID" => 0,
					]]]
					);
		});
		$a->post('/v1/lab/login', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				"Session" => "string",
			]);
		});
		$a->get('/v1/lab/sample', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				"LabSample" => [
					[
						"Amount" => 0,
						"AmountUsed" => 0,
						"CertOfAnalysisHyperlink" => "string",
						"Deleted" => true,
						"ID" => 0,
						"InventoryID" => "string",
						"InventoryType" => 0,
						"LabLicense" => "string",
						"LocationLicense" => "string",
						"Medical" => true,
						"MedicalGrade" => true,
						"ParentID" => "string",
						"QualityControlDataHyperlink" => "string",
						"Result" => "string",
						"RnD" => true,
						"SampleUse" => "string",
						"SessionTime" => 0,
						"TestingData" => [
							[
								"LabAnalysisTime" => "2024-01-31T10:00:00.000Z",
								"SamplePreparationTime" => "2024-01-31T10:00:00.000Z",
								"TestID" => 0,
								"TestResult" => [
									[
										"LabProvided" => true,
										"TestPanel" => "string",
										"TestPass" => true,
										"TestValue" => 0,
										"TransactionID" => 0
									]
								]
							]
						],
						"TransactionID" => 0
					]
				],
				"NextCursor" => 0,
				"NextTransactionID" => 0
			]);
		});
		$a->get('/v1/lab/sample/{id}', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				"LabSample" => [
					"Amount" => 0,
					"AmountUsed" => 0,
					"CertOfAnalysisHyperlink" => "string",
					"Deleted" => true,
					"ID" => 0,
					"InventoryID" => "string",
					"InventoryType" => 0,
					"LabLicense" => "string",
					"LocationLicense" => "string",
					"Medical" => true,
					"MedicalGrade" => true,
					"ParentID" => "string",
					"QualityControlDataHyperlink" => "string",
					"Result" => "string",
					"RnD" => true,
					"SampleUse" => "string",
					"SessionTime" => 0,
					"TestingData" => [
						[
							"LabAnalysisTime" => "2024-01-31T10:00:00.000Z",
							"SamplePreparationTime" => "2024-01-31T10:00:00.000Z",
							"TestID" => 0,
							"TestResult" => [
								[
									"LabProvided" => true,
									"TestPanel" => "string",
									"TestPass" => true,
									"TestValue" => 0,
									"TransactionID" => 0
								]
							]
						]
					],
					"TransactionID" => 0
				]
			]);
		});
		$a->post('/v1/lab/sample/{id}/result', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				"Inventory" => [
					[
						"ActiveSampleInventoryID" => "string",
						"Deleted" => true,
						"Destroyed" => true,
						"Dried" => true,
						"ExpirationDate" => "string",
						"ExternalID" => "string",
						"ID" => "string",
						"Initial" => true,
						"InventoryParentID" => [
							"string"
						],
						"InventoryType" => 0,
						"IsSample" => true,
						"LabSample" => [
							[
								"Amount" => 0,
								"AmountUsed" => 0,
								"CertOfAnalysisHyperlink" => "string",
								"Deleted" => true,
								"ID" => 0,
								"InventoryID" => "string",
								"InventoryType" => 0,
								"LabLicense" => "string",
								"LocationLicense" => "string",
								"Medical" => true,
								"MedicalGrade" => true,
								"ParentID" => "string",
								"QualityControlDataHyperlink" => "string",
								"Result" => "string",
								"RnD" => true,
								"SampleUse" => "string",
								"SessionTime" => 0,
								"TestingData" => [
									[
										"LabAnalysisTime" => "2024-01-31T10:00:00.000Z",
										"SamplePreparationTime" => "2024-01-31T10:00:00.000Z",
										"TestID" => 0,
										"TestResult" => [
											[
												"LabProvided" => true,
												"TestPanel" => "string",
												"TestPass" => true,
												"TestValue" => 0,
												"TransactionID" => 0
											]
										]
									]
								],
								"TransactionID" => 0
							]
						],
						"LocationLicense" => "string",
						"MedUsableWeight" => 0,
						"Medicated" => true,
						"NetPackageWeight" => 0,
						"PackageDate" => "string",
						"ProductName" => "string",
						"ProductionBatchID" => 0,
						"QAStatus" => "string",
						"RecUsableWeight" => 0,
						"RemainingAmount" => 0,
						"Remediated" => true,
						"RemediationCount" => 0,
						"RemediationEligible" => true,
						"Restocked" => true,
						"Rework" => true,
						"RoomID" => 0,
						"Seized" => true,
						"SessionTime" => 0,
						"SourcePlantID" => "string",
						"StateProductIdentifier" => "string",
						"Status" => "string",
						"Strain" => "string",
						"TransactionID" => 0,
						"UOM" => "string",
						"UnitBased" => true,
						"UsableWeight" => 0
					]
				],
				"LabSample" => [
					[
						"Amount" => 0,
						"AmountUsed" => 0,
						"CertOfAnalysisHyperlink" => "string",
						"Deleted" => true,
						"ID" => 0,
						"InventoryID" => "string",
						"InventoryType" => 0,
						"LabLicense" => "string",
						"LocationLicense" => "string",
						"Medical" => true,
						"MedicalGrade" => true,
						"ParentID" => "string",
						"QualityControlDataHyperlink" => "string",
						"Result" => "string",
						"RnD" => true,
						"SampleUse" => "string",
						"SessionTime" => 0,
						"TestingData" => [
							[
								"LabAnalysisTime" => "2024-01-31T10:00:00.000Z",
								"SamplePreparationTime" => "2024-01-31T10:00:00.000Z",
								"TestID" => 0,
								"TestResult" => [
									[
										"LabProvided" => true,
										"TestPanel" => "string",
										"TestPass" => true,
										"TestValue" => 0,
										"TransactionID" => 0
									]
								]
							]
						],
						"TransactionID" => 0
					]
				],
				"TransactionID" => 0
			]);
		});
		$a->put('/v1/lab/sample/{id}/result', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				"Inventory" => [
					[
						"ActiveSampleInventoryID" => "string",
						"Deleted" => true,
						"Destroyed" => true,
						"Dried" => true,
						"ExpirationDate" => "string",
						"ExternalID" => "string",
						"ID" => "string",
						"Initial" => true,
						"InventoryParentID" => ["string"],
						"InventoryType" => 0,
						"IsSample" => true,
						"LabSample" => [
							[
								"Amount" => 0,
								"AmountUsed" => 0,
								"CertOfAnalysisHyperlink" => "string",
								"Deleted" => true,
								"ID" => 0,
								"InventoryID" => "string",
								"InventoryType" => 0,
								"LabLicense" => "string",
								"LocationLicense" => "string",
								"Medical" => true,
								"MedicalGrade" => true,
								"ParentID" => "string",
								"QualityControlDataHyperlink" => "string",
								"Result" => "string",
								"RnD" => true,
								"SampleUse" => "string",
								"SessionTime" => 0,
								"TestingData" => [
									[
										"LabAnalysisTime" => "2024-01-31T10:00:00.000Z",
										"SamplePreparationTime" => "2024-01-31T10:00:00.000Z",
										"TestID" => 0,
										"TestResult" => [
											[
												"LabProvided" => true,
												"TestPanel" => "string",
												"TestPass" => true,
												"TestValue" => 0,
												"TransactionID" => 0
											]
										]
									]
								],
								"TransactionID" => 0
							]
						],
						"LocationLicense" => "string",
						"MedUsableWeight" => 0,
						"Medicated" => true,
						"NetPackageWeight" => 0,
						"PackageDate" => "string",
						"ProductName" => "string",
						"ProductionBatchID" => 0,
						"QAStatus" => "string",
						"RecUsableWeight" => 0,
						"RemainingAmount" => 0,
						"Remediated" => true,
						"RemediationCount" => 0,
						"RemediationEligible" => true,
						"Restocked" => true,
						"Rework" => true,
						"RoomID" => 0,
						"Seized" => true,
						"SessionTime" => 0,
						"SourcePlantID" => "string",
						"StateProductIdentifier" => "string",
						"Status" => "string",
						"Strain" => "string",
						"TransactionID" => 0,
						"UOM" => "string",
						"UnitBased" => true,
						"UsableWeight" => 0
					]
				],
				"LabSample" => [
					[
						"Amount" => 0,
						"AmountUsed" => 0,
						"CertOfAnalysisHyperlink" => "string",
						"Deleted" => true,
						"ID" => 0,
						"InventoryID" => "string",
						"InventoryType" => 0,
						"LabLicense" => "string",
						"LocationLicense" => "string",
						"Medical" => true,
						"MedicalGrade" => true,
						"ParentID" => "string",
						"QualityControlDataHyperlink" => "string",
						"Result" => "string",
						"RnD" => true,
						"SampleUse" => "string",
						"SessionTime" => 0,
						"TestingData" => [
							[
								"LabAnalysisTime" => "2024-01-31T10:00:00.000Z",
								"SamplePreparationTime" => "2024-01-31T10:00:00.000Z",
								"TestID" => 0,
								"TestResult" => [
									[
										"LabProvided" => true,
										"TestPanel" => "string",
										"TestPass" => true,
										"TestValue" => 0,
										"TransactionID" => 0
									]
								]
							]
						],
						"TransactionID" => 0
					]
				],
				"TransactionID" => 0
			]);
		});
		$a->get('/v1/lab/test', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				"Test" => [
					[
						"ID" => 0,
						"Name" => "string",
						"Panels" => [
							[
								"AddToTotal" => true,
								"InventoryType" => 0,
								"Name" => "string",
								"PassFailCondition" => "string",
								"PassFailConditional" => true,
								"PassFailLimit" => "string",
								"TestValueRecordOnly" => true,
								"TotalPanel" => true,
								"UOM" => "string"
							]
						]
					]
				]
			]);
		});
		$a->get('/v1/lab/test/medical/{id}', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				"Test" => [
					[
						"ID" => 0,
						"Name" => "string",
						"Panels" => [
							[
								"AddToTotal" => true,
								"InventoryType" => 0,
								"Name" => "string",
								"PassFailCondition" => "string",
								"PassFailConditional" => true,
								"PassFailLimit" => "string",
								"TestValueRecordOnly" => true,
								"TotalPanel" => true,
								"UOM" => "string"
							]
						]
					]
				]
			]);
		});
		$a->get('/v1/lab/test/{id}', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				"Test" => [
					[
						"ID" => 0,
						"Name" => "string",
						"Panels" => [
							[
								"AddToTotal" => true,
								"InventoryType" => 0,
								"Name" => "string",
								"PassFailCondition" => "string",
								"PassFailConditional" => true,
								"PassFailLimit" => "string",
								"TestValueRecordOnly" => true,
								"TotalPanel" => true,
								"UOM" => "string"
							]
						]
					]
				]
			]);
		});
		$a->get('/v1/lab/user', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				"LabUsers" => [
					[
						"Active" => true,
						"Admin" => true,
						"ID" => 0,
						"TransactionID" => 0,
						"Username" => "string"
					]
				],
				"NextCursor" => 0,
				"NextTransactionID" => 0
			]);
		});
		$a->post('/v1/lab/user', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				"LabUser" => [
					"Active" => true,
					"Admin" => true,
					"ID" => 0,
					"Username" => "string"
				],
				"SessionTime" => 0,
				"TransactionID" => 0
			]);
		});
		$a->post('/v1/lab/user/password-reset-request', function($REQ, $RES, $ARG) {
			// No 200 response documented
			return $RES->withJSON();
		});
		$a->delete('/v1/lab/user/{id}', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				"LabUser" => [
					"Active" => true,
					"Admin" => true,
					"ID" => 0,
					"Username" => "string"
				],
				"SessionTime" => 0,
				"TransactionID" => 0
			]);
		});
		$a->get('/v1/lab/user/{id}', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				"LabUser" => [
					"Active" => true,
					"Admin" => true,
					"ID" => 0,
					"TransactionID" => 0,
					"Username" => "string"
				]
			]);
		});
		$a->put('/v1/lab/user/{id}', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				"LabUser" => [
					"Active" => true,
					"Admin" => true,
					"ID" => 0,
					"Username" => "string"
				],
				"SessionTime" => 0,
				"TransactionID" => 0
			]);
		});

		// Unit of Measure
		$a->get('/v1/uom', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				"uom" => [
					"string"
				]
			]);
		});

		// Sync
		$a->get('/v1/sync', function($REQ, $RES, $ARG) {
			return $RES->withJSON([
				"SessionTime" => 0,
				"Sync" => [
					"CureDerivative" => 0,
					"Derivative" => 0,
					"Employee" => 0,
					"GrowRoom" => 0,
					"HarvestBatch" => 0,
					"HarvestDerivative" => 0,
					"Inventory" => 0,
					"InventoryAdjustment" => 0,
					"InventoryIngredient" => 0,
					"InventoryRoom" => 0,
					"InventoryTransfer" => 0,
					"Invoice" => 0,
					"Lab" => 0,
					"LabSample" => 0,
					"Manifest" => 0,
					"Plant" => 0,
					"PlantCure" => 0,
					"PlantHarvest" => 0,
					"Sale" => 0,
					"User" => 0,
					"Vehicle" => 0,
					"Vendor" => 0
				]
			]);
		});

	}
}
